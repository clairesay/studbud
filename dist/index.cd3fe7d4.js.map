{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./node_modules/@parcel/runtime-js/lib/JSRuntime.js","./node_modules/@parcel/runtime-js/lib/bundle-url.js","./node_modules/@parcel/runtime-js/lib/relative-path.js","./public/js/music.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _plugin() {\n  const data = require(\"@parcel/plugin\");\n\n  _plugin = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _utils() {\n  const data = require(\"@parcel/utils\");\n\n  _utils = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _nullthrows() {\n  const data = _interopRequireDefault(require(\"nullthrows\"));\n\n  _nullthrows = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n}; // Used for as=\"\" in preload/prefetch\n\nconst TYPE_TO_RESOURCE_PRIORITY = {\n  css: 'style',\n  js: 'script'\n};\nconst BROWSER_PRELOAD_LOADER = './loaders/browser/preload-loader';\nconst BROWSER_PREFETCH_LOADER = './loaders/browser/prefetch-loader';\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n} // This cache should be invalidated if new dependencies get added to the bundle without the bundle objects changing\n// This can happen when we reuse the BundleGraph between subsequent builds\n\n\nlet bundleDependencies = new WeakMap();\n\nvar _default = new (_plugin().Runtime)({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let {\n      asyncDependencies,\n      otherDependencies\n    } = getDependencies(bundle);\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        if (!bundle.env.shouldScopeHoist) {\n          // If this bundle already has the asset this dependency references,\n          // return a simple runtime of `Promise.resolve(internalRequire(assetId))`.\n          // The linker handles this for scope-hoisting.\n          assets.push({\n            filePath: __filename,\n            code: `module.exports = Promise.resolve(module.bundle.root(${JSON.stringify(bundleGraph.getAssetPublicId(resolved.value))}))`,\n            dependency\n          });\n        }\n      } else {\n        let loaderRuntime = getLoaderRuntime({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value,\n          options\n        });\n\n        if (loaderRuntime != null) {\n          assets.push(loaderRuntime);\n        }\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      // Resolve the dependency to a bundle. If inline, export the dependency id,\n      // which will be replaced with the contents of that bundle later.\n      let referencedBundle = bundleGraph.getReferencedBundle(dependency, bundle);\n\n      if (referencedBundle !== null && referencedBundle !== void 0 && referencedBundle.isInline) {\n        assets.push({\n          filePath: _path().default.join(__dirname, `/bundles/${referencedBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // Otherwise, try to resolve the dependency to an external bundle group\n      // and insert a URL to that bundle.\n\n\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows().default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let entries = b.getEntryAssets();\n        return entries.some(e => bundleGroup.entryAssetId === e.id);\n      }));\n\n      if (bundle.env.outputFormat === 'commonjs' && mainBundle.type === 'js') {\n        assets.push({\n          filePath: __filename,\n          dependency,\n          code: `module.exports = require(\"./\" + ${getRelativePathExpr(bundle, mainBundle, options)})`\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle, options));\n    } // In development, bundles can be created lazily. This means that the parent bundle may not\n    // know about all of the sibling bundles of a child when it is written for the first time.\n    // Therefore, we need to also ensure that the siblings are loaded when the child loads.\n\n\n    if (options.shouldBuildLazily && bundle.env.outputFormat === 'global') {\n      let referenced = bundleGraph.getReferencedBundles(bundle).filter(b => !b.isInline);\n\n      for (let referencedBundle of referenced) {\n        let loaders = getLoaders(bundle.env);\n\n        if (!loaders) {\n          continue;\n        }\n\n        let loader = loaders[referencedBundle.type];\n\n        if (!loader) {\n          continue;\n        }\n\n        let relativePathExpr = getRelativePathExpr(bundle, referencedBundle, options);\n        let loaderCode = `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n        assets.push({\n          filePath: __filename,\n          code: loaderCode,\n          isEntry: true\n        });\n      }\n    }\n\n    if (shouldUseRuntimeManifest(bundle, options) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getDependencies(bundle) {\n  let cachedDependencies = bundleDependencies.get(bundle);\n\n  if (cachedDependencies) {\n    return cachedDependencies;\n  } else {\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    bundleDependencies.set(bundle, {\n      asyncDependencies,\n      otherDependencies\n    });\n    return {\n      asyncDependencies,\n      otherDependencies\n    };\n  }\n}\n\nfunction getLoaderRuntime({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph,\n  options\n}) {\n  let loaders = getLoaders(bundle.env);\n\n  if (loaders == null) {\n    return;\n  }\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline);\n  let mainBundle = (0, _nullthrows().default)(externalBundles.find(bundle => {\n    var _bundle$getMainEntry;\n\n    return ((_bundle$getMainEntry = bundle.getMainEntry()) === null || _bundle$getMainEntry === void 0 ? void 0 : _bundle$getMainEntry.id) === bundleGroup.entryAssetId;\n  })); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n  // Also do this when building lazily or the runtime itself could get deduplicated and only\n  // exist in the parent. This causes errors if an old version of the parent without the runtime\n  // is already loaded.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary || options.shouldBuildLazily) {\n    externalBundles = [mainBundle];\n  } else {\n    // Otherwise, load the bundle group entry after the others.\n    externalBundles.splice(externalBundles.indexOf(mainBundle), 1);\n    externalBundles.reverse().push(mainBundle);\n  } // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to, options); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows().default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    let code = `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`; // In development, clear the require cache when an error occurs so the\n    // user can try again (e.g. after fixing a build error).\n\n    if (options.mode === 'development' && bundle.env.outputFormat === 'global') {\n      code += '.catch(err => {delete module.bundle.cache[module.id]; throw err;})';\n    }\n\n    return code;\n  }).filter(Boolean);\n\n  if (bundle.env.context === 'browser' && !options.shouldBuildLazily) {\n    loaderModules.push(...externalBundles // TODO: Allow css to preload resources as well\n    .filter(to => to.type === 'js').flatMap(from => {\n      let {\n        preload,\n        prefetch\n      } = getHintedBundleGroups(bundleGraph, from);\n      return [...getHintLoaders(bundleGraph, bundle, preload, BROWSER_PRELOAD_LOADER, options), ...getHintLoaders(bundleGraph, bundle, prefetch, BROWSER_PREFETCH_LOADER, options)];\n    }));\n  }\n\n  if (loaderModules.length === 0) {\n    return;\n  }\n\n  let loaderCode = loaderModules.join(', ');\n\n  if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n    loaderCode = `Promise.all([${loaderCode}])`;\n\n    if (bundle.env.outputFormat !== 'global') {\n      loaderCode += `.then(r => r[r.length - 1])`;\n    }\n  } else {\n    loaderCode = `(${loaderCode})`;\n  }\n\n  if (bundle.env.outputFormat === 'global' && mainBundle.type === 'js') {\n    loaderCode += `.then(() => module.bundle.root('${bundleGraph.getAssetPublicId(bundleGraph.getAssetById(bundleGroup.entryAssetId))}')${// In global output with scope hoisting, functions return exports are\n    // always returned. Otherwise, the exports are returned.\n    bundle.env.shouldScopeHoist ? '()' : ''})`;\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = ${loaderCode};`,\n    dependency\n  };\n}\n\nfunction getHintedBundleGroups(bundleGraph, bundle) {\n  let preload = [];\n  let prefetch = [];\n  let {\n    asyncDependencies\n  } = getDependencies(bundle);\n\n  for (let dependency of asyncDependencies) {\n    var _dependency$meta;\n\n    let attributes = (_dependency$meta = dependency.meta) === null || _dependency$meta === void 0 ? void 0 : _dependency$meta.importAttributes;\n\n    if (typeof attributes === 'object' && attributes != null && ( // $FlowFixMe\n    attributes.preload || attributes.prefetch)) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if ((resolved === null || resolved === void 0 ? void 0 : resolved.type) === 'bundle_group') {\n        // === true for flow\n        if (attributes.preload === true) {\n          preload.push(resolved.value);\n        }\n\n        if (attributes.prefetch === true) {\n          prefetch.push(resolved.value);\n        }\n      }\n    }\n  }\n\n  return {\n    preload,\n    prefetch\n  };\n}\n\nfunction getHintLoaders(bundleGraph, from, bundleGroups, loader, options) {\n  let hintLoaders = [];\n\n  for (let bundleGroupToPreload of bundleGroups) {\n    let bundlesToPreload = bundleGraph.getBundlesInBundleGroup(bundleGroupToPreload);\n\n    for (let bundleToPreload of bundlesToPreload) {\n      let relativePathExpr = getRelativePathExpr(from, bundleToPreload, options);\n      let priority = TYPE_TO_RESOURCE_PRIORITY[bundleToPreload.type];\n      hintLoaders.push(`require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr}, ${priority ? JSON.stringify(priority) : 'null'}, ${JSON.stringify(bundleToPreload.target.env.outputFormat === 'esmodule')})`);\n    }\n  }\n\n  return hintLoaders;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  let parents = bundleGraph.getParentBundles(bundle);\n  return bundle.isEntry || parents.length === 0 || parents.some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to, options) {\n  let relativePathExpr = getRelativePathExpr(from, to, options);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[bundle.publicId] = (0, _nullthrows().default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to, options) {\n  if (shouldUseRuntimeManifest(from, options)) {\n    return `require('./relative-path')(${JSON.stringify(from.publicId)}, ${JSON.stringify(to.publicId)})`;\n  }\n\n  return JSON.stringify((0, _utils().relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle, options) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser() && options.mode === 'production';\n}","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","// Import the URL to an image file\r\nimport music from \"url:../audio/songs/BEAST.mp3\";\r\n\r\n// import allMusic from \"url:../audio/songs/*.mp3\";\r\n\r\n// https://github.com/sampotts/plyr/#options\r\nconst player = new Plyr('audio', {\r\n    controls: ['progress']\r\n});\r\n\r\n// Expose player so it can be used from the console\r\nwindow.player = player;\r\n\r\n// music, artists and album art all drawn from the open source music sight Free Music Archive https://freemusicarchive.org/home\r\nvar songs = [\r\n    {\r\n        source: music,\r\n        title: 'Amerika',\r\n        artist: 'Audiobinger',\r\n        album_art: './audiobinger.jpg'\r\n    },\r\n    {\r\n        source: 'If-I-Could-Remember.mp3',\r\n        title: 'If I Could Remember',\r\n        artist: 'Ketsa',\r\n        album_art: 'images\\albumart\\Ketsa.jpg'\r\n    },\r\n    // {\r\n    //     source: 'audio\\songs\\Ketsa - Snow-Dawn.mp3',\r\n    //     title: 'Snow Dawn',\r\n    //     artist: 'Ketsa',\r\n    //     album_art: 'images\\albumart\\Ketsa.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'Synchronised.mp3',\r\n    //     title: 'Synchronised',\r\n    //     artist: 'Ketsa',\r\n    //     album_art: 'images\\albumart\\Ketsa.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'Pray.mp3',\r\n    //     title: 'Pray',\r\n    //     artist: 'Makaih Beats',\r\n    //     album_art: 'images\\albumart\\makaih Beats.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'BEAST.mp3',\r\n    //     title: 'BEAST',\r\n    //     artist: 'Paul Cesar Beats',\r\n    //     album_art: 'images\\albumart\\paul-cesar-beats.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'COFFEE FI.mp3',\r\n    //     title: 'COFFEE FI',\r\n    //     artist: 'Paul Cesar Beats',\r\n    //     album_art: 'images\\albumart\\paul-cesar-beats.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'Chuckin-It.mp3',\r\n    //     title: 'Chuckin It',\r\n    //     artist: 'Shaolin Dub',\r\n    //     album_art: 'images\\albumart\\shaolin-dub3.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'Dogman.mp3',\r\n    //     title: 'Dogman',\r\n    //     artist: 'Shaolin Dub',\r\n    //     album_art: 'images\\albumart\\shaolin-dub.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'Moods.mp3',\r\n    //     title: 'Moods',\r\n    //     artist: 'Shaolin Dub',\r\n    //     album_art: 'images\\albumart\\shaolin-dub2.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'Point-Pleasant.mp3',\r\n    //     title: 'Point Pleasant',\r\n    //     artist: 'Shaolin Dub',\r\n    //     album_art: 'images\\albumart\\shaolin-dub.jpg'\r\n    // },\r\n    // {\r\n    //     source: 'Empire-of-Light.mp3',\r\n    //     title: 'Empire of Light',\r\n    //     artist: 'Siddhartha Corsus',\r\n    //     album_art: 'images\\albumart\\siddharthacorsus.jpg'\r\n    // },\r\n]\r\n\r\nconst musicPlayer = document.querySelector('#music')\r\nvar audioContainer = musicPlayer.querySelector('audio')\r\nconst playlistContainer = musicPlayer.querySelector('ul.playlist')\r\nconst previousButton = musicPlayer.querySelector('#previous')\r\nconst nextButton = musicPlayer.querySelector('#next')\r\nconst shuffleButton = musicPlayer.querySelector('#shuffle')\r\nvar playButton = musicPlayer.querySelector('#play-pause')\r\n\r\n// on click, toggle play or pause\r\nplayButton.addEventListener('click', function(event) {\r\n    event.stopPropagation()\r\n    player.togglePlay()\r\n    buttonIcon()\r\n})\r\n\r\n// replace the SVG of the button icon pending its status (playing or paused)\r\nfunction buttonIcon() {\r\n    if (player.paused) {\r\n        playButton.innerHTML = `<svg width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M0 0V21L18 10.5L0 0Z\" fill=\"#303030\"/>\r\n        </svg>`\r\n    } else if (player.playing) {\r\n        playButton.innerHTML = `<svg width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M0 21H6V0H0V21ZM12 0V21H18V0H12Z\" fill=\"#303030\"/>\r\n        </svg>`\r\n    }\r\n}\r\n\r\nvar tracks;\r\n// autopopulating the playlist based on the music available\r\nfunction addMusic() {\r\n    // for each of the songs, create a list item and populate with semantic elements\r\n    songs.forEach(function (song, index) {\r\n        let songListItem = document.createElement('li'),\r\n            albumArt = document.createElement('img'),\r\n            title = document.createElement('h3'),\r\n            artist = document.createElement('h4');\r\n\r\n        // set the source based on the object\r\n        albumArt.setAttribute('src', song.album_art)\r\n        title.textContent = song.title\r\n        artist.textContent = song.artist\r\n\r\n        // append each element to the list item, and then the list to the container\r\n        title.appendChild(artist)\r\n        songListItem.appendChild(albumArt)\r\n        songListItem.appendChild(title)\r\n        playlistContainer.appendChild(songListItem)\r\n\r\n        // add event listener\r\n        songListItem.addEventListener('click', function () { playTrack(index) })\r\n    })\r\n    tracks = musicPlayer.querySelectorAll('li')\r\n}\r\naddMusic()\r\n\r\n// if the user clicks previous butotn \r\npreviousButton.addEventListener('click', function (event) {\r\n    event.stopPropagation()\r\n    let songIndex;\r\n    // set the song index to one below, or the last song in the list if the user is at index 0\r\n    if (currentIndex == 0) {\r\n        songIndex = songs.length - 1\r\n    } else {\r\n        songIndex = currentIndex - 1\r\n    }\r\n    // play the track\r\n    playTrack(songIndex)\r\n})\r\n\r\n// if the user clicks next button\r\nnextButton.addEventListener('click', function (event) {\r\n    event.stopPropagation()\r\n    let songIndex;\r\n    // set the song index to one above, or the first song in the list if the user is at the last song\r\n    if (currentIndex == songs.length - 1) {\r\n        songIndex = 0\r\n    } else {\r\n        songIndex = currentIndex + 1\r\n    }\r\n    // play the track\r\n    playTrack(songIndex)\r\n})\r\n\r\n// if hitting shuffle, this randomises the song array's order.\r\nshuffleButton.addEventListener('click', function (event) {\r\n    event.stopPropagation()\r\n    // shuffling array src: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    for (i = songs.length - 1; i > 0; i --) {\r\n        // generate random number\r\n        var j = Math.floor(Math.random() * (i + 1))\r\n        // assign the current item to a random\r\n        var temporaryValue = songs[i]\r\n        songs[i] = songs[j]\r\n        songs[j] = temporaryValue\r\n    }\r\n\r\n    // re-populate the playlist\r\n    playlistContainer.innerHTML = ''\r\n    addMusic()\r\n    // play the first song\r\n    playTrack(0)\r\n})\r\n\r\nvar currentIndex;\r\n// this phantom button shows up to give perceived affordance of playing a song\r\nvar phantomPlayButton = document.getElementById('phantom-play-button')\r\n\r\n// function to play a track\r\nfunction playTrack(n, mode) {\r\n    // if we are at the end of the playlist, stop playing. \r\n    if (n == songs.length) {\r\n        currentIndex = n = 0\r\n        mode = 'initial'\r\n    }\r\n    // adding the appropriate style to the item that is currently playing\r\n    tracks[n].classList.add('active')\r\n    // and removing that class to absolutely everything else\r\n    tracks.forEach(function (track, index) {\r\n        if (index != n) {\r\n            track.classList.remove('active')\r\n        }\r\n        if (track.getAttribute('listener') != 'true') {\r\n            track.addEventListener('mouseover', function() {\r\n                track.appendChild(phantomPlayButton)\r\n                if (track.classList.contains('active')) {\r\n                    phantomPlayButton.style.display = 'none'\r\n                } else {\r\n                    phantomPlayButton.style.display = 'flex'\r\n                }\r\n\r\n            })\r\n            track.setAttribute('listener', 'true')\r\n        }\r\n    })\r\n    // moving that track to the bottom of the playlist \r\n    playlistContainer.appendChild(tracks[n])\r\n    // updating global variable\r\n    currentIndex = n\r\n    // get the current song object\r\n    let currentSong = songs[n]\r\n    // selecting all the current elements\r\n    let currentContainer = document.getElementById('current'),\r\n        currentAlbumArt = currentContainer.querySelector('img'),\r\n        currentTitle = document.querySelector('h1.title'),\r\n        currentArtist = document.querySelector('h3.artist'),\r\n        currentSource = document.createElement('source');\r\n\r\n    // populate the current container with the appropriate elements\r\n    currentSource.setAttribute('type', 'audio/mp3')\r\n    currentSource.setAttribute('src', currentSong.source)\r\n    audioContainer.innerHTML = ''\r\n    audioContainer.appendChild(currentSource)\r\n    // audioContainer.innerHTML = `<source src=\"` + currentSong.source + `\" type=\"audio/mp3\">`\r\n    currentAlbumArt.setAttribute('src', currentSong.album_art)\r\n    currentTitle.textContent = currentSong.title\r\n    currentArtist.textContent = currentSong.artist\r\n\r\n    // replace the player's source and play\r\n    player.source = {\r\n        type: 'audio',\r\n        title: currentSong.title,\r\n        sources: [\r\n            {\r\n                src: currentSong.source,\r\n            }\r\n        ],\r\n\r\n    };\r\n    // if we are initialising, don't play any music, otherwise, play and set static status to false\r\n    if (mode != 'initial') {\r\n        musicPlayer.setAttribute('static', 'false')\r\n        player.play();\r\n    }\r\n    buttonIcon()\r\n\r\n}\r\nplayTrack(0, 'initial')\r\n\r\n// events https://github.com/sampotts/plyr#events\r\nplayer.on('playing', () => {\r\n    musicPlayer.setAttribute('static', 'false')\r\n})\r\nplayer.on('pause', () => {\r\n    musicPlayer.setAttribute('static', 'true')\r\n})\r\nplayer.on('ended', () => {\r\n    playTrack(currentIndex + 1)\r\n    musicPlayer.setAttribute('static', 'true')\r\n});\r\n\r\n// borrowed code for detecting scroll directionhttps://stackoverflow.com/questions/31223341/detecting-scroll-direction\r\nvar lastScrollTop = 0;\r\nvar scrollCount = 0;\r\n\r\n// if the user scrolls down, the playlist is expanded. if tehy scroll to the top, the playlist is condensed\r\nplaylistContainer.addEventListener(\"scroll\", function(){ // or window.addEventListener(\"scroll\"....\r\n   var st = playlistContainer.scrollTop; // Credits: \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n   if (st > lastScrollTop){\r\n      scrollCount += 1\r\n   } else if (st  == 0) {\r\n      // upscroll code\r\n    setTimeout(function() {\r\n        playlistContainer.style.height = '100px';\r\n    }, 500)\r\n      \r\n   }\r\n   if (scrollCount > 5) {\r\n      playlistContainer.style.height = '250px';\r\n      scrollCount = 0\r\n   } \r\n\r\n   lastScrollTop = st <= 0 ? 0 : st; // For Mobile or negative scrolling\r\n}, false);\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$7d806a7a603c235ec027b73d847f4d95$var$mapping","id","resolved","Error","pairs","keys","Object","i","length","JSON","parse","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","err","matches","stack","match","replace","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$resolve","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slice","slashIndex","lastIndexOf","$824bc590bf0a3702ac7bd27152cb0639$var$relative","from","to","fromParts","split","shift","divergeIndex","toParts","parts","push","apply","join","fromId","toId","_dirname","_relative","$a8b34d36d494f1f42a7ad29c46ad706b$var$player","Plyr","controls","window","player","$a8b34d36d494f1f42a7ad29c46ad706b$var$songs","source","title","artist","album_art","$a8b34d36d494f1f42a7ad29c46ad706b$var$musicPlayer","document","querySelector","$a8b34d36d494f1f42a7ad29c46ad706b$var$audioContainer","$a8b34d36d494f1f42a7ad29c46ad706b$var$playlistContainer","$a8b34d36d494f1f42a7ad29c46ad706b$var$previousButton","$a8b34d36d494f1f42a7ad29c46ad706b$var$nextButton","$a8b34d36d494f1f42a7ad29c46ad706b$var$shuffleButton","$a8b34d36d494f1f42a7ad29c46ad706b$var$tracks","$a8b34d36d494f1f42a7ad29c46ad706b$var$currentIndex","$a8b34d36d494f1f42a7ad29c46ad706b$var$playButton","$a8b34d36d494f1f42a7ad29c46ad706b$var$buttonIcon","paused","innerHTML","playing","$a8b34d36d494f1f42a7ad29c46ad706b$var$addMusic","forEach","song","index","songListItem","createElement","albumArt","setAttribute","textContent","appendChild","addEventListener","$a8b34d36d494f1f42a7ad29c46ad706b$var$playTrack","querySelectorAll","event","stopPropagation","togglePlay","songIndex","j","Math","floor","random","temporaryValue","$a8b34d36d494f1f42a7ad29c46ad706b$var$phantomPlayButton","getElementById","n","mode","classList","add","track","remove","getAttribute","contains","style","display","currentSong","currentAlbumArt","currentTitle","currentArtist","currentSource","type","sources","src","play","on","$a8b34d36d494f1f42a7ad29c46ad706b$var$lastScrollTop","$a8b34d36d494f1f42a7ad29c46ad706b$var$scrollCount","st","scrollTop","setTimeout","height"],"version":3,"file":"index.cd3fe7d4.js.map"}