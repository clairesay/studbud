{"version":3,"sources":["js/group.js","js/resource.js","js/group-form.js"],"names":["Group","id","name","group","document","querySelector","cloneNode","style","display","groupName","groupLink","editButton","deleteButton","value","removeAttribute","setAttribute","classList","remove","tiles","querySelectorAll","forEach","tile","content","getElementById","appendChild","scrollTo","top","clientHeight","left","behavior","countTiles","groups","total","tileContainers","openLinkSVG","count","object","index","tileCount","i","length","innerHTML","add","emptyStateMessage","openGroupLinks","groupLinks","getAttribute","addEventListener","links","parentElement","link","url","window","open","resource","createContentForm","modalBackground","addGroupForm","newGroupToggle","newGroup","updateGroupNames","groupNames","newOption","createElement","textContent","toggleGroupForm","validateText","reset","groupCancelButton","groupCloseButton","nextElementSibling","groupSubmitButton","event","preventDefault","Date","now","createGroup","groupEditDeleteFunctionality","groupTitles","groupTitle","editGroupButton","deleteGroupButton","groupNameInput","focus","key","blur","groupEditToolTip","newToolTip","getElementsByClassName","groupDeleteToolTip"],"mappings":";;AEAA;;AACA;;;;ADDA;AACO,SAAS8B,UAAT,GAAsB;AACzB,MAAIC,MAAM,GAAG3B,QAAQ,CAACe,gBAAT,CAA0B,QAA1B,CAAb;AAAA,MACIa,KAAK,GAAG5B,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CADZ;ACCJ,ADDI,MAEIc,cAAc,GAAG7B,QAAQ,CAACe,gBAAT,CAA0B,QAA1B,CAFrB;ACEJmC,ADFI,IDFEtD,ECKEkB,ECDA,CAACY,EDCI,GAAG1B,KCDhB,GDCwB,CCCxB,ADDyBe,gBAAT,CAA0B,OAA1B,CAHZ;ADDA,ACCA,MAIIe,WDLQjC,ACKG,EDLf,EAAgBC,IAAhB,EAAsB,6SCCtB,CADyB,CASzB;ACHJ,AFN0B,ACUtB,ICJEqD,iBAAiB,GAAGnD,QAAQ,CAACmB,cAAT,CAAwB,qBAAxB,CAA1B;AACA,IAAMiC,eAAe,GAAGpD,QAAQ,CAACmB,cAAT,CAAwB,kBAAxB,CAAxB;AACA,AFPQ,ACUJS,EAAAA,ECHEyB,GDGG,CAACrC,CDVGnB,EAAL,GAAUA,CCUd,CCHc,AFPV,ACUU,GCHGG,MDGM+B,ECHE,CAACZ,EDGZ,CAAea,MAAf,EAAuBC,GCHpB,CAAwB,CDG3B,EAA8B,aCH3B,CAArB;AACA,AFPQ,ACUA,ICHJqB,IDGQpB,CDVCpC,IAAL,GAAYA,CCUC,CCHH,EFPV,ACUgB,CCHH,ADGb,CADwC,CAExC,GCJR;AACA,AFPK,IEOCyD,QAAQ,GAAGvD,QAAQ,CAACmB,cAAT,CAAwB,WAAxB,CAAjB,EAEA;ADEQ,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,cAAc,CAACI,KAAD,CAAd,CAAsBlB,gBAAtB,CAAuC,OAAvC,EAAgDqB,MAApE,EAA4ED,CAAC,EAA7E,EAAkF;ACD1F,ADEY,SCFHqB,CDEO3B,cAAc,CCF9B,ADE+BI,GCFH,EDEE,CAAd,CAAsBlB,gBAAtB,CAAuC,OAAvC,EAAgDoB,CAAhD,EAAmDvB,SAAnD,CAA6DwB,MAA7D,IAAuE,CAA3E,EAA8E;ACDtF,ADEYF,MCFRuB,EDEQvB,QCFE,CDEO,ECFJlC,EDEQ,CAAb,KCFa,CAACe,gBAAT,CAA0B,aAA1B,CAAjB;AACA,ADES,MCFLY,KFVJ,CEUU,GAAGwB,iBAAiB,CAAClD,CFVjB,YEUD,CAAgC,oBAAhC,CAAb;AACA0B,AFVI,ACYC,ECFLA,GDL4C,CAQxC,ECHE,CAACU,SAAP,GAAmB,EAAnB,CAHwB,CAIxB;AFVI,UAAItC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAZ;AEWJwD,AFVI1D,EEUJ0D,IFVI1D,KAAK,CEUC,CAACiB,CFVCjB,KAAK,CEUjB,AFVkBG,CEUC,QFVP,CAAgB,CEUC8B,GFVjB,CAAR,EEUe,EAAkB;AACjC,AFVAjC,ACWA,MDXAA,EEUI2D,ADCAxB,GDXC,CAAC/B,KEUO,AFVb,ACWa,CDXDC,EEUIJ,CDCC,CAAjB,EAAoB,CDXpB,GEUwB,AFVF,CEUG2D,KFVzB,CAJU,CAMV,MEQgB,CAAuB,QAAvB,CAAhB;AACAD,ADCI9B,ICDJ8B,EDCI9B,KAAK,CAACK,CCDD,CAAC2B,GDCD,CAAL,CAAavB,MCDjB,GAAwBL,ADCpB,GAAyB,GCDC,CAACvB,KAA/B,GDCyCqB,WAArC;ACAJ4B,AFTA,ACUI9B,ICDJ8B,EDCI9B,IDVAvB,CCUK,CAAC4B,CCDD,CAACxB,GDCD,CAAL,CCDJ,AFTa,ACUIG,GCDCoB,AFTFjC,KAAK,CESG,AFTFE,ACUlB,CCDqBQ,ADCE6B,GAAvB,CAA2B,CCD/B,OFTgB,CAAoB,ICUhC,EAFgB,CAGpB,WDXgB,CAAhB;AEUAX,AFVA,ACYC,ICFDA,CDFA,KCEM,AFTFrB,CESGc,ADEA,IAAIc,IDXE,GESb,AFTgBnC,CESG2D,CDEC,GDXC,CAACzD,ACWE,CAAjB,EAAoB,CCF3B,SFTgB,CAAoB,cAApB,CADhB;AEWH,AFXG,ACaI2B,GCPR,GDOQA,IDXArB,CCWK,CAAC0B,KAAD,CAAL,CAAaI,CDXH,GAAGtC,KAAK,ACWlB,CDXmBE,ECWM,UAAUiC,CDXtB,CAAoB,OCWR,GAAsB,MDXlC,CAFjB,ACa6B,GAAgCJ,WAAzD;ACDX,AFZO,ACcIF,MAAAA,IDXApB,CCWK,CAACyB,KAAD,CAAL,CAAarB,GDXD,GAAGb,GCWf,CAAuBc,CDXH,CAACZ,ICWrB,CAA8B,QDXf,CAAoB,ICWnC,cDXe,CAHnB,CAPU,CAYV;ACUC,KAHM,MAGA;ACFfuD,AFPQnD,ACUIuB,MDVJvB,ACUIuB,KAAK,CAACK,GDVD,CEOD,AFPExB,CCUD,CAAL,CAAa4B,CCDzB,CFTQ,GAAkB,ICUd,CDVmBvC,ECUM,EDV7B,QCUuCoC,SAAV,GAAsB,QAAtB,GAAiCJ,WAA1D;ADTJzB,ACUIuB,MDVJvB,ACUIuB,KAAK,CAACK,GDVD,CAACvB,CCUD,CAAL,CAAaE,SAAb,CAAuBC,EDV3B,CAA0B,GCUtB,CAA8B,MDVlC,OCUI;ACDZ,AFRQP,ACUC,MDVDA,GEQCuD,MFRQ,CAAClD,QEQlB,GAA2B,CFRnB,CAAuB,UAAvB,EAAmC,OAAnC;AESJ,AFRIJ,ACUH,GApBD,EAXyB,CDqBrBA,ACYJ,UDZc,CAACK,SAAX,CAAqBC,MAArB,CAA4B,OAA5B;AESJiD,AFRItD,EEQJsD,IFRItD,QEQQ,CAAC6B,GFRG,CAACzB,KEQjB,GAAyB,CFRrB,CEQJ,AFR2BC,MAAvB,CAA8B,OAA9B,EAjBU,CAmBV;AEOJ,ADGA,MCHIf,ADGAyC,ICHI,GAAGc,UDGU,ECHE,CAACpD,ADGAD,QAAQ,CAACmB,ICHtB,CAA2B,OAA3B,CAAX,CDGwB,CAAwB,qBAAxB,CAAxB;ACFArB,AFPI,EEOJA,IAAI,CAACY,GFPGI,KAAK,GAAGf,IEOhB,CAAqB,AFPA,CAACgB,SEOtB,EAJuB,CAMvB,IFTgB,CAAuB,YAAvB,CAAZ;AACAD,ACSJ,MDTIA,ACSAA,KDTK,ACSA,CDTCE,ACSAoB,MAAN,CDTA,CAAc,ECSE,CAApB,EAAuB,KDTKnB,IAAV,EAAgB;AESlC,AFRQA,ACSJY,IAAAA,ECDAyB,EFRIrC,IAAI,CAACJ,KCSK,CDTV,ACSW,CCDD,ADCA,CAAd,CAAkBO,ECDA,KAAtB,EAA6B,EDCzB,CAA8BmB,iBAA9B;ACAAc,AFRC,ACSDd,ICDAc,ADCAd,GDXA,EArBU,CAyBV,MEMY,CAAC3B,IDCI,CAACT,ICDlB,CAAuBmC,ADCvB,CAAwBlC,ECDxB,CAA2B,IDC3B,GAAkC,CCDlC,KDCA;ACAAkD,ADCH,GAHD,CCEIA,KDCG,SCDW,GAAG,IAAjB;AACAF,AFPA,ACQAb,ICDAa,ADCAb,MDRIrB,OAAO,EEOI,CAACf,AFPFH,CCQG,CAACG,GCDlB,CAAsBC,CDCtB,CDRsB,ACQEA,CDRDe,IEOvB,EDCA,CCDgC,EDCE,ICDlC,CFPc,CAAwB,ACQtC,SDRc,CAAd;AEQH,AFPGD,ACQH,GCLD,ADnCyB,CA0CzB,EDVIA,GEOG,IAAIoC,AFPA,CAAClC,WAAR,CAAoBrB,CEOC,IAAI,AFPzB,EA3BU,CA6BV,CEKG,EAA4B;AAC/BsD,IAAAA,YAAY,CAACzC,SAAb,CAAuBC,MAAvB,CAA8B,QAA9B;AACAwC,AFNAtD,IEMAsD,EFNAtD,KAAK,CAACsB,IEMM,CAAC0C,GFNb,CAAe,CEMf;AACAT,AFNIhC,ACOR,ICDIgC,EDCAxC,EDPIQ,GAAG,ACOF,CAACc,CDPGlB,KEMK,ADCd,EDPgB,CEMC,AFNAK,ACOF,CAAf,ICDA,ADCoBI,MAAM,CDRX,ACQY,CAAD,CAAN,CAAUZ,gBAAV,CAA2B,OAA3B,EAAoCqB,MAApC,IAA8C,CAAtE,EAAyE;ACArEgB,AFNI5B,ACOJG,ICDAyB,ADCAzB,IDPIH,ECOE,CAAC,CDPC,ACOF,CAAN,CDPU,ACOArB,CDTK,IEQA,ADCf,CCDgBA,ADCAC,KCDhB,CAAsBA,CDCtB,GAA0B,GCD1B,GAAgC,ADChC,MCDA;AACH,AFNOqB,ACOP,GAFD,KDLQA,CCOD,ODPS,EAAE;AEOrB,AFVsB,ACWfE,ECCR,EDDQA,GDXA,GCWM,CAAC,CAAD,CAAN,CAAUxB,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;ADNH,ACOA;AACJ,EAED;ACFAmD,QAAQ,CAACZ,gBAAT,CAA0B,OAA1B,EAAmCkB,eAAnC,GAEA;;AACA,ADAO,ICADG,KDAUxB,YCAO,EDAhB,CCAmBxC,EDAO,MCAC,CAACmB,cAAT,CAAwB,kBAAxB,CAA1B;AACA,ADAI,ICAE8C,EDAExB,UAAU,GAAGzC,CCAC,GAAGgE,IDAI,CAACjD,YCAY,CAACmD,GDAtB,CAA0B,cCA/C,ADAqB,CAAjB,C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","file":"group-form.1dc0ff30.js","sourceRoot":"..\\public","sourcesContent":["class Group {\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    createGroup() {\r\n        // creating the group\r\n        let group = document.querySelector('div.group')\r\n        group = group.cloneNode(true)\r\n        group.style.display = 'flex'\r\n\r\n        // setting the relevant name, link values and edit and delete buttons\r\n        let groupName = group.querySelector('input.group-name'),\r\n            groupLink = group.querySelector('h3.open-link'),\r\n            editButton = group.querySelector('svg.edit-group'),\r\n            deleteButton = group.querySelector('svg.delete-group')\r\n\r\n        // setting attributes\r\n        groupName.value = this.name;\r\n        groupName.removeAttribute('disabled')        \r\n        groupLink.setAttribute('listener', 'false')\r\n        editButton.classList.remove('first')\r\n        deleteButton.classList.remove('first')\r\n\r\n        // removing any tiles that might have duplicated over\r\n        let tiles = group.querySelectorAll('.tiles > *')\r\n        tiles.forEach(function (tile) {\r\n            tile.remove()\r\n        })\r\n \r\n        // append the group to the content tab\r\n        let content = document.getElementById('content')\r\n        content.appendChild(group)\r\n\r\n        // smooth scroll to the new column\r\n        group.scrollTo({\r\n            top: content.clientHeight,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n}\r\n\r\nexport default Group","// counts how many tiles there are in total, and within a group\r\nexport function countTiles() {\r\n    let groups = document.querySelectorAll('.group'),\r\n        total = document.querySelectorAll('.open-link'),\r\n        tileContainers = document.querySelectorAll('.tiles'),\r\n        tiles = document.querySelectorAll('.tile'),\r\n        openLinkSVG = `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16 16H2V2H9V0H2C0.89 0 0 0.9 0 2V16C0 17.1 0.89 18 2 18H16C17.1 18 18 17.1 18 16V9H16V16ZM11 0V2H14.59L4.76 11.83L6.17 13.24L16 3.41V7H18V0H11Z\" fill=\"#909090\"/>\r\n        </svg>`;\r\n\r\n    // writing the total number of cards at the head of each column\r\n    // counts how many resource cards there are in each list\r\n    total.forEach(function count(object, index) {\r\n        let tileCount = 0;\r\n        // iterates through each list of tiles, to add to tileCount\r\n        for (let i = 0; i < tileContainers[index].querySelectorAll('.tile').length; i ++) {\r\n            if (tileContainers[index].querySelectorAll('.tile')[i].classList.length == 1) {\r\n                tileCount += 1\r\n            }\r\n        }\r\n        // if the tilecount is empty, there are no links to open in that group\r\n        if (tileCount == 0) {\r\n            total[index].innerHTML = '0 links' + openLinkSVG;\r\n            total[index].classList.add('link-absent')\r\n        // otherwise, enable group link opening with relevant CTA\r\n        } else if (tileCount == 1) {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' link' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        } else {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' links' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        }\r\n    })\r\n\r\n    // show or hide the empty state message pending if there are tiles or not.\r\n    let emptyStateMessage = document.getElementById('empty-state-content')\r\n    if (tiles.length == 0) {\r\n        tileContainers[0].appendChild(emptyStateMessage)\r\n        emptyStateMessage.style.display = 'flex'\r\n    } else {\r\n        emptyStateMessage.style.display = 'none'\r\n    }\r\n\r\n    // show or hide ungrouped if there are none in it\r\n    if (tiles.length > 0 && groups[0].querySelectorAll('.tile').length == 0) {\r\n        groups[0].style.display = 'none'\r\n    } else {\r\n        groups[0].style.display = 'flex'\r\n    }\r\n}\r\n\r\n// open all links within a group\r\nexport function openGroupLinks() {\r\n    let groupLinks = document.querySelectorAll('h3.open-link')\r\n    // for each group link\r\n    groupLinks.forEach(function(groupLink) {\r\n        if (groupLink.getAttribute('listener') != 'true') {\r\n            // add an event listener so that on click, it opens up all links in child element\r\n            groupLink.addEventListener('click', function() {\r\n                let links = groupLink.parentElement.parentElement.querySelectorAll('a.external-link')\r\n                links.forEach(function(link) {\r\n                    let url = link.getAttribute('href')\r\n                    // opens url in a new tab\r\n                    window.open(url)\r\n                })\r\n            })\r\n            groupLink.setAttribute('listener', 'true')\r\n        }\r\n    })\r\n}\r\n\r\nopenGroupLinks()","import Group from './group'\r\nimport * as resource from './resource'\r\n\r\n// begin by updating how many tiles there are in the groups\r\nresource.countTiles()\r\n\r\n// selecting some DOM elements\r\nconst createContentForm = document.getElementById('create-content-form')\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addGroupForm = document.getElementById('add-group-form')\r\nvar newGroupToggle = false;\r\nconst newGroup = document.getElementById('new-group');\r\n\r\n// updating the group names that a card can be organised in, if any change happens to the group names\r\nfunction updateGroupNames() {\r\n    let groupNames = document.querySelectorAll('.group-name')\r\n    let groups = createContentForm.querySelector('select[name=group]');\r\n    groups.innerHTML = ''\r\n    // for all of the group names, we'll want to update the select options\r\n    groupNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        groups.appendChild(newOption)\r\n    })\r\n}\r\nupdateGroupNames()\r\n\r\n// opening/closing the 'add a new group' form\r\nfunction toggleGroupForm() {\r\n    // resetting any validation errors\r\n    validateText.innerHTML = ''\r\n    let name = addGroupForm.querySelector('input')\r\n    name.removeAttribute('required')\r\n\r\n    // open or close the group form\r\n    if (newGroupToggle == false) {\r\n        addGroupForm.classList.add('active')\r\n        newGroupToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newGroupToggle == true) {\r\n        addGroupForm.classList.remove('active')\r\n        addGroupForm.reset()\r\n        newGroupToggle = false\r\n        modalBackground.style.display = 'none'\r\n    }\r\n}\r\n\r\n// adding an event listener to bring up the form\r\nnewGroup.addEventListener('click', toggleGroupForm)\r\n\r\n// adding event listeners to close the form without saving any input\r\nconst groupCancelButton = document.getElementById('add-group-cancel')\r\nconst groupCloseButton = groupCancelButton.nextElementSibling\r\ngroupCancelButton.addEventListener('click', function() {\r\n    toggleGroupForm()\r\n})\r\ngroupCloseButton.addEventListener('click', function() {\r\n    toggleGroupForm()\r\n})\r\n\r\n// adding an event listener for submitting the column\r\nconst groupSubmitButton = document.getElementById('add-group-submit')\r\nvar validateText = addGroupForm.querySelector('.validate-message')\r\ngroupSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n\r\n    // setting an id and name\r\n    let id = Date.now()\r\n    let name = addGroupForm.querySelector('input')\r\n\r\n    // if the user hasn't inputted anything, disallow form submission\r\n    if (name.value == '') {\r\n        validateText.innerHTML = 'Please enter a name for this group.'\r\n        name.setAttribute('required', 'true')\r\n    } else {\r\n    // create new object in group class\r\n    let group = new Group(id, name.value)\r\n    group.createGroup()\r\n\r\n    // reset states\r\n    toggleGroupForm()\r\n    updateGroupNames()\r\n    resource.openGroupLinks()\r\n    resource.countTiles()\r\n    groupEditDeleteFunctionality()\r\n    }\r\n})\r\n\r\n// allow for each group's edit and delete functionality\r\nfunction groupEditDeleteFunctionality() {\r\n\r\n    const groupTitles = document.querySelectorAll('div.group-title')\r\n    groupTitles.forEach(function(groupTitle) {\r\n        let editGroupButton = groupTitle.querySelector('svg.edit-group')\r\n        let deleteGroupButton = groupTitle.querySelector('svg.delete-group')\r\n        let groupNameInput = groupTitle.querySelector('input.group-name')\r\n    \r\n        // focus when clicked\r\n        editGroupButton.addEventListener('click', function() {\r\n            groupNameInput.focus()\r\n        })\r\n         // on change, reupdate all group names\r\n        groupNameInput.addEventListener('change', function(event) {\r\n            updateGroupNames();\r\n        })\r\n        // 'save' column name\r\n        groupNameInput.addEventListener('keyup', function(event) {\r\n            if (event.key === 'Enter') {\r\n                groupNameInput.blur()\r\n            }\r\n            updateGroupNames();\r\n        })\r\n        // tooltip on hover\r\n        editGroupButton.addEventListener('mouseover', function() {\r\n            let groupEditToolTip = document.querySelector('div.tooltip#edit-group')\r\n\r\n            if (groupEditToolTip === null) {\r\n                let newToolTip = document.createElement('div')\r\n                newToolTip.setAttribute('id', 'edit-group')\r\n                newToolTip.classList.add('tooltip')\r\n                newToolTip.textContent = 'Rename group'\r\n                editGroupButton.parentElement.appendChild(newToolTip)\r\n            } else {\r\n                editGroupButton.parentElement.appendChild(groupEditToolTip)\r\n            }\r\n            \r\n        })\r\n    // delete groups as long as there is more than 1 and there are no cards within it\r\n        deleteGroupButton.addEventListener('click', function() {\r\n            let groups = document.getElementsByClassName('group')\r\n            let group = groupTitle.parentElement\r\n            let tiles = group.querySelectorAll('.tile')\r\n            if (groups.length > 1 && tiles.length == 0) {\r\n                group.remove()\r\n                updateGroupNames()\r\n            }\r\n        })\r\n    \r\n        // on hover, appending the right tooltip to the 'delete' button\r\n        deleteGroupButton.addEventListener('mouseover', function() {\r\n            let groups = document.getElementsByClassName('group')\r\n            let group = groupTitle.parentElement\r\n            let tiles = group.querySelectorAll('.tile')\r\n            let groupDeleteToolTip = document.querySelector('div.tooltip#delete-group')\r\n\r\n            if (groupDeleteToolTip === null) {\r\n                let newToolTip = document.createElement('div')\r\n                newToolTip.setAttribute('id', 'delete-group')\r\n                newToolTip.classList.add('tooltip')\r\n                newToolTip.textContent = 'Delete group'\r\n                deleteGroupButton.parentElement.appendChild(newToolTip)\r\n            } else {\r\n                deleteGroupButton.parentElement.appendChild(groupDeleteToolTip)\r\n            }\r\n\r\n            // checking for the need to enable or disable buttons\r\n            if (groups.length > 1 && tiles.length == 0) {\r\n                deleteGroupButton.classList.remove('disabled')\r\n            } else if (groups.length <= 1 || tiles.length > 0) {\r\n                deleteGroupButton.classList.add('disabled')\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// ////// ON LOAD\r\n\r\n// import Content from './content'\r\n// import Group from './group'\r\n// import Task from './task'\r\n// import Column from './column'\r\n\r\n// If there are items in local storage - create groups create columns\r\n// create card for each task in column\r\n// create tile for each content in group\r\n\r\n// window.addEventListener('load', function() {\r\n\r\n//     if (localStorage.getItem('groupList') != null) {\r\n//         let groups = JSON.parse(localStorage.getItem('groupList'));\r\n//         groups.forEach(function(group) {\r\n//             let newGroup = new Group(group.id, group.name)\r\n//             newGroup.createGroup()\r\n//             newGroup.addGroup()\r\n\r\n//             updateGroupNames()\r\n//             resource.openGroupLinks()\r\n//             resource.resource()\r\n//             groupEditDeleteFunctionality()\r\n//         })\r\n//     }\r\n// })\r\n"]}