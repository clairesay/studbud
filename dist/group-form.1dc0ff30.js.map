{"version":3,"sources":["js/group.js","js/resource.js","js/group-form.js"],"names":["Group","id","name","group","document","querySelector","cloneNode","style","display","groupName","groupLink","editButton","deleteButton","value","removeAttribute","setAttribute","classList","remove","tiles","querySelectorAll","forEach","tile","content","getElementById","appendChild","scrollTo","top","clientHeight","left","behavior","countTiles","groups","total","tileContainers","openLinkSVG","count","object","index","tileCount","i","length","innerHTML","add","emptyStateMessage","openGroupLinks","groupLinks","getAttribute","addEventListener","links","parentElement","link","url","window","open","sortability","element","Sortable","animation","swapThreshold","ghostClass","chosenClass","dragClass","filter","forceFallback","onStart","evt","itemEl","item","cursor","body","getElementsByTagName","onEnd","console","log","allDeleteGroupButtons","button","getElementsByClassName","resource","createContentForm","modalBackground","addGroupForm","newGroupToggle","newGroup","updateGroupNames","groupNames","newOption","createElement","textContent","toggleGroupForm","validateText","reset","groupCancelButton","groupCloseButton","nextElementSibling","groupSubmitButton","event","preventDefault","Date","now","createGroup","groupEditDeleteFunctionality","groupTitles","groupTitle","editGroupButton","deleteGroupButton","groupNameInput","focus","key","blur","groupEditToolTip","newToolTip","groupDeleteToolTip"],"mappings":";;AEAA;;AACA;;;;;ADDA;AACO,SAAS8B,UAAT,GAAsB;AACzB,MAAIC,MAAM,GAAG3B,QAAQ,CAACe,gBAAT,CAA0B,QAA1B,CAAb;ACCJ,ADDI,MACIa,KAAK,GAAG5B,QAAQ,CAACe,gBAAT,CAA0B,YAA1B,CADZ;ACEJ0D,ADFI,IDFE7E,ECIEiC,ECAA,CAACH,UAAT,CDAsB,GCEtB,ADFyB1B,QAAQ,CAACe,gBAAT,CAA0B,QAA1B,CAFrB;ADDA,ACCA,MAGID,KAAK,GAAGd,GDJAH,EAAZ,EAAgBC,CCII,CAACiB,EDJrB,EAAsB,YCIV,CAA0B,OAA1B,CAHZ;ACKJ,AFN0B,ACCtB,ICKE2D,EDDE5C,WAAW,ICCI,GAAG9B,QAAQ,CAACmB,cAAT,CAAwB,qBAAxB,CAA1B,kQDLI,CADyB,CASzB;ACFJ,ADGI,ICHEwD,eAAe,GAAG3E,QAAQ,CAACmB,cAAT,CAAwB,kBAAxB,CAAxB;AACA,AFPQ,IEOFyD,KFPO/E,EAAL,GAAUA,EEOA,AFPV,GEOaG,QAAQ,CAACmB,cAAT,CAAwB,gBAAxB,CAArB;AACA,AFPQ,ACSJS,EAAAA,ECFAiD,GDEK,CAAC7D,CDTGlB,IAAL,ECSJ,CDTgBA,ACSF,ECFA,EFPV,CEOa,IDEMiC,CCF3B,IDEkB,CAAeC,MAAf,EAAuBC,KAAvB,EAA8B;ACDhD,AFPK,ACSG,ICFF6C,IDEM5C,ICFE,GAAGlC,EDEI,GAAG,CAAhB,CADwC,CCDvB,ADGjB,CCHkBmB,cAAT,CAAwB,WAAxB,CAAjB,EAEA;;AACA,ADCQ,SCDC4D,ADCI,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CCD5B,GAA4B,UDCc,CAACI,KAAD,CAAd,CAAsBlB,gBAAtB,CAAuC,OAAvC,EAAgDqB,MAApE,EAA4ED,CAAC,EAA7E,EAAiF;ACArF,ADCQ,MCDJ6C,IDCQnD,MCDE,GAAG7B,KDCS,CAACiC,ECDF,CAAClB,EDCA,CAAd,CAAsBA,YCDjB,CAA0B,GDC/B,CAAuC,OAAvC,ECDK,ADC2CoB,CCD5D,ADCY,EAAmDvB,SAAnD,CAA6DwB,MAA7D,IAAuE,CAA3E,EAA8E;ACAtF,ADCYF,MCDRP,EDCQO,GDXZ,CEUU,GAAGwC,EDCQ,IAAI,CAAb,UCDkB,CAACzE,CFVjB,YEUD,CAAgC,oBAAhC,CAAb;AACA0B,AFVI,ACWK,ECDTA,MAAM,CAACU,SAAP,GAAmB,EAAnB,CAHwB,CAIxB;AFVI,ACWC,KAPuC,CAQxC,IDZItC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAZ;AEWJ+E,AFVIjF,EEUJiF,IFVIjF,KAAK,CEUC,CAACiB,CFVCjB,KAAK,CEUjB,AFVkBG,CEUC,QFVP,CAAgB,CEUC8B,GFVjB,CAAR,EEUe,EAAkB;AACjC,AFVAjC,MAAAA,EEUIkF,GFVC,CAAC9E,KEUO,AFVb,CAAYC,EEUIJ,KFVhB,GEUwB,AFVF,CEUGkF,KFVzB,CAJU,CAMV,MEQgB,CAAuB,QAAvB,CAAhB;AACAD,ADAA,ICAAA,IDAI/C,KCAK,CAACiD,GDAG,IAAI,CAAjB,EAAoB,CCApB,GAAwBnD,MAAM,CAACvB,KAA/B;AACAwE,AFTA,ACSIrD,ICAJqD,EDAIrD,IDTAvB,CCSK,CAAC4B,CCAD,CAACxB,GDAD,CAAL,CCAJ,AFTa,ACSI4B,GCACL,AFTFjC,KAAK,CESG,AFTFE,ACSlB,CCAqBQ,EDAI,GCA7B,OFTgB,CAAoB,CCSKqB,WAArC,MDTY,CAAhB;AEUAH,AFVA,ACUIC,ICAJD,EDAIC,ICAE,AFTFtB,CESGc,ADAE,CAACa,KAAD,CAAL,CDTS,ACSIrB,GCAjB,AFTgBb,CESGkF,IFTE,CAAChF,ACSlB,CAAuBqC,GCA3B,ADAI,CAA2B,QDTf,CAAoB,ICShC,EAFgB,CAGhB,ODVY,CADhB;AEWH,AFXG,ACYC,GCNL,EDEI,KDNI/B,CCUG,IAAI2B,KDVG,GAAGnC,CCUG,IDVE,ACUE,CDVDE,ACUhB,EAAoB,WDVV,CAAoB,gBAApB,CAFjB;AEYP,AFZO,ACaI2B,MAAAA,IDVApB,CCUK,CAACyB,KAAD,CAAL,CAAaI,GDVD,GAAGtC,GCUf,EDVoB,CAACE,ACUI,UAAUiC,GDVpB,CAAoB,KCUV,GAAsB,OAAtB,GDVV,ACU0CJ,CDb7D,CAPU,CAYV,QCQI;AACAF,MAAAA,KAAK,CAACK,KAAD,CAAL,CAAarB,SAAb,CAAuBC,MAAvB,CAA8B,aAA9B;ACDZkE,AFPQ1E,ACSC,KAHM,CDNPA,KCSO,IDTE,CEOD,AFPEI,IESlB,CFTQ,GAAkB,KAAKX,IAAvB;AACAO,ACSIuB,MDTJvB,ACSIuB,KAAK,CAACK,GDTD,CAACvB,CCSD,CAAL,CAAa2B,SAAb,GDTJ,ACS6B,CDTH,SCSaH,CDTvC,QCS6B,GAAsB,QAAtB,GAAiCJ,WAA1D;ACAZ,AFRQxB,ACSIsB,MDTJtB,ACSIsB,GCDHwD,EDCQ,CAACnD,GDTD,CAACtB,CCSD,CAAL,CAAaC,KCDzB,GAA2B,CFRnB,ACSI,CDTmB,ACSIC,MAAvB,CAA8B,GDTlC,EAAmC,OAAnC,CCSI;ACAR,AFRIN,ACSC,MDTDA,UAAU,CAACK,SAAX,CAAqBC,MAArB,CAA4B,OAA5B;AESJwE,AFRI7E,ACSH,ECDD6E,CDnBA,EAXyB,CDsBrB7E,ACWJ,QCHY,CAAC6B,GFRG,CAACzB,KEQjB,GAAyB,CFRrB,CEQJ,AFR2BC,MAAvB,CAA8B,OAA9B,EAjBU,CAmBV;AEOJ,MAAIf,IAAI,GAAG8E,YAAY,CAAC3E,aAAb,CAA2B,OAA3B,CAAX;AACAH,AFPI,ACSJ,ECFAA,IAAI,ADEAyC,CCFC7B,GFPGI,KAAK,GAAGf,IEOhB,CAAqB,AFPA,ACSA,CDTCgB,ECSEf,OCFxB,CDEgC,CCNT,ADMUmB,CCAjC,IFTgB,CAAuB,QCSf,CAAwB,GDThC,CAAZ,iBCSoB,CAAxB;ADRIL,MAAAA,KAAK,CAACE,OAAN,CAAc,UAAUC,IAAV,EAAgB;AESlC,AFRQA,ACQR,MCAI4D,ADAA/D,EDRIG,GCQC,CDRG,ACQFmB,CDRGvB,KCQT,CDRI,CEQU,EDAE,CAApB,CCAsB,CDAC,ICAvB,EAA6B;AACzB+D,AFRC,ACQD/C,ICAA+C,ADAA/C,GDVA,EArBU,CAyBV,MEMY,CAACjB,CDAC,CAAC,CAAD,CAAd,CAAkBQ,ICAlB,CAAuBkB,GAAvB,CAA2B,EDA3B,CAA8BC,KCA9B,YDAA;ACCAsC,ADAAtC,ICAAsC,ADAAtC,cCAc,GAAG,ADAA,CAACpC,GCAlB,EDAA,CAAwBC,OAAxB,GAAkC,MAAlC;ACCAuE,AFPA,ACOH,GAHD,CCGIA,KDAG,CDPCzD,OAAO,EEOI,CAACf,AFPFH,KEOd,CAAsBI,EFPA,CAACe,IEOvB,GAAgC,MAAhC,CFPc,CAAwB,SAAxB,CAAd;AEQH,AFPGD,ACOAqB,GCJJ,CDIIA,EDPArB,GEOG,IAAI2D,AFPA,CAACzD,OCOS,CAACjB,GDPlB,CAAoBJ,CEOC,ADArB,CAAwBK,GCAC,AFPzB,EA3BU,CA6BV,CEKG,ADAH,ECA+B,CDAG,MAAlC;ACCAwE,ADAH,GAxCwB,CCwCrBA,ADEJ,YCFgB,CAAChE,SAAb,CAAuBC,MAAvB,CAA8B,QAA9B;AACA+D,AFNA7E,IEMA6E,EFNA7E,KAAK,CAACsB,IEMM,CAACiE,GFNb,CAAe,CEMf;AACAT,AFNIvD,IEMJuD,IFNIvD,GAAG,EAAEJ,KEMK,EFNE,CEMC,AFNAK,KEMjB,OFPe;AEQfoD,AFNInD,ACMR,ICAImD,EDAA7D,EDNIU,GCMC,CDNG,ACMFY,EDNI,CAFK,GCQf,CCAe,CAACjC,CDAD,CAAf,GCAA,CAAsBC,ADAFuB,MAAM,CCA1B,ADA2B,CAAD,CAAN,CCAY,ADAFZ,MCA9B,CAJ+B,CAM/B,QDFoB,CAA2B,OAA3B,EAAoCqB,MAApC,IAA8C,CAAtE,EAAyE;ADLjEX,ACMJE,IAAAA,IDNIF,ECME,CAAC,CAAD,CAAN,CAAUtB,EDNE,EAAE,CCMd,CAAgBC,OAAhB,GAA0B,MAA1B;ACEAqE,AFXe,ACUlB,GAFD,CCGIA,GFXA,ECUG,GCCK,CAAC/C,UAAT;AACA+C,AFPH,ACMG9C,ICCA8C,ADDA9C,MAAM,CAAC,CCCC,ADDF,CCCGuB,ADDT,CAAU/C,KAAV,CAAgBC,ICChB,GDDA,GAA0B,MAA1B;ACEH,ADDA;ACEJ,ADDA,ECGD,ADDA;;;ACEA0E,ADDO,QCCC,CAACnC,ADDOH,cAAT,ECCP,CAA0B,ADDO,OCCjC,EAAmC4C,eAAnC,GAEA;ADFI,MAAI3C,SDTO7C,CCSG,GAAGI,QAAQ,CAACe,gBAAT,CAA0B,cAA1B,CAAjB,CAD6B,CAE7B;ACEJ,IAAMwE,iBAAiB,GAAGvF,QAAQ,CAACmB,cAAT,CAAwB,kBAAxB,CAA1B;AACA,ADFIsB,EAAAA,ECEE+C,QDFQ,CAACxE,OCEO,ADFlB,CAAmB,ECEEuE,QDFQjF,SCES,ADFnB,CCEoBmF,CDFC,iBCE5C;AACAF,ADFQ,QAAIjF,SCEK,ADFI,CCEHqC,ADFID,YAAV,CAAuB,GCEnC,CAAmC,MDFvB,CCEZ,EAA4C,EDFM,MAA1C,EAAkD,ECEH;AACnD0C,ADFQ,ECERA,eAAe;AAClB,ADFW9E,CCAZ,KDAYA,SAAS,CAACqC,gBAAV,CAA2B,OAA3B,EAAoC,YAAY;ACG5D6C,ADFgB,YAAI5C,ICEJ,CAACD,ADFQ,GAAGrC,SAAS,CAACuC,GCEtC,CAAkC,OAAlC,EAA2C,ADFf,CAAwBA,WCEE,EDF1B,CAAsC9B,gBAAtC,CAAuD,iBAAvD,CAAZ;ACGZqE,ADFYxC,ECEZwC,MDFYxC,KAAK,CAAC5B,GCEH,IDFH,CAAc,UAAU8B,IAAV,EAAgB;ACG7C,ADFmB,CCApB,GAIA,UDJwBC,GAAG,GAAGD,IAAI,CAACJ,YAAL,CAAkB,MAAlB,CAAV,CAD0B,CAE1B;;ACIpB,ADHoBM,ICGd0C,MDHc1C,MAAM,CAACC,ICGJ,ADHH,CAAYF,ECGN/C,CDHN,OCGc,CAACmB,cAAT,CAAwB,kBAAxB,CAA1B;AACA,ADHiB,ICGbkE,KDPY,OCOA,GAAGT,YAAY,CAAC3E,aAAb,CAA2B,mBAA3B,CAAnB;AACAyF,ADHa,OAPD,UCUK,CAAC/C,gBAAlB,CAAmC,OAAnC,EAA4C,UAAUgD,KAAV,EAAiB;AACzDA,ADHQrF,ECGRqF,IDHQrF,CCGH,CAACsF,ODHW,CAACjF,MCGlB,GADyD,CAGzD,EDLQ,CAAuB,UAAvB,EAAmC,MAAnC;AACH;ACKL,ADJC,GAbD,GCiBId,EAAE,GAAGgG,IAAI,CAACC,GAAL,EAAT;AACA,ADJH,MCIOhG,IAAI,GAAG8E,YAAY,CAAC3E,aAAb,CAA2B,OAA3B,CAAX,CALyD,CAOzD;;AACA,ADLJuC,MCKQ1C,IAAI,CAACW,GDLC,ECKN,EDHR,ECGsB,EAAlB,EAAsB;AAClB4E,IAAAA,YAAY,CAAChD,SAAb,GAAyB,qCAAzB;AACAvC,ADJD,ICICA,IAAI,CAACa,ADJGuC,WAAT,CCIC,CAAkB,CDJI,SCItB,EAA8B,MAA9B;AACH,ADJD,GCCA,MAGO;AACP,ADJA,MAAIrB,cAAc,GAAG7B,QAAQ,CAACe,gBAAT,CAA0B,QAA1B,CAArB;ACKA,ADJAc,EAAAA,MCII9B,KAAK,GAAG,ADJE,CAACiB,GCICpB,IDJhB,CAAuB,SCIX,CAAUC,ADJWsD,ECIrB,EAAcrD,GDJH,CCIO,CAACW,ADJW,KCI9B,CAAZ;AACAV,ADJI,ICIJA,IDJQqD,CCIH,CAAC2C,MDJF,CAAa5C,ICIjB,GAHO,ADDH,CCMJ,CDN0B;AAClBpD,MAAAA,KAAK,EAAE,SADW;ACO1BqF,ADLQ/B,ICKR+B,EDLQ/B,SAAS,EAAE,ECKJ,CDPW;ACQ1B0B,ADLQzB,ICKRyB,EDLQzB,aAAa,CCKL,CDLO,CAHG;ACS1BmB,ADLQlB,ICKRkB,EDLQlB,MCKA,CAACf,GDLS,EAAE,SCKpB,GDT0B;ACU1BiC,ADLQjB,ICKRiB,EDLQjB,MCKA,CAAC9B,IDLU,EAAE,ICKrB,SDV0B;ACW1BsE,ADLQvC,ICKRuC,EDLQvC,SAAS,EAAE,eCKS,ADXF;ACYzB,ADLOC,MAAAA,MAAM,EAAE,WAPU;ACa7B,ADNgC,CCjBjC,GAyBA;ADPYC,MAAAA,aAAa,EAAE,IARG;ACgB9B,ADNYC,MAAAA,GCMHoC,IDNU,EAAE,iBAAUnC,GAAV,ECMrB,ADNoC,GCMI;AAEpC,ADPY,MCONoC,WAAW,GAAGjG,QAAQ,CAACe,gBAAT,CAA0B,iBAA1B,CAApB;AACAkF,ADPY,ECOZA,UDPgBnC,CCOL,CAAC9C,IDPU,GCOtB,ADPyB6C,CCOL,EDPQ,CAACE,IAAjB,GCOiBmC,UAAT,EAAqB;AACrC,ADPQpC,QCOJqC,ADPIrC,MAAM,CAAC3D,KAAP,CAAa6D,ECOF,GAAGkC,CDPd,GAAsB,MCOE,CAACjG,GDPzB,UCOc,CAAyB,gBAAzB,CAAtB;AACA,ADNQ,QCMJmG,IDNQnC,IAAI,GAAGjE,MCME,EDNM,CCMHkG,ADNIhC,UCMM,CAACjE,SDNhB,CAA8B,GCMzB,CAAyB,EDN9B,EAAsC,CAAtC,CAAX,YCMgB,CAAxB;AACA,ADNQgE,QCMJoC,ADNIpC,IAAI,CAAC9D,KAAL,CAAW6D,GCMD,GAAGkC,ADNb,GAAoB,OCMG,CAACjG,EDNxB,WCMa,CAAyB,kBAAzB,CAArB,CAHqC,CAKrC;ADPK,OAjBiB;ACyBtBkG,ADNIhC,ICMJgC,EDNIhC,KAAK,EAAE,MCMI,CAACxB,QDNKkB,GAAV,EAAe,GCM1B,CAAiC,OAAjC,EAA0C,YAAW;AACjDwC,ADNIjC,MCMJiC,EDNIjC,OAAO,CAACC,GAAR,CCMU,ADNE,CCMDiC,KAAf,GDNI,EADkB,CAElB;ACMP,KAFD,EANqC,CASpC;ADNO,YAAIxC,MAAM,GAAGD,GAAG,CAACE,IAAjB;ACORsC,ADNQvC,ICMRuC,IDNQvC,MAAM,CAAC3D,GCMD,CAACwC,CDNP,CAAaqB,MAAb,GAAsB,KCM9B,CAAgC,ADNxB,CAJkB,CAMlB,MCIR,EAA0C,UAAS2B,KAAT,EAAgB;AACtDZ,MAAAA,gBAAgB;AACnB,ADLO,KCGR,EAVqC,CAarC,IDNYd,IAAI,GAAGjE,QAAQ,CAACkE,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAX;AACAD,QAAAA,IAAI,CAAC9D,KAAL,CAAW6D,MAAX,GAAoB,SAApB,CARkB,CAUlB;ACIRqC,IAAAA,cAAc,CAAC1D,gBAAf,CAAgC,OAAhC,EAAyC,UAASgD,KAAT,EAAgB;AACrD,ADJIjE,QAAAA,ECIAiE,KAAK,CAACY,EDJI,CCIV,EDfkB,CAajB,ECEa,OAAlB,EAA2B;AACvBF,QAAAA,cAAc,CAACG,IAAf;AACH,ADHG,YAAIlC,qBAAqB,GAAGtE,QAAQ,CAACe,gBAAT,CAA0B,kBAA1B,CAA5B;AACAuD,QAAAA,qBAAqB,CAACtD,OAAtB,CAA8B,UAAUuD,MAAV,EAAkB;ACGpDQ,ADFQ,MCERA,QDFYpD,MAAM,ECEF,CDFK3B,QAAQ,CAACwE,sBAAT,CAAgC,OAAhC,CAAb;ACGX,ADFW,KCHZ,EAdqC,CAoBrC,MDHgBzE,KAAK,GAAGwE,MAAM,CAAC1B,aAAP,CAAqBA,aAArB,CAAmCA,aAA/C;AACA,cAAI/B,KAAK,GAAGf,KAAK,CAACgB,gBAAN,CAAuB,OAAvB,CAAZ,CAH4C,CAK5C;ACCZoF,IAAAA,eAAe,CAACxD,gBAAhB,CAAiC,WAAjC,EAA8C,YAAW;AACrD,ADDQ,UCCJ8D,IDDQ9E,MAAM,CAACS,KCCC,CDDR,ECCWpC,CDDK,CAAhB,IAAqBc,ECCF,CAACb,EDDM,CAACmC,MAAN,ICCV,ADD0B,CCCH,ADDtC,EAA4C,sBCC7B,CAAvB;ADAYmC,YAAAA,MAAM,CAAC3D,SAAP,CAAiBC,MAAjB,CAAwB,UAAxB;ACEZ,ADDS,UCCL4F,CDHI,MAEO,IAAI9E,KCCC,CDDK,CAACS,GCCD,GDDN,CCCnB,EAA+B,CDDK,CAAjB,IAAsBtB,KAAK,CAACsB,MAAN,GAAe,CAAzC,EAA4C;ACEvD,ADDQmC,YCCJmC,ADDInC,MAAM,CAAC3D,GCCD,GAAGZ,GDDT,CAAiBsC,GAAjB,CCCiB,ADDI,CCCH4C,SDDlB,ICCS,CAAuB,KAAvB,CAAjB;AACAwB,ADDK,QCCLA,UAAU,CAAC/F,YAAX,CAAwB,IAAxB,EAA8B,YAA9B;AACA+F,ADDC,QCCDA,CDZA,SCYU,CAAC9F,SAAX,CAAqB0B,GAArB,CAAyB,SAAzB;AACAoE,ADDH,QCCGA,UAAU,CAACvB,WAAX,GAAyB,cAAzB;AACAgB,ADhDc,KAAtB,GCgDQA,eAAe,CAACtD,aAAhB,CAA8BzB,WAA9B,CAA0CsF,UAA1C;AACH,ADDR,GAjDD,IC4CQ,MAMO;AACHP,ADDf,QCCeA,eAAe,CAACtD,aAAhB,CAA8BzB,WAA9B,CAA0CqF,gBAA1C;AACH;AAEJ,ADFTvD,KCXQ,EArBqC,CAmCzC,GDHO;;ACIHkD,IAAAA,iBAAiB,CAACzD,gBAAlB,CAAmC,OAAnC,EAA4C,YAAW;AACnD,UAAIhB,MAAM,GAAG3B,QAAQ,CAACwE,sBAAT,CAAgC,OAAhC,CAAb;AACA,UAAIzE,KAAK,GAAGmG,UAAU,CAACrD,aAAvB;AACA,UAAI/B,KAAK,GAAGf,KAAK,CAACgB,gBAAN,CAAuB,OAAvB,CAAZ;;AACA,UAAIY,MAAM,CAACS,MAAP,GAAgB,CAAhB,IAAqBtB,KAAK,CAACsB,MAAN,IAAgB,CAAzC,EAA4C;AACxCrC,QAAAA,KAAK,CAACc,MAAN;AACAkE,QAAAA,gBAAgB;AACnB;AACJ,KARD,EApCqC,CA8CrC;;AACAqB,IAAAA,iBAAiB,CAACzD,gBAAlB,CAAmC,WAAnC,EAAgD,YAAW;AACvD,UAAIhB,MAAM,GAAG3B,QAAQ,CAACwE,sBAAT,CAAgC,OAAhC,CAAb;AACA,UAAIzE,KAAK,GAAGmG,UAAU,CAACrD,aAAvB;AACA,UAAI/B,KAAK,GAAGf,KAAK,CAACgB,gBAAN,CAAuB,OAAvB,CAAZ;AACA,UAAI4F,kBAAkB,GAAG3G,QAAQ,CAACC,aAAT,CAAuB,0BAAvB,CAAzB;;AAEA,UAAI0G,kBAAkB,KAAK,IAA3B,EAAiC;AAC7B,YAAID,UAAU,GAAG1G,QAAQ,CAACkF,aAAT,CAAuB,KAAvB,CAAjB;AACAwB,QAAAA,UAAU,CAAC/F,YAAX,CAAwB,IAAxB,EAA8B,cAA9B;AACA+F,QAAAA,UAAU,CAAC9F,SAAX,CAAqB0B,GAArB,CAAyB,SAAzB;AACAoE,QAAAA,UAAU,CAACvB,WAAX,GAAyB,cAAzB;AACAiB,QAAAA,iBAAiB,CAACvD,aAAlB,CAAgCzB,WAAhC,CAA4CsF,UAA5C;AACH,OAND,MAMO;AACHN,QAAAA,iBAAiB,CAACvD,aAAlB,CAAgCzB,WAAhC,CAA4CuF,kBAA5C;AACH,OAdsD,CAgBvD;;;AACA,UAAIhF,MAAM,CAACS,MAAP,GAAgB,CAAhB,IAAqBtB,KAAK,CAACsB,MAAN,IAAgB,CAAzC,EAA4C;AACxCgE,QAAAA,iBAAiB,CAACxF,SAAlB,CAA4BC,MAA5B,CAAmC,UAAnC;AACH,OAFD,MAEO,IAAIc,MAAM,CAACS,MAAP,IAAiB,CAAjB,IAAsBtB,KAAK,CAACsB,MAAN,GAAe,CAAzC,EAA4C;AAC/CgE,QAAAA,iBAAiB,CAACxF,SAAlB,CAA4B0B,GAA5B,CAAgC,UAAhC;AACH;AACJ,KAtBD,EA/CqC,CAuErC;;AACA,QAAIgC,qBAAqB,GAAGtE,QAAQ,CAACe,gBAAT,CAA0B,kBAA1B,CAA5B;AACAuD,IAAAA,qBAAqB,CAACtD,OAAtB,CAA8B,UAAUuD,MAAV,EAAkB;AAC5C,UAAI5C,MAAM,GAAG3B,QAAQ,CAACwE,sBAAT,CAAgC,OAAhC,CAAb;AACA,UAAIzE,KAAK,GAAGwE,MAAM,CAAC1B,aAAP,CAAqBA,aAArB,CAAmCA,aAA/C;AACA,UAAI/B,KAAK,GAAGf,KAAK,CAACgB,gBAAN,CAAuB,OAAvB,CAAZ,CAH4C,CAK5C;;AACA,UAAIY,MAAM,CAACS,MAAP,GAAgB,CAAhB,IAAqBtB,KAAK,CAACsB,MAAN,IAAgB,CAAzC,EAA4C;AACxCmC,QAAAA,MAAM,CAAC3D,SAAP,CAAiBC,MAAjB,CAAwB,UAAxB;AACH,OAFD,MAEO,IAAIc,MAAM,CAACS,MAAP,IAAiB,CAAjB,IAAsBtB,KAAK,CAACsB,MAAN,GAAe,CAAzC,EAA4C;AAC/CmC,QAAAA,MAAM,CAAC3D,SAAP,CAAiB0B,GAAjB,CAAqB,UAArB;AACH;AACJ,KAXD;AAYH,GArFD;AAsFH,EAGD;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"group-form.1dc0ff30.js","sourceRoot":"..\\public","sourcesContent":["class Group {\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    createGroup() {\r\n        // creating the group\r\n        let group = document.querySelector('div.group')\r\n        group = group.cloneNode(true)\r\n        group.style.display = 'flex'\r\n\r\n        // setting the relevant name, link values and edit and delete buttons\r\n        let groupName = group.querySelector('input.group-name'),\r\n            groupLink = group.querySelector('h3.open-link'),\r\n            editButton = group.querySelector('svg.edit-group'),\r\n            deleteButton = group.querySelector('svg.delete-group')\r\n\r\n        // setting attributes\r\n        groupName.value = this.name;\r\n        groupName.removeAttribute('disabled')        \r\n        groupLink.setAttribute('listener', 'false')\r\n        editButton.classList.remove('first')\r\n        deleteButton.classList.remove('first')\r\n\r\n        // removing any tiles that might have duplicated over\r\n        let tiles = group.querySelectorAll('.tiles > *')\r\n        tiles.forEach(function (tile) {\r\n            tile.remove()\r\n        })\r\n \r\n        // append the group to the content tab\r\n        let content = document.getElementById('content')\r\n        content.appendChild(group)\r\n\r\n        // smooth scroll to the new column\r\n        group.scrollTo({\r\n            top: content.clientHeight,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n}\r\n\r\nexport default Group","// counts how many tiles there are in total, and within a group\r\nexport function countTiles() {\r\n    let groups = document.querySelectorAll('.group'),\r\n        total = document.querySelectorAll('.open-link'),\r\n        tileContainers = document.querySelectorAll('.tiles'),\r\n        tiles = document.querySelectorAll('.tile'),\r\n        openLinkSVG = `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16 16H2V2H9V0H2C0.89 0 0 0.9 0 2V16C0 17.1 0.89 18 2 18H16C17.1 18 18 17.1 18 16V9H16V16ZM11 0V2H14.59L4.76 11.83L6.17 13.24L16 3.41V7H18V0H11Z\" fill=\"#909090\"/>\r\n        </svg>`;\r\n\r\n    // writing the total number of cards at the head of each column\r\n    // counts how many resource cards there are in each list\r\n    total.forEach(function count(object, index) {\r\n        let tileCount = 0;\r\n        // iterates through each list of tiles, to add to tileCount\r\n        for (let i = 0; i < tileContainers[index].querySelectorAll('.tile').length; i++) {\r\n            if (tileContainers[index].querySelectorAll('.tile')[i].classList.length == 1) {\r\n                tileCount += 1\r\n            }\r\n        }\r\n        // if the tilecount is empty, there are no links to open in that group\r\n        if (tileCount == 0) {\r\n            total[index].innerHTML = '0 links' + openLinkSVG;\r\n            total[index].classList.add('link-absent')\r\n            // otherwise, enable group link opening with relevant CTA\r\n        } else if (tileCount == 1) {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' link' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        } else {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' links' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        }\r\n    })\r\n\r\n    // show or hide the empty state message pending if there are tiles or not.\r\n    let emptyStateMessage = document.getElementById('empty-state-content')\r\n    if (tiles.length == 0) {\r\n        tileContainers[0].appendChild(emptyStateMessage)\r\n        emptyStateMessage.style.display = 'flex'\r\n    } else {\r\n        emptyStateMessage.style.display = 'none'\r\n    }\r\n\r\n    // show or hide ungrouped if there are none in it\r\n    if (tiles.length > 0 && groups[0].querySelectorAll('.tile').length == 0) {\r\n        groups[0].style.display = 'none'\r\n    } else {\r\n        groups[0].style.display = 'flex'\r\n    }\r\n}\r\n\r\n// open all links within a group\r\nexport function openGroupLinks() {\r\n    let groupLinks = document.querySelectorAll('h3.open-link')\r\n    // for each group link\r\n    groupLinks.forEach(function (groupLink) {\r\n        if (groupLink.getAttribute('listener') != 'true') {\r\n            // add an event listener so that on click, it opens up all links in child element\r\n            groupLink.addEventListener('click', function () {\r\n                let links = groupLink.parentElement.parentElement.querySelectorAll('a.external-link')\r\n                links.forEach(function (link) {\r\n                    let url = link.getAttribute('href')\r\n                    // opens url in a new tab\r\n                    window.open(url)\r\n                })\r\n            })\r\n            groupLink.setAttribute('listener', 'true')\r\n        }\r\n    })\r\n}\r\n\r\nopenGroupLinks()\r\n\r\n// Setting sortable functionality to the cards with the sortable.js library\r\nexport function sortability() {\r\n    // applying sortability to the children of each .cards container\r\n    let tileContainers = document.querySelectorAll('.tiles')\r\n    tileContainers.forEach(function (element) {\r\n        new Sortable(element, {\r\n            group: 'grouped',\r\n            animation: 200,\r\n            swapThreshold: 1,\r\n            ghostClass: 'ghost-card',\r\n            chosenClass: 'chosen-card',\r\n            dragClass: \"sortable-drag\",\r\n            filter: '.filtered', // 'filtered' class is not draggable\r\n            forceFallback: true,\r\n\r\n            onStart: function (evt) {\r\n                // setting the cursor to grabbing while user is holding card\r\n                let itemEl = evt.item;\r\n                itemEl.style.cursor = 'grabbing'\r\n\r\n                let body = document.getElementsByTagName('body')[0]\r\n                body.style.cursor = 'grabbing'\r\n            },\r\n\r\n            onEnd: function (evt) {\r\n                console.log('dropped')\r\n                // setting the cursor to grab \r\n                let itemEl = evt.item;\r\n                itemEl.style.cursor = 'grab'\r\n\r\n                // reset cursor to normal arrow\r\n                let body = document.getElementsByTagName('body')[0]\r\n                body.style.cursor = 'initial'\r\n\r\n                // recount all the tiles in each group and update their totals\r\n                countTiles()\r\n\r\n                 // // set enabled/disabled status to each of the buttons after the reallocation happened\r\n                let allDeleteGroupButtons = document.querySelectorAll('svg.delete-group')\r\n                allDeleteGroupButtons.forEach(function (button) {\r\n                    let groups = document.getElementsByClassName('group')\r\n                    let group = button.parentElement.parentElement.parentElement\r\n                    let tiles = group.querySelectorAll('.tile')\r\n    \r\n                    //if there are tiles inside the group, or there is only 1 group, delete is disabled. \r\n                    if (groups.length > 1 && tiles.length == 0) {\r\n                        button.classList.remove('disabled')\r\n                    } else if (groups.length <= 1 || tiles.length > 0) {\r\n                        button.classList.add('disabled')\r\n                    }\r\n                })\r\n            },\r\n        });\r\n    })\r\n}\r\n\r\nsortability()","import Group from './group'\r\nimport * as resource from './resource'\r\n\r\n// begin by updating how many tiles there are in the groups\r\nresource.countTiles()\r\n\r\n// selecting some DOM elements\r\nconst createContentForm = document.getElementById('create-content-form')\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addGroupForm = document.getElementById('add-group-form')\r\nvar newGroupToggle = false;\r\nconst newGroup = document.getElementById('new-group');\r\n\r\n// updating the group names that a card can be organised in, if any change happens to the group names\r\nfunction updateGroupNames() {\r\n    let groupNames = document.querySelectorAll('.group-name')\r\n    let groups = createContentForm.querySelector('select[name=group]');\r\n    groups.innerHTML = ''\r\n    // for all of the group names, we'll want to update the select options\r\n    groupNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        groups.appendChild(newOption)\r\n    })\r\n}\r\nupdateGroupNames()\r\n\r\n// opening/closing the 'add a new group' form\r\nfunction toggleGroupForm() {\r\n    // resetting any validation errors\r\n    validateText.innerHTML = ''\r\n    let name = addGroupForm.querySelector('input')\r\n    name.removeAttribute('required')\r\n\r\n    // open or close the group form\r\n    if (newGroupToggle == false) {\r\n        addGroupForm.classList.add('active')\r\n        newGroupToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newGroupToggle == true) {\r\n        addGroupForm.classList.remove('active')\r\n        addGroupForm.reset()\r\n        newGroupToggle = false\r\n        modalBackground.style.display = 'none'\r\n\r\n        // updating state of tiles and sortability after closing the form\r\n        resource.countTiles()\r\n        resource.sortability()\r\n    }\r\n}\r\n\r\n// adding an event listener to bring up the form\r\nnewGroup.addEventListener('click', toggleGroupForm)\r\n\r\n// adding event listeners to close the form without saving any input\r\nconst groupCancelButton = document.getElementById('add-group-cancel')\r\nconst groupCloseButton = groupCancelButton.nextElementSibling\r\ngroupCancelButton.addEventListener('click', function() {\r\n    toggleGroupForm()\r\n})\r\ngroupCloseButton.addEventListener('click', function() {\r\n    toggleGroupForm()\r\n})\r\n\r\n// adding an event listener for submitting the column\r\nconst groupSubmitButton = document.getElementById('add-group-submit')\r\nvar validateText = addGroupForm.querySelector('.validate-message')\r\ngroupSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n\r\n    // setting an id and name\r\n    let id = Date.now()\r\n    let name = addGroupForm.querySelector('input')\r\n\r\n    // if the user hasn't inputted anything, disallow form submission\r\n    if (name.value == '') {\r\n        validateText.innerHTML = 'Please enter a name for this group.'\r\n        name.setAttribute('required', 'true')\r\n    } else {\r\n    // create new object in group class\r\n    let group = new Group(id, name.value)\r\n    group.createGroup()\r\n\r\n    // reset states\r\n    toggleGroupForm()\r\n    updateGroupNames()\r\n    resource.openGroupLinks()\r\n    resource.countTiles()\r\n    groupEditDeleteFunctionality()\r\n    }\r\n})\r\n\r\n// allow for each group's edit and delete functionality\r\nfunction groupEditDeleteFunctionality() {\r\n\r\n    const groupTitles = document.querySelectorAll('div.group-title')\r\n    groupTitles.forEach(function(groupTitle) {\r\n        let editGroupButton = groupTitle.querySelector('svg.edit-group')\r\n        let deleteGroupButton = groupTitle.querySelector('svg.delete-group')\r\n        let groupNameInput = groupTitle.querySelector('input.group-name')\r\n    \r\n        // focus when clicked\r\n        editGroupButton.addEventListener('click', function() {\r\n            groupNameInput.focus()\r\n        })\r\n         // on change, reupdate all group names\r\n        groupNameInput.addEventListener('change', function(event) {\r\n            updateGroupNames();\r\n        })\r\n        // 'save' column name\r\n        groupNameInput.addEventListener('keyup', function(event) {\r\n            if (event.key === 'Enter') {\r\n                groupNameInput.blur()\r\n            }\r\n            updateGroupNames();\r\n        })\r\n        // tooltip on hover\r\n        editGroupButton.addEventListener('mouseover', function() {\r\n            let groupEditToolTip = document.querySelector('div.tooltip#edit-group')\r\n\r\n            if (groupEditToolTip === null) {\r\n                let newToolTip = document.createElement('div')\r\n                newToolTip.setAttribute('id', 'edit-group')\r\n                newToolTip.classList.add('tooltip')\r\n                newToolTip.textContent = 'Rename group'\r\n                editGroupButton.parentElement.appendChild(newToolTip)\r\n            } else {\r\n                editGroupButton.parentElement.appendChild(groupEditToolTip)\r\n            }\r\n            \r\n        })\r\n    // delete groups as long as there is more than 1 and there are no cards within it\r\n        deleteGroupButton.addEventListener('click', function() {\r\n            let groups = document.getElementsByClassName('group')\r\n            let group = groupTitle.parentElement\r\n            let tiles = group.querySelectorAll('.tile')\r\n            if (groups.length > 1 && tiles.length == 0) {\r\n                group.remove()\r\n                updateGroupNames()\r\n            }\r\n        })\r\n    \r\n        // on hover, appending the right tooltip to the 'delete' button\r\n        deleteGroupButton.addEventListener('mouseover', function() {\r\n            let groups = document.getElementsByClassName('group')\r\n            let group = groupTitle.parentElement\r\n            let tiles = group.querySelectorAll('.tile')\r\n            let groupDeleteToolTip = document.querySelector('div.tooltip#delete-group')\r\n\r\n            if (groupDeleteToolTip === null) {\r\n                let newToolTip = document.createElement('div')\r\n                newToolTip.setAttribute('id', 'delete-group')\r\n                newToolTip.classList.add('tooltip')\r\n                newToolTip.textContent = 'Delete group'\r\n                deleteGroupButton.parentElement.appendChild(newToolTip)\r\n            } else {\r\n                deleteGroupButton.parentElement.appendChild(groupDeleteToolTip)\r\n            }\r\n\r\n            // checking for the need to enable or disable buttons\r\n            if (groups.length > 1 && tiles.length == 0) {\r\n                deleteGroupButton.classList.remove('disabled')\r\n            } else if (groups.length <= 1 || tiles.length > 0) {\r\n                deleteGroupButton.classList.add('disabled')\r\n            }\r\n        })\r\n\r\n        // updating all groups dynamically\r\n        let allDeleteGroupButtons = document.querySelectorAll('svg.delete-group')\r\n        allDeleteGroupButtons.forEach(function (button) {\r\n            let groups = document.getElementsByClassName('group')\r\n            let group = button.parentElement.parentElement.parentElement\r\n            let tiles = group.querySelectorAll('.tile')\r\n\r\n            //if there are tiles inside the group, or there is only 1 group, delete is disabled. \r\n            if (groups.length > 1 && tiles.length == 0) {\r\n                button.classList.remove('disabled')\r\n            } else if (groups.length <= 1 || tiles.length > 0) {\r\n                button.classList.add('disabled')\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// ////// ON LOAD\r\n\r\n// import Content from './content'\r\n// import Group from './group'\r\n// import Task from './task'\r\n// import Column from './column'\r\n\r\n// If there are items in local storage - create groups create columns\r\n// create card for each task in column\r\n// create tile for each content in group\r\n\r\n// window.addEventListener('load', function() {\r\n\r\n//     if (localStorage.getItem('groupList') != null) {\r\n//         let groups = JSON.parse(localStorage.getItem('groupList'));\r\n//         groups.forEach(function(group) {\r\n//             let newGroup = new Group(group.id, group.name)\r\n//             newGroup.createGroup()\r\n//             newGroup.addGroup()\r\n\r\n//             updateGroupNames()\r\n//             resource.openGroupLinks()\r\n//             resource.resource()\r\n//             groupEditDeleteFunctionality()\r\n//         })\r\n//     }\r\n// })\r\n"]}