{"version":3,"sources":["js/content.js","js/resource.js","js/content-form.js"],"names":["Content","id","title","description","link","group","contentList","push","groupNames","document","querySelectorAll","cards","card","createElement","descriptionContainer","linkIcon","editIcon","line","setAttribute","classList","add","textContent","length","appendChild","includes","innerHTML","currentGroup","forEach","setGroup","object","index","value","hljs","highlightAll","countTiles","groups","total","tileContainers","tiles","openLinkSVG","count","tileCount","i","remove","emptyStateMessage","getElementById","style","display","openGroupLinks","groupLinks","groupLink","getAttribute","addEventListener","links","parentElement","url","window","open","sortability","element","Sortable","animation","swapThreshold","ghostClass","chosenClass","dragClass","filter","forceFallback","onStart","evt","itemEl","item","cursor","body","getElementsByTagName","onEnd","console","log","allDeleteGroupButtons","button","getElementsByClassName","newContent","createContentForm","overlayToggle","modalBackground","toggleContentForm","type","validateText","contentDetails","removeAttribute","querySelector","reset","contentSaveButton","resource","reupdate","editButtons","editButton","addAutoFill","autoFillContentDetails","objectId","replace","content","thisContent","codeArea","enableButtons","deleteGroupButtons","deleteGroupButton","contentCancelButton","contentCloseButton","nextElementSibling","contentDeleteButton","event","preventDefault","contentID","parseInt","oldContent","splice","indexOf","oldTile","scrollTop","contentTitle","contentDescription","contentLink","contentGroup","contains","Date","now","createCard","addContent","emptyStateButton","deviceSize","click","execCommand","clipboardData","getData"],"mappings":";;AEAA;;AACA;;;;;ADDA;AACO,SAASkC,UAAT,GAAsB;AACzB,MAAIC,MAAM,GAAG1B,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAb;ACCJ,ADDI,MACI0B,KAAK,GAAG3B,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,CADZ;ACEJ,ADFI,ICEEuE,AFJAjF,ECIEqC,QCAQ,GAAG5B,GDAG,GAAGA,ECAE,CAACoC,KDAK,CAACnC,QCAf,CAAwB,ODAlB,CAA0B,KCAhC,CAAnB,EDAyB,CAFrB;ACGJ,AFJI,ACCA,ICGEwE,EDAE5C,KAAK,GAAG7B,OCAO,CDAC,CAACC,CCACD,QAAQ,CAACoC,MDAnB,CAA0B,OCAhB,ADAV,CCAkC,ADH9C,qBCGsB,CAA1B;AACA,AFJI,ACAA,ICIAsC,EDAI5C,WCAS,ADAE,EDJHtC,CEII,CFJhB,EAAgBC,EEIpB,GFJI,EAAuBC,WAAvB,EAAoCC,IAApC,EAA0CC,KAA1C,EAAiDC,WAAjD,EAA8D,mQCA9D,CADyB,CASzB;ACHJ,AFLkE,ACS9D,ICJE8E,eAAe,GAAG3E,QAAQ,CAACoC,cAAT,CAAwB,kBAAxB,CAAxB;AACAoC,UAAU,CAAC7B,gBAAX,CAA4B,OAA5B,EAAqC,YAAY;AAAEiC,AFL3C,ACSJjD,ECJ+CiD,ADI/CjD,KAAK,CAACT,CDTG1B,EAAL,GAAUA,CCSd,CDTI,ACSU,GCJkD,MDIzCuC,KAAT,CAAeX,MAAf,EAAuBC,KAAvB,EAA8B;ACJwB,AFJhE,ACSA,CCLR,GAEA,IDGYW,CDTCvC,KAAL,GAAaA,ACSA,GAAG,CAAhB,CDTA,ACQwC,CAExC;ADTA,SAAKC,WAAL,GAAmBA,WAAnB;AEMR,AFLQ,ACSA,SCJCkF,AFLIhF,ACSA,IAAIqC,CDTT,ACSU,GDTGrC,ACSA,CAAb,EAAgBqC,CAAC,CDTjB,ECSoBL,ECJ5B,CAA2BiD,IAA3B,EAAiC,KDIS,CAACxD,KAAD,CAAd,CAAsBpB,gBAAtB,CAAuC,OAAvC,EAAgDY,MAApE,EAA4EoB,CAAC,EAA7E,EAAiF;ACHrF,AFLI,ACSI,SDTCtC,CCSGiC,GDTR,GAAYjC,IAAZ,ICSsB,CAAC0B,KAAD,CAAd,CAAsBpB,gBAAtB,CAAuC,OAAvC,EAAgDgC,CAAhD,EAAmDvB,SAAnD,CAA6DG,MAA7D,IAAuE,CAA3E,EAA8E;ACHtFiE,AFLI,ACSQ9C,ECJZ8C,MDIY9C,CDTHnC,KEKG,CAACmB,EDIQ,GDTjB,CCSqB,CAAb,CDTWnB,CEKvB,GAAyB,EAAzB,KFLI;AEMJ,AFLC,ACSQ,IDPT,EEGIkF,cAAc,GAAGN,iBAAiB,CAACxE,gBAAlB,CAAmC,YAAnC,CAArB;AACA8E,ADIK,ECJLA,GDH4C,CAQxC,UCLU,CAAC,CAAD,CAAd,CAAkBC,eAAlB,CAAkC,UAAlC;AACAD,EAAAA,cAAc,CAAC,CAAD,CAAd,CAAkBC,eAAlB,CAAkC,UAAlC,EAL6B,CAO7B;;AACA,ADEI,MCFAH,EDEI7C,ECFA,IAAI,GDEK,IAAI,CCFrB,ADEI,ECFkB,ADEE;ACDpByC,ADEI9C,ICFJ8C,EDEI9C,KDVR,ACUa,CAACN,KAAD,CAAL,CAAaL,ECFA,CAACiE,MDEd,GAAyB,EDVpB,EEQT,CAAgC,IAAhC,EAAsCrE,CDEGkB,UCFzC,CDEI,ECFgD,wBAApD;AACA2C,AFRA,ACUI9C,ICFJ8C,EDEI9C,KDVC9B,ACUI,CAACwB,KAAD,CAAL,CAAaX,ECFA,CAACA,AFRlB,CAAiBZ,IAAjB,CAAsB,ACUlB,CAAuBa,ECF3B,CAA4BA,AFR5B,ACUI,CAA2B,ECF/B,CAAgC,QAAhC,EDEI,EAFgB,CAGhB;ACFP,AFRG,ACWC,GCNL,EDEI,ICCG,EDGI,EDXA,ECWIqB,GDXCxC,EAAZ,ICWoB,IAAI,CAAjB,EAAoB;ACF3BiF,AFRH,ACWO9C,ICHJ8C,EFNJ,ACSQ9C,KAAK,CAACN,KAAD,CAAL,CAAaL,ECHA,CAACiE,MDGd,GAAyB,ICH7B,CAAgC,IAAhC,CDGuCjD,CCHDpB,QDGT,GCH7B,ADGmD,GCHC,IDGvB,GAAgCkB,UCH7D,CDGI;ACFJ2C,ADGI9C,ICHJ8C,EDGI9C,KAAK,CAACN,KAAD,CAAL,CAAaX,ECHA,CAACA,MDGd,CAAuBwB,ECH3B,CAA4BA,GDGxB,CAA8B,ECHlC,CAAmC,QAAnC,EDGI;ACFP,ADGI,GCjBwB,CAgB7B,CDFW,MAGA;AACHP,MAAAA,KAAK,CAACN,KAAD,CAAL,CAAaL,SAAb,GAAyB,UAAUgB,SAAV,GAAsB,QAAtB,GAAiCF,WAA1D;AACAH,MAAAA,KDZR,ACYa,CAACN,KAAD,CAAL,CAAaX,SAAb,CAAuBwB,IDZlB,ECYL,CAA8B,aAA9B;ACFR,AFTI,ACYC,MCHDwC,IFTI3E,SESS,CFTC,GESG,AFTAC,KESrB,EAA4B,CFTC,CAACC,gBAAT,CAA0B,aAA1B,CAAjB;AEUAwE,AFTA,ACYH,GApBD,CCiBIA,CD5BqB,CAiCzB,IDdQvE,KAAK,GAAGF,GESK,CAACU,IFTE,CAACT,IESrB,CAA4BU,GAA5B,CAAgC,OFTpB,CESZ,AFTsC,QAA1B,CAAZ;AEUA+D,AFVA,IEUAA,MFTIvE,IAAI,GESK,AFTFH,GESK,IAAhB,CFTmB,CAACI,aAAT,CAAuB,SAAvB,CADX;AEWAuE,AFXA,ACeJ,ICJIA,EDIAxC,IDbI1C,KAAK,GAAGO,CESG,CAACqC,GDIC,ECJjB,CAAsBC,AFTF,ACaAtC,CDbCI,MESrB,CDI4B,CAACgC,CCJG,IFTpB,CAAuB,CESnC,GFTY,CAFZ,GCeoB,CAAwB,qBAAxB,CAAxB;ACHC,AFZG,GEQJ,MAIO,CFTC/B,GESGqE,aAAa,IAAI,AFTA,GAAG1E,CESxB,EAA2B,KFTK,CAACI,aAAT,CAAuB,KAAvB,CAH3B;AEaAqE,AFbA,ACgBJ,ICHIA,EDGA5C,IDZInC,CCYC,CAACmB,MAAN,GCHiB,AFTF,CESGH,ADGF,CAApB,CDZsBV,CCYC,MCHnB,CAA4BkC,AFTF,CAAC9B,KES3B,CAAmC,OFTjB,CESlB,AFTyC,MAAvB,CAJlB;AEcAqE,AFdA,ACiBA7C,ICHA6C,ADGA7C,MDZIjC,IAAI,GAAGK,CCYG,CAAC,CAAD,CCHG,ADGjB,CCHkBkF,ADGApE,GDZC,CAACV,CESpB,MDGA,CAA8B+B,KDZnB,CAAuB,GAAvB,CALX,OCiBA;ACFAuC,AFfA,ACkBAvC,ICHAuC,ADGAvC,MDZI7B,OESS,CFTD,EESI,CFTDN,ACYE,CAACqC,GCHlB,EDGA,CAAwBC,CDZD,CAAClC,KCYxB,GAAkC,KDZnB,CAAuB,ACYtC,KDZe,CANf;AEgBAuE,AFhBA,ACmBH,GAHD,CCAIA,KDGG,CDZCpE,QAAQ,CESG,CAAC8B,CFTDrC,IESf,CAAsBsC,GFTC,CAAClC,GESxB,GAAgC,MAAhC,CFTe,CAAuB,GAAvB,CAPf;AEiBA+E,AFjBA,ACoBAhD,ICHAgD,ADGAhD,MDZI3B,IAAI,GAAGR,IESM,ADGA,CCHCsB,ADGAe,GDZC,CAACjC,CESpB,ADGA,CAAwBkC,ECHE,EAA1B,GDGA,GAAkC,CDZvB,CAAuB,IAAvB,ACYX,CDpBA;AEmBA8C,AFTAjF,ACWH,GAxCwB,CCsCrBiF,ADIJ,EDbIjF,IAAI,CAACM,CESG,CAACgB,UAAT,AFTA,CAAkB,IAAlB,EAAwB,OAAO,KAAKjC,EAApC;AEUA4F,AFTAjF,IESAiF,EFTAjF,IAAI,CAACO,CESG,CAACuC,OFTT,CAAetC,GESf,AFTA,CAAmB,MAAnB;AEUH,AFTGlB,MAAAA,KAAK,CAACmB,WAAN,GAAoB,KAAKnB,KAAzB,CAdS,CAgBT;AEQP,ADEG,ECAJ,IDAQoC,KAAK,CAAChB,MAAN,GAAe,CAAf,IAAoBa,MAAM,CAAC,CAAD,CAAN,CAAUzB,gBAAV,CAA2B,OAA3B,EAAoCY,MAApC,IAA8C,CAAtE,EAAyE;ADTrE,ACUAa,IAAAA,MDVI,ACUE,CAAC,CAAD,CAAN,CAAUW,CDVD3C,ICUT,CAAgB4C,MDVZ,CAAiBzB,ACUrB,GAA0B,GDVtB,GAA0B,ACU9B,CDVA,EAAiC;AAC7BnB,ACUP,GAFD,KDRQA,CCUD,UDVY,CAACkB,WAAZ,GAA0B,KAAKlB,WAA/B;AESZ,AFRYW,ACUJqB,IAAAA,IDVIrB,CEQHgF,CDEK,CAAC,CAAD,CAAN,CAAUhD,GCFlB,EDEQ,CCFY,ADEIC,OAAhB,CDVwB,CAACxB,CCUC,MAA1B,IDVI,CAAiCpB,WAAjC;AEUR,AFTK,ACUJ,OD9BY,CAsBT;AEQJ,ADCH,EAED,ICHQ4F,WAAW,GAAGtF,QAAQ,CAACC,gBAAT,CAA0B,eAA1B,CAAlB;AACAqF,EAAAA,WAAW,CAACpE,OAAZ,CAAoB,UAAUqE,UAAV,EAAsB;AAEtC,AFVA,UAAI,KAAK5F,IAAL,CAAUoB,QAAV,CAAmB,UAAnB,KAAkC,KAAKpB,IAAL,CAAUoB,QAAV,CAAmB,SAAnB,CAAtC,EAAqE;AEWrE,AFVIpB,ACUL,QCAK4F,AFVA5F,CCUI4C,GDVA,CAAC3B,KEUK,CAAC8B,IDAhB,CDVK,ECUqB,CDVF,IEUnB,CAAwB,AFVA/C,IAAxB,MEUA,MAAwC,MAA5C,EAAoD;AAChD4F,AFVA5F,ACUR,MCAQ4F,ADAJ/C,EDVI7C,IAAI,CAACc,GEUK,ADAJ,CCAKkC,EDAF3C,MDVT,CAAkB,CCUD,CAACC,IDVlB,CEUA,CAA4B,AFVF,KAAKN,EEU/B,EAAqC6F,AFVrC,CCUS,CAA0B,SCAnC,KDAS,CAAjB,CAD6B,CAE7B;ACAQD,AFVH,MEUGA,CFbJ,MAGO,GEUO,CAAC9E,YAAX,CAAwB,UAAxB,EAAoC,MAApC;AACH,AFVGd,ACUR6C,EAAAA,GCN0C,CAQtC,EFZI7C,IAAI,ACUF,CDVGiB,ACUFM,OAAX,CAAmB,GDVX,GAAmB,ICUEuB,SDVW,ACUrB,EAAqB,GDVK9C,IAArC;AACAA,ACUJ,QDVIA,ACUA8C,IDVI,CAAChC,ICUI,CAACiC,ODVV,CAAkB,ICUlB,CAAuB,CDVvB,EAA0B,OCU1B,KAAsC,CDVC,KAAK/C,ACUhD,EAAkD,EDV9C;AACH,ACUG,ODvCK,CA+BT;AESA,ADAI8C,MAAAA,OCAK+C,EDAI,CAAC7C,QCAd,GAAuB,KDAnB,CAA2B,OAA3B,EAAoC,YAAY;ACChD8C,ADAI,MCAJA,MDAQ7C,KAAK,GAAGH,QCAM,CAAC8C,ADAE,CAAC1C,SCAJ,CAAtB,GDAgB,CAAwBA,aAAxB,CAAsC5C,gBAAtC,CAAuD,iBAAvD,CAAZ;ACCP,AFVDN,ACUQiD,MDVRjD,ECUQiD,EDVJ,CAAClC,ECUQ,CAACQ,MDVd,CAAeP,ACUP,CAAc,EDVtB,CAAmB,OCUahB,IAAV,EAAgB,EDVtC;AEWH,AFVGA,ACUY,GCZhB,GFEIA,IAAI,CAACc,GCUWqC,GAAG,GAAGnD,GDVtB,CAAkB,ACUQ,CAAC+C,ODV3B,EAA4B,GCUN,CAAkB,IDVxC,ECU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","file":"content-form.9e7e7ba9.js","sourceRoot":"..\\public","sourcesContent":["class Content {\r\n    // declare variables\r\n    constructor(id, title, description, link, group, contentList) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.group = group;\r\n        this.link = link;\r\n        this.contentList = contentList;\r\n    }\r\n\r\n    // add content to array\r\n    addContent() {\r\n        this.contentList.push(this);\r\n        return this.id\r\n    }\r\n\r\n    // create new card with relevant elements\r\n    createCard() {\r\n        let groupNames = document.querySelectorAll('.group-name')\r\n        let cards = document.querySelectorAll('.tiles'),\r\n            card = document.createElement('article'),\r\n            title = document.createElement('h3'),\r\n            descriptionContainer = document.createElement('pre'),\r\n            description = document.createElement('code'),\r\n            link = document.createElement('a'),\r\n            linkIcon = document.createElement('svg'),\r\n            editIcon = document.createElement('a'),\r\n            line = document.createElement('HR');\r\n\r\n        card.setAttribute('id', 'c-' + this.id)\r\n        card.classList.add('tile')\r\n        title.textContent = this.title\r\n\r\n        // only add the code snippet to the card if there is any user input\r\n        if (this.description.length > 0) {\r\n            description.textContent = this.description\r\n            descriptionContainer.appendChild(description)\r\n        }\r\n\r\n        // fix links to support validity\r\n        if (this.link.includes('https://') || this.link.includes('http://')) {\r\n            link.textContent = this.link\r\n            link.setAttribute('href', this.link)\r\n        } else {\r\n            link.textContent = 'https://' + this.link\r\n            link.setAttribute('href', 'https://' + this.link)\r\n        }\r\n\r\n        // set attribute for 'open in new tab' functionality\r\n        link.classList.add('external-link')\r\n        link.setAttribute('target', '_blank')\r\n        link.appendChild(linkIcon)\r\n\r\n        // add icons\r\n        linkIcon.innerHTML = `<svg width=\"20\" height=\"10\" viewBox=\"0 0 20 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M1.9 5.00003C1.9 3.29003 3.29 1.90003 5 1.90003H9V3.05176e-05H5C2.24 3.05176e-05 0 2.24003 0 5.00003C0 7.76003 2.24 10 5 10H9V8.10003H5C3.29 8.10003 1.9 6.71003 1.9 5.00003ZM6 6.00003H14V4.00003H6V6.00003ZM15 3.05176e-05H11V1.90003H15C16.71 1.90003 18.1 3.29003 18.1 5.00003C18.1 6.71003 16.71 8.10003 15 8.10003H11V10H15C17.76 10 20 7.76003 20 5.00003C20 2.24003 17.76 3.05176e-05 15 3.05176e-05Z\" fill=\"#909090\"/>\r\n        </svg>`\r\n        editIcon.classList.add('edit-content')\r\n        editIcon.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M0 12.6672V16H3.33287L13.1626 6.17028L9.82975 2.83741L0 12.6672ZM15.74 3.59286C16.0867 3.24625 16.0867 2.68632 15.74 2.33971L13.6603 0.259994C13.3137 -0.0866241 12.7538 -0.0866241 12.4072 0.259994L10.7807 1.88644L14.1136 5.21931L15.74 3.59286Z\" fill=\"#909090\"/>\r\n          </svg>`\r\n\r\n        // append elements to the card\r\n        card.appendChild(title)\r\n        card.appendChild(descriptionContainer)\r\n        card.appendChild(line)\r\n        card.appendChild(link)\r\n        card.appendChild(editIcon)\r\n\r\n        // add card to relevant group, or to 'Ungrouped' as the default\r\n        let currentGroup = this.group\r\n        if (this.group == 'None') {\r\n            cards[0].appendChild(card)\r\n        } else {\r\n            groupNames.forEach(function setGroup(object, index) {\r\n                if (object.value == currentGroup) {\r\n                    cards[index].appendChild(card)\r\n                }\r\n            })\r\n        }\r\n        hljs.highlightAll();\r\n    }\r\n}\r\n\r\nexport default Content","// counts how many tiles there are in total, and within a group\r\nexport function countTiles() {\r\n    let groups = document.querySelectorAll('.group'),\r\n        total = document.querySelectorAll('.open-link'),\r\n        tileContainers = document.querySelectorAll('.tiles'),\r\n        tiles = document.querySelectorAll('.tile'),\r\n        openLinkSVG = `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16 16H2V2H9V0H2C0.89 0 0 0.9 0 2V16C0 17.1 0.89 18 2 18H16C17.1 18 18 17.1 18 16V9H16V16ZM11 0V2H14.59L4.76 11.83L6.17 13.24L16 3.41V7H18V0H11Z\" fill=\"#909090\"/>\r\n        </svg>`;\r\n\r\n    // writing the total number of cards at the head of each column\r\n    // counts how many resource cards there are in each list\r\n    total.forEach(function count(object, index) {\r\n        let tileCount = 0;\r\n        // iterates through each list of tiles, to add to tileCount\r\n        for (let i = 0; i < tileContainers[index].querySelectorAll('.tile').length; i++) {\r\n            if (tileContainers[index].querySelectorAll('.tile')[i].classList.length == 1) {\r\n                tileCount += 1\r\n            }\r\n        }\r\n        // if the tilecount is empty, there are no links to open in that group\r\n        if (tileCount == 0) {\r\n            total[index].innerHTML = '0 links' + openLinkSVG;\r\n            total[index].classList.add('link-absent')\r\n            // otherwise, enable group link opening with relevant CTA\r\n        } else if (tileCount == 1) {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' link' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        } else {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' links' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        }\r\n    })\r\n\r\n    // show or hide the empty state message pending if there are tiles or not.\r\n    let emptyStateMessage = document.getElementById('empty-state-content')\r\n    if (tiles.length == 0) {\r\n        tileContainers[0].appendChild(emptyStateMessage)\r\n        emptyStateMessage.style.display = 'flex'\r\n    } else {\r\n        emptyStateMessage.style.display = 'none'\r\n    }\r\n\r\n    // show or hide ungrouped if there are none in it\r\n    if (tiles.length > 0 && groups[0].querySelectorAll('.tile').length == 0) {\r\n        groups[0].style.display = 'none'\r\n    } else {\r\n        groups[0].style.display = 'flex'\r\n    }\r\n}\r\n\r\n// open all links within a group\r\nexport function openGroupLinks() {\r\n    let groupLinks = document.querySelectorAll('h3.open-link')\r\n    // for each group link\r\n    groupLinks.forEach(function (groupLink) {\r\n        if (groupLink.getAttribute('listener') != 'true') {\r\n            // add an event listener so that on click, it opens up all links in child element\r\n            groupLink.addEventListener('click', function () {\r\n                let links = groupLink.parentElement.parentElement.querySelectorAll('a.external-link')\r\n                links.forEach(function (link) {\r\n                    let url = link.getAttribute('href')\r\n                    // opens url in a new tab\r\n                    window.open(url)\r\n                })\r\n            })\r\n            groupLink.setAttribute('listener', 'true')\r\n        }\r\n    })\r\n}\r\n\r\nopenGroupLinks()\r\n\r\n// Setting sortable functionality to the cards with the sortable.js library\r\nexport function sortability() {\r\n    // applying sortability to the children of each .cards container\r\n    let tileContainers = document.querySelectorAll('.tiles')\r\n    tileContainers.forEach(function (element) {\r\n        new Sortable(element, {\r\n            group: 'grouped',\r\n            animation: 200,\r\n            swapThreshold: 1,\r\n            ghostClass: 'ghost-card',\r\n            chosenClass: 'chosen-card',\r\n            dragClass: \"sortable-drag\",\r\n            filter: '.filtered', // 'filtered' class is not draggable\r\n            forceFallback: true,\r\n\r\n            onStart: function (evt) {\r\n                // setting the cursor to grabbing while user is holding card\r\n                let itemEl = evt.item;\r\n                itemEl.style.cursor = 'grabbing'\r\n\r\n                let body = document.getElementsByTagName('body')[0]\r\n                body.style.cursor = 'grabbing'\r\n            },\r\n\r\n            onEnd: function (evt) {\r\n                console.log('dropped')\r\n                // setting the cursor to grab \r\n                let itemEl = evt.item;\r\n                itemEl.style.cursor = 'grab'\r\n\r\n                // reset cursor to normal arrow\r\n                let body = document.getElementsByTagName('body')[0]\r\n                body.style.cursor = 'initial'\r\n\r\n                // recount all the tiles in each group and update their totals\r\n                countTiles()\r\n\r\n                 // // set enabled/disabled status to each of the buttons after the reallocation happened\r\n                let allDeleteGroupButtons = document.querySelectorAll('svg.delete-group')\r\n                allDeleteGroupButtons.forEach(function (button) {\r\n                    let groups = document.getElementsByClassName('group')\r\n                    let group = button.parentElement.parentElement.parentElement\r\n                    let tiles = group.querySelectorAll('.tile')\r\n    \r\n                    //if there are tiles inside the group, or there is only 1 group, delete is disabled. \r\n                    if (groups.length > 1 && tiles.length == 0) {\r\n                        button.classList.remove('disabled')\r\n                    } else if (groups.length <= 1 || tiles.length > 0) {\r\n                        button.classList.add('disabled')\r\n                    }\r\n                })\r\n            },\r\n        });\r\n    })\r\n}\r\n\r\nsortability()","import Content from './content'\r\nimport * as resource from './resource'\r\n\r\n// declaring relevant variables\r\nconst newContent = document.getElementById('new-content')\r\nconst createContentForm = document.getElementById('create-content-form')\r\nvar overlayToggle = false\r\nconst modalBackground = document.getElementById('modal-background')\r\nnewContent.addEventListener('click', function () { toggleContentForm() })\r\n\r\n// open content form (may be prepopulated or blank)\r\nfunction toggleContentForm(type) {\r\n    // reset the validation status of the form\r\n    validateText.innerHTML = ''\r\n    let contentDetails = createContentForm.querySelectorAll('form input');\r\n    contentDetails[0].removeAttribute('required')\r\n    contentDetails[1].removeAttribute('required')\r\n\r\n    // if updating existing content, set type update\r\n    if (type == 'update') {\r\n        createContentForm.querySelector('h1').textContent = 'Edit existing resource'\r\n        createContentForm.classList.add('update')\r\n    } else {\r\n        createContentForm.querySelector('h1').textContent = 'Add new content'\r\n        createContentForm.classList.remove('update')\r\n    }\r\n\r\n    // show/hide\r\n    if (overlayToggle == false) {\r\n        createContentForm.classList.add('active')\r\n        overlayToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (overlayToggle == true) {\r\n        createContentForm.classList.remove('active')\r\n        createContentForm.reset()\r\n        overlayToggle = false\r\n        modalBackground.style.display = 'none'\r\n        contentSaveButton.value = ''\r\n\r\n        resource.countTiles()\r\n        resource.sortability()\r\n    }\r\n}\r\n\r\n// adding event listeners to edit buttons on for each resource card\r\nfunction reupdate() {\r\n\r\n    // each card has an edit button that allows users to reaccess and update task details\r\n    let editButtons = document.querySelectorAll('.edit-content')\r\n    editButtons.forEach(function (editButton) {\r\n\r\n        // if there hasn't been a listener previously attached, attach one\r\n        if (editButton.getAttribute('listener') !== 'true') {\r\n            editButton.addEventListener('click', addAutoFill)\r\n            editButton.setAttribute('listener', 'true')\r\n        }\r\n\r\n        // autofill existing details into form\r\n        function addAutoFill() {\r\n            autoFillContentDetails(editButton)\r\n        }\r\n    })\r\n}\r\n\r\n// autofill existing details into form ^^\r\nfunction autoFillContentDetails(object) {\r\n\r\n    // get id of content card\r\n    let objectId = object.parentElement.id;\r\n    objectId = objectId.replace('c-', '')\r\n\r\n    // for each item, get the value and set to the for inputs\r\n    contentList.forEach(function (content) {\r\n        let thisContent = content;\r\n\r\n        // if we find a match\r\n        if (thisContent.id == objectId) {\r\n            // get all the input values\r\n            let contentDetails = createContentForm.querySelectorAll('form input');\r\n            let codeArea = createContentForm.querySelector('textArea')\r\n            //title\r\n            contentDetails[0].value = thisContent.title\r\n            //description\r\n            codeArea.value = thisContent.description\r\n            //link\r\n            contentDetails[1].value = thisContent.link\r\n            //group\r\n            let group = createContentForm.querySelector('select[name=group]');\r\n            group.value = object.parentElement.parentElement.parentElement.querySelector('div.group-title input.group-name').value\r\n\r\n            // open up the form with updated content\r\n            contentSaveButton.value = thisContent.id\r\n            toggleContentForm('update')\r\n        }\r\n    })\r\n}\r\n\r\n// this function resets whether each group is deletable or not, based on whether it is the only group, or whether there are tiles inside it\r\nfunction enableButtons() {\r\n    let groups = document.getElementsByClassName('group')\r\n    let deleteGroupButtons = document.querySelectorAll('svg.delete-group')\r\n\r\n    // for each delete group button\r\n    deleteGroupButtons.forEach(function(deleteGroupButton) {\r\n        let tiles = deleteGroupButton.parentElement.parentElement.parentElement.querySelectorAll('.tile')\r\n\r\n        // set the disabled status\r\n        if (groups.length > 1 && tiles.length == 0) {\r\n            deleteGroupButton.classList.remove('disabled')\r\n        } else if (groups.length <= 1 || tiles.length > 0) {\r\n            deleteGroupButton.classList.add('disabled')\r\n        }\r\n    })\r\n}\r\n\r\n// array where we store all the content\r\nvar contentList = [];\r\n\r\n// selecting relevant DOM elements\r\nvar validateText = createContentForm.querySelector('.validate-message')\r\nconst contentSaveButton = document.getElementById('content-save')\r\nconst contentCancelButton = document.getElementById('edit-content-cancel')\r\nconst contentCloseButton = contentCancelButton.nextElementSibling\r\nconst contentDeleteButton = document.getElementById('edit-content-delete')\r\n\r\n// cancel/close without saving - note that resetting the form is still required\r\ncontentCancelButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    toggleContentForm()\r\n    reupdate()\r\n})\r\ncontentCloseButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    toggleContentForm()\r\n    reupdate()\r\n})\r\n\r\n// delete this card\r\ncontentDeleteButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    let contentID = parseInt(contentSaveButton.value)\r\n    // iterate to find match in ID and delete its card and its presence in the array\r\n    for (let i = 0; i < contentList.length; i++) {\r\n        var oldContent = contentList[i]\r\n        // if we find a match\r\n        if (oldContent.id == contentID) {\r\n            // remove from array\r\n            contentList.splice(contentList.indexOf(oldContent), 1)\r\n            // remove element\r\n            let oldTile = document.getElementById('c-' + contentID)\r\n            oldTile.remove();\r\n            contentSaveButton.value = ''\r\n        }\r\n    }\r\n    \r\n    // scroll back to top of form\r\n    createContentForm.scrollTop = 0;\r\n\r\n    // reset form status\r\n    toggleContentForm()\r\n    reupdate()\r\n    resource.countTiles()\r\n    resource.sortability()\r\n    enableButtons()\r\n})\r\n\r\n// save the content\r\ncontentSaveButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    let contentDetails, content, contentID, contentTitle, contentDescription, contentLink, contentGroup;\r\n     // extract values from input form\r\n     contentDetails = createContentForm.querySelectorAll('form input');\r\n    //  title\r\n     contentTitle = contentDetails[0].value\r\n    //  code snippet\r\n     let codeArea = createContentForm.querySelector('textarea')\r\n     contentDescription = codeArea.value\r\n    //  link\r\n     contentLink = contentDetails[1].value\r\n    //  group\r\n     let groups = createContentForm.querySelector('select[name=group]')\r\n     contentGroup = groups.value\r\n\r\n    //  for resource to be saved, user must have inputted a title and a link, because this is a resource library\r\n    if (contentTitle == \"\" || contentLink == \"\") {\r\n        contentDetails[0].setAttribute('required', 'true')\r\n        contentDetails[1].setAttribute('required', 'true')\r\n        validateText.innerHTML = 'Please enter a title and a resource link to save this content.'\r\n\r\n    } else {\r\n        // if updating the card, look for content with same id value and replace it\r\n        if (createContentForm.classList.contains('update')) {\r\n            contentID = parseInt(contentSaveButton.value)\r\n            for (let i = 0; i < contentList.length; i++) {\r\n                var oldContent = contentList[i]\r\n                if (oldContent.id == contentID) {\r\n                    contentList.splice(contentList.indexOf(oldContent), 1)\r\n                    let oldTile = document.getElementById('c-' + contentID)\r\n                    oldTile.remove();\r\n                    contentSaveButton.value = ''\r\n                }\r\n            }\r\n        // otherwise, generate one\r\n        } else {\r\n            contentID = Date.now()\r\n        }\r\n    \r\n    // create new object in class\r\n    content = new Content(contentID, contentTitle, contentDescription, contentLink, contentGroup, contentList)\r\n    // create DOM and also save to list\r\n    content.createCard(content.addContent());\r\n\r\n    // scroll back to top of form\r\n    createContentForm.scrollTop = 0;\r\n\r\n    // update tile count and group links\r\n    toggleContentForm()\r\n    resource.countTiles()\r\n    resource.sortability()\r\n    resource.openGroupLinks()\r\n    reupdate()\r\n    enableButtons()\r\n    }\r\n})\r\n\r\n// if the user decides to create a new card through the empty state CTA, emulate what would happen with the create task button\r\nvar emptyStateButton = document.querySelector('#empty-state-content button')\r\nemptyStateButton.addEventListener('click', function() {\r\n    if (deviceSize != 'desktop') {\r\n        // counter click for the 'buttons container dropdown'\r\n        document.querySelector('#content-buttons button.icon').click()\r\n    }\r\n    newContent.click()\r\n})\r\n\r\n// if user pastes code content into the content cards\r\n// https://stackoverflow.com/questions/12027137/javascript-trick-for-paste-as-plain-text-in-execcommand\r\ndocument.querySelector('[contenteditable]').addEventListener('paste', function (event) {\r\n    event.preventDefault();\r\n    document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\r\n});"]}