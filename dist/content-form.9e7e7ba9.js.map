{"version":3,"sources":["js/content.js","js/resource.js","js/content-form.js"],"names":["Content","id","title","description","link","group","contentList","push","groupNames","document","querySelectorAll","cards","card","createElement","descriptionContainer","linkIcon","editIcon","line","setAttribute","classList","add","textContent","length","appendChild","includes","innerHTML","currentGroup","forEach","setGroup","object","index","value","hljs","highlightAll","countTiles","groups","total","tileContainers","tiles","openLinkSVG","count","tileCount","i","remove","emptyStateMessage","getElementById","style","display","openGroupLinks","groupLinks","groupLink","getAttribute","addEventListener","links","parentElement","url","window","open","newContent","createContentForm","overlayToggle","modalBackground","toggleContentForm","type","validateText","contentDetails","removeAttribute","querySelector","reset","contentSaveButton","reupdate","editButtons","editButton","addAutoFill","autoFillContentDetails","objectId","replace","content","thisContent","codeArea","enableButtons","getElementsByClassName","deleteGroupButtons","deleteGroupButton","contentCancelButton","contentCloseButton","nextElementSibling","contentDeleteButton","event","preventDefault","contentID","parseInt","oldContent","splice","indexOf","oldTile","resource","contentTitle","contentDescription","contentLink","contentGroup","contains","Date","now","createCard","addContent","emptyStateButton","deviceSize","click","execCommand","clipboardData","getData"],"mappings":"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BqB,CAgB7B,EDEQA,KAAK,CAACN,KAAD,CAAL,CAAaL,SAAb,GAAyB,UAAUgB,SAAV,GAAsB,QAAtB,GAAiCF,WAA1D;AACAH,MAAAA,KAAK,CAACN,KAAD,CAAL,CAAaX,SAAb,CAAuBwB,MAAvB,CAA8B,aAA9B;AACH,WDbL,sBAAa;AEUb,AFTI,ACaH,GApBD,EAXyB,CC2BrBiB,ADMJ,IDfQpD,SESS,CFTC,GESG,AFTAC,KESrB,EAA4B,CFTC,CAACC,gBAAT,CAA0B,aAA1B,CAAjB;AEUAiD,AFTA,IESAA,MFTIhD,KAAK,GAAGF,GESK,CAACU,IFTE,CAACT,IESrB,CAA4BU,GAA5B,CAAgC,OFTpB,CESZ,AFTsC,QAA1B,CAAZ;AEUAwC,AFVA,ACeJ,ICLIA,EDKAhB,IDdIhC,IAAI,GESK,AFTFH,GESK,GDKC,CCLjB,CFTmB,CAACI,ACcAJ,QAAQ,CAACoC,IDdlB,CAAuB,SAAvB,ACcS,CDfpB,ACe4C,qBAAxB,CAAxB;ACJIgB,AFXA,IEWAA,MFTI3D,KAAK,GAAGO,CESG,CAACqC,KAAhB,CAAsBC,AFTF,CAAClC,MESrB,GAAgC,IFTpB,CAAuB,CESnC,GFTY,CAFZ;AEYH,AFZG,ACgBJ,GCRA,GDQIyB,GCJG,CFTCxB,CCaC,CAACQ,CCJCsC,KDIP,IAAgB,CAApB,EAAuB,CCJC,IAAI,AFTA,GAAGnD,CESxB,EAA2B,KFTK,CAACI,aAAT,CAAuB,KAAvB,CAH3B;AEaA8C,AFbA,ACiBAtB,ICJAsB,ADIAtB,MDbIlC,QCaU,CAAC,CAAD,CCJG,AFTF,ACaf,CCJkBgB,ADIAI,EDbAd,OESlB,CAA4BkC,AFTF,CAAC9B,ACa3B,CAA8B+B,ICJ9B,CAAmC,OFTjB,CESlB,AFTyC,ICazC,EDbkB,CAJlB;AEcAe,AFdA,ACkBAf,ICJAe,ADIAf,MDbIxC,IAAI,GAAGK,IESM,ADIA,CCJC2D,ADIAtB,GDbC,CAACjC,CESpB,ADIA,CAAwBkC,OAAxB,GAAkC,CDbvB,CAAuB,GAAvB,CALX,ACkBA;ACHAa,AFfA,ACmBH,GAHD,CCDIA,KDIG,CDbC7C,OESS,CFTD,EESI,CFTDN,IESf,IFTuB,CAACI,aAAT,CAAuB,KAAvB,CANf;AEgBAgD,AFhBA,ACoBAjB,ICJAiB,ADIAjB,MDbI5B,QAAQ,CESG,CAAC8B,CFTDrC,ACaE,CAACqC,GCJlB,CAAsBC,CDItB,CAAwBA,CDbD,CAAClC,GESxB,EDIA,CCJgC,EDIE,ICJlC,CFTe,CAAuB,ACatC,GDbe,CAPf;AEiBAwD,AFjBA,ACqBH,GAxCwB,CCoCrBA,ADMJ,MDfQpD,IAAI,GAAGR,IESM,CAACsB,GFTC,CAAClB,CESpB,GAA0B,EAA1B,OFTW,CAAuB,IAAvB,CARX;AEkBH,AFRGD,MAAAA,IAAI,CAACM,YAAL,CAAkB,IAAlB,EAAwB,OAAO,KAAKjB,EAApC;AESP,AFROW,EEUR,IFVQA,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACAlB,ACYJ,MDZIA,ACYAoC,KDZK,ACYA,CDZCjB,ACYAC,MAAN,GAAe,CAAf,CDZA,GAAoB,ACYAa,KDZKjC,CCYC,CAAC,CAAD,CAAN,CDZpB,ACY8BQ,CD1BrB,CAgBT,cCUoB,CAA2B,OAA3B,EAAoCY,MAApC,IAA8C,CAAtE,EAAyE;AACrEa,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUW,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;ACHR,AFPQ,ACWH,GAFD,MCFKuB,ADIE,CDXC,KAAKnE,EEOjB,GAAoB,MFPR,CAAiBmB,MAAjB,GAA0B,CAA9B,EAAiC;AESrC,AFRQnB,ACWJgC,IAAAA,IDXIhC,ECWE,CAAC,CAAD,CAAN,CAAU2C,KDXK,ACWf,CDXgBzB,ACWA0B,OAAhB,GAA0B,CDXtB,GAA0B,ECW9B,GDXmC5C,WAA/B;AESR,AFRQW,ACWP,MCHGyD,EFRIzD,SEQO,GAAGL,QAAQ,AFRE,CEQDC,AFREa,WAArB,CAAiCpB,IEQvB,CAA0B,MFRpC,SEQU,CAAlB;AACAoE,AFRK,ACWR,ECHGA,ADKJ,KDjCiB,CAsBT,KEMO,CAAC5C,OAAZ,CAAoB,UAAU6C,UAAV,EAAsB;AAEtC;AACA,QAAIA,UAAU,CAACrB,YAAX,CAAwB,UAAxB,MAAwC,MAA5C,EAAoD;AAChDqB,AFTJ,ACWD,MCFKA,GDEIxB,CDXJ,KAAK5C,CESK,CAACgD,EFTX,CAAU5B,GCWf,GAA0B,EDXrB,CAAmB,IESnB,CAA4B,KFT5B,EESA,EAAqCiD,CFTH,KAAKrE,IAAL,CESlC,AFT4CoB,QAAV,CAAmB,SAAnB,CAAtC,EAAqE;AEUjEgD,AFTApE,ACWR,MCFQoE,ADEJvB,EDXI7C,IAAI,CAACiB,GESK,ADEJ,CCFKH,EDEFT,KDXT,GAAmB,ACWF,CAACC,CCFlB,CAAwB,EFTAN,IAAxB,IESA,EAAoC,EDE3B,CAA0B,GCFnC,WDES,CAAjB,CAD6B,CAE7B;ACFK,AFTGA,KEGkC,CAQtC,EFXIA,IAAI,CAACc,YAAL,CAAkB,MAAlB,EAA0B,KAAKd,IAA/B;AACH,ACWL6C,EAAAA,KDdI,KCcM,CDXC,ACWAtB,OAAX,CAAmB,UAASuB,SAAT,EAAoB;ADV/B9C,ACWJ,QDXIA,ACWA8C,IDXI,CAAC7B,ICWI,CAAC8B,MDXV,GAAmB,GCWnB,CAAuB,SDXS,CCWhC,IDXqC/C,CCWC,GDXtC,GCWJ,EAAkD;ACDlD,AFTIA,ACWA,QDXAA,IAAI,CESCqE,AFTAvD,WEST,CFTI,CAAkB,CESC,KFTnB,EAA0B,aAAa,KAAKd,IAA5C;AEUAsE,AFTH,ACWGxB,MCFAwB,ADEAxB,CDxCK,CA+BT,OCSa,CAACE,YCFY,CAACoB,GDEvB,CAA2B,MCFL,CAAtB,ADEA,EAAoC,YAAW;ACDlD,ADEO,YAAInB,KAAK,GAAGH,SAAS,CAACI,aAAV,CAAwBA,aAAxB,CAAsC5C,gBAAtC,CAAuD,iBAAvD,CAAZ;ACDX,ADEW2C,GCdZ,KDcYA,KAAK,CAAC1B,OAAN,CAAc,UAASvB,IAAT,EAAe;ACD5C,AFTOA,ACWY,ECApB,IFXQA,IAAI,CAACe,GCWWoC,GAAG,GDXnB,ACWsBnD,CDXPgB,GAAf,ACW0B,CDXP,ACWQ+B,YAAL,CAAkB,EDXxC,ICWsB,CAAV,CADyB,CAEzB;ADXZ/C,MAAAA,IAAI,CAACc,YAAL,CAAkB,QAAlB,EAA4B,QAA5B;AACAd,ACWYoD,MDXZpD,IAAI,ACWQoD,CDXPjC,KCWa,CAACkC,IAAP,CDXZ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","file":"content-form.9e7e7ba9.js","sourceRoot":"..\\public","sourcesContent":["class Content {\r\n    // declare variables\r\n    constructor(id, title, description, link, group, contentList) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.group = group;\r\n        this.link = link;\r\n        this.contentList = contentList;\r\n    }\r\n\r\n    // add content to array\r\n    addContent() {\r\n        this.contentList.push(this);\r\n        return this.id\r\n    }\r\n\r\n    // create new card with relevant elements\r\n    createCard() {\r\n        let groupNames = document.querySelectorAll('.group-name')\r\n        let cards = document.querySelectorAll('.tiles'),\r\n            card = document.createElement('article'),\r\n            title = document.createElement('h3'),\r\n            descriptionContainer = document.createElement('pre'),\r\n            description = document.createElement('code'),\r\n            link = document.createElement('a'),\r\n            linkIcon = document.createElement('svg'),\r\n            editIcon = document.createElement('a'),\r\n            line = document.createElement('HR');\r\n\r\n        card.setAttribute('id', 'c-' + this.id)\r\n        card.classList.add('tile')\r\n        title.textContent = this.title\r\n\r\n        // only add the code snippet to the card if there is any user input\r\n        if (this.description.length > 0) {\r\n            description.textContent = this.description\r\n            descriptionContainer.appendChild(description)\r\n        }\r\n\r\n        // fix links to support validity\r\n        if (this.link.includes('https://') || this.link.includes('http://')) {\r\n            link.textContent = this.link\r\n            link.setAttribute('href', this.link)\r\n        } else {\r\n            link.textContent = 'https://' + this.link\r\n            link.setAttribute('href', 'https://' + this.link)\r\n        }\r\n\r\n        // set attribute for 'open in new tab' functionality\r\n        link.classList.add('external-link')\r\n        link.setAttribute('target', '_blank')\r\n        link.appendChild(linkIcon)\r\n\r\n        // add icons\r\n        linkIcon.innerHTML = `<svg width=\"20\" height=\"10\" viewBox=\"0 0 20 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M1.9 5.00003C1.9 3.29003 3.29 1.90003 5 1.90003H9V3.05176e-05H5C2.24 3.05176e-05 0 2.24003 0 5.00003C0 7.76003 2.24 10 5 10H9V8.10003H5C3.29 8.10003 1.9 6.71003 1.9 5.00003ZM6 6.00003H14V4.00003H6V6.00003ZM15 3.05176e-05H11V1.90003H15C16.71 1.90003 18.1 3.29003 18.1 5.00003C18.1 6.71003 16.71 8.10003 15 8.10003H11V10H15C17.76 10 20 7.76003 20 5.00003C20 2.24003 17.76 3.05176e-05 15 3.05176e-05Z\" fill=\"#909090\"/>\r\n        </svg>`\r\n        editIcon.classList.add('edit-content')\r\n        editIcon.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M0 12.6672V16H3.33287L13.1626 6.17028L9.82975 2.83741L0 12.6672ZM15.74 3.59286C16.0867 3.24625 16.0867 2.68632 15.74 2.33971L13.6603 0.259994C13.3137 -0.0866241 12.7538 -0.0866241 12.4072 0.259994L10.7807 1.88644L14.1136 5.21931L15.74 3.59286Z\" fill=\"#909090\"/>\r\n          </svg>`\r\n\r\n        // append elements to the card\r\n        card.appendChild(title)\r\n        card.appendChild(descriptionContainer)\r\n        card.appendChild(line)\r\n        card.appendChild(link)\r\n        card.appendChild(editIcon)\r\n\r\n        // add card to relevant group, or to 'Ungrouped' as the default\r\n        let currentGroup = this.group\r\n        if (this.group == 'None') {\r\n            cards[0].appendChild(card)\r\n        } else {\r\n            groupNames.forEach(function setGroup(object, index) {\r\n                if (object.value == currentGroup) {\r\n                    cards[index].appendChild(card)\r\n                }\r\n            })\r\n        }\r\n        hljs.highlightAll();\r\n    }\r\n}\r\n\r\nexport default Content","// counts how many tiles there are in total, and within a group\r\nexport function countTiles() {\r\n    let groups = document.querySelectorAll('.group'),\r\n        total = document.querySelectorAll('.open-link'),\r\n        tileContainers = document.querySelectorAll('.tiles'),\r\n        tiles = document.querySelectorAll('.tile'),\r\n        openLinkSVG = `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16 16H2V2H9V0H2C0.89 0 0 0.9 0 2V16C0 17.1 0.89 18 2 18H16C17.1 18 18 17.1 18 16V9H16V16ZM11 0V2H14.59L4.76 11.83L6.17 13.24L16 3.41V7H18V0H11Z\" fill=\"#909090\"/>\r\n        </svg>`;\r\n\r\n    // writing the total number of cards at the head of each column\r\n    // counts how many resource cards there are in each list\r\n    total.forEach(function count(object, index) {\r\n        let tileCount = 0;\r\n        // iterates through each list of tiles, to add to tileCount\r\n        for (let i = 0; i < tileContainers[index].querySelectorAll('.tile').length; i ++) {\r\n            if (tileContainers[index].querySelectorAll('.tile')[i].classList.length == 1) {\r\n                tileCount += 1\r\n            }\r\n        }\r\n        // if the tilecount is empty, there are no links to open in that group\r\n        if (tileCount == 0) {\r\n            total[index].innerHTML = '0 links' + openLinkSVG;\r\n            total[index].classList.add('link-absent')\r\n        // otherwise, enable group link opening with relevant CTA\r\n        } else if (tileCount == 1) {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' link' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        } else {\r\n            total[index].innerHTML = 'Open ' + tileCount + ' links' + openLinkSVG;\r\n            total[index].classList.remove('link-absent')\r\n        }\r\n    })\r\n\r\n    // show or hide the empty state message pending if there are tiles or not.\r\n    let emptyStateMessage = document.getElementById('empty-state-content')\r\n    if (tiles.length == 0) {\r\n        tileContainers[0].appendChild(emptyStateMessage)\r\n        emptyStateMessage.style.display = 'flex'\r\n    } else {\r\n        emptyStateMessage.style.display = 'none'\r\n    }\r\n\r\n    // show or hide ungrouped if there are none in it\r\n    if (tiles.length > 0 && groups[0].querySelectorAll('.tile').length == 0) {\r\n        groups[0].style.display = 'none'\r\n    } else {\r\n        groups[0].style.display = 'flex'\r\n    }\r\n}\r\n\r\n// open all links within a group\r\nexport function openGroupLinks() {\r\n    let groupLinks = document.querySelectorAll('h3.open-link')\r\n    // for each group link\r\n    groupLinks.forEach(function(groupLink) {\r\n        if (groupLink.getAttribute('listener') != 'true') {\r\n            // add an event listener so that on click, it opens up all links in child element\r\n            groupLink.addEventListener('click', function() {\r\n                let links = groupLink.parentElement.parentElement.querySelectorAll('a.external-link')\r\n                links.forEach(function(link) {\r\n                    let url = link.getAttribute('href')\r\n                    // opens url in a new tab\r\n                    window.open(url)\r\n                })\r\n            })\r\n            groupLink.setAttribute('listener', 'true')\r\n        }\r\n    })\r\n}\r\n\r\nopenGroupLinks()","import Content from './content'\r\nimport * as resource from './resource'\r\n\r\n// declaring relevant variables\r\nconst newContent = document.getElementById('new-content')\r\nconst createContentForm = document.getElementById('create-content-form')\r\nvar overlayToggle = false\r\nconst modalBackground = document.getElementById('modal-background')\r\nnewContent.addEventListener('click', function () { toggleContentForm() })\r\n\r\n// open content form (may be prepopulated or blank)\r\nfunction toggleContentForm(type) {\r\n    // reset the validation status of the form\r\n    validateText.innerHTML = ''\r\n    let contentDetails = createContentForm.querySelectorAll('form input');\r\n    contentDetails[0].removeAttribute('required')\r\n    contentDetails[1].removeAttribute('required')\r\n\r\n    // if updating existing content, set type update\r\n    if (type == 'update') {\r\n        createContentForm.querySelector('h1').textContent = 'Edit existing resource'\r\n        createContentForm.classList.add('update')\r\n    } else {\r\n        createContentForm.querySelector('h1').textContent = 'Add new content'\r\n        createContentForm.classList.remove('update')\r\n    }\r\n\r\n    // show/hide\r\n    if (overlayToggle == false) {\r\n        createContentForm.classList.add('active')\r\n        overlayToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (overlayToggle == true) {\r\n        createContentForm.classList.remove('active')\r\n        createContentForm.reset()\r\n        overlayToggle = false\r\n        modalBackground.style.display = 'none'\r\n        contentSaveButton.value = ''\r\n    }\r\n}\r\n\r\n// adding event listeners to edit buttons on for each resource card\r\nfunction reupdate() {\r\n\r\n    // each card has an edit button that allows users to reaccess and update task details\r\n    let editButtons = document.querySelectorAll('.edit-content')\r\n    editButtons.forEach(function (editButton) {\r\n\r\n        // if there hasn't been a listener previously attached, attach one\r\n        if (editButton.getAttribute('listener') !== 'true') {\r\n            editButton.addEventListener('click', addAutoFill)\r\n            editButton.setAttribute('listener', 'true')\r\n        }\r\n\r\n        // autofill existing details into form\r\n        function addAutoFill() {\r\n            autoFillContentDetails(editButton)\r\n        }\r\n    })\r\n}\r\n\r\n// autofill existing details into form ^^\r\nfunction autoFillContentDetails(object) {\r\n\r\n    // get id of content card\r\n    let objectId = object.parentElement.id;\r\n    objectId = objectId.replace('c-', '')\r\n\r\n    // for each item, get the value and set to the for inputs\r\n    contentList.forEach(function (content) {\r\n        let thisContent = content;\r\n\r\n        // if we find a match\r\n        if (thisContent.id == objectId) {\r\n            // get all the input values\r\n            let contentDetails = createContentForm.querySelectorAll('form input');\r\n            let codeArea = createContentForm.querySelector('textArea')\r\n            //title\r\n            contentDetails[0].value = thisContent.title\r\n            //description\r\n            codeArea.value = thisContent.description\r\n            //link\r\n            contentDetails[1].value = thisContent.link\r\n            //group\r\n            let group = createContentForm.querySelector('select[name=group]');\r\n            group.value = object.parentElement.parentElement.parentElement.querySelector('div.group-title input.group-name').value\r\n\r\n            // open up the form with updated content\r\n            contentSaveButton.value = thisContent.id\r\n            toggleContentForm('update')\r\n        }\r\n    })\r\n}\r\n\r\n// this function resets whether each group is deletable or not, based on whether it is the only group, or whether there are tiles inside it\r\nfunction enableButtons() {\r\n    let groups = document.getElementsByClassName('group')\r\n    let deleteGroupButtons = document.querySelectorAll('svg.delete-group')\r\n\r\n    // for each delete group button\r\n    deleteGroupButtons.forEach(function(deleteGroupButton) {\r\n        let tiles = deleteGroupButton.parentElement.parentElement.parentElement.querySelectorAll('.tile')\r\n\r\n        // set the disabled status\r\n        if (groups.length > 1 && tiles.length == 0) {\r\n            deleteGroupButton.classList.remove('disabled')\r\n        } else if (groups.length <= 1 || tiles.length > 0) {\r\n            deleteGroupButton.classList.add('disabled')\r\n        }\r\n    })\r\n}\r\n\r\n// array where we store all the content\r\nvar contentList = [];\r\n\r\n// selecting relevant DOM elements\r\nvar validateText = createContentForm.querySelector('.validate-message')\r\nconst contentSaveButton = document.getElementById('content-save')\r\nconst contentCancelButton = document.getElementById('edit-content-cancel')\r\nconst contentCloseButton = contentCancelButton.nextElementSibling\r\nconst contentDeleteButton = document.getElementById('edit-content-delete')\r\n\r\n// cancel/close without saving - note that resetting the form is still required\r\ncontentCancelButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    toggleContentForm()\r\n    reupdate()\r\n})\r\ncontentCloseButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    toggleContentForm()\r\n    reupdate()\r\n})\r\n\r\n// delete this card\r\ncontentDeleteButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    let contentID = parseInt(contentSaveButton.value)\r\n    // iterate to find match in ID and delete its card and its presence in the array\r\n    for (let i = 0; i < contentList.length; i++) {\r\n        var oldContent = contentList[i]\r\n        // if we find a match\r\n        if (oldContent.id == contentID) {\r\n            // remove from array\r\n            contentList.splice(contentList.indexOf(oldContent), 1)\r\n            // remove element\r\n            let oldTile = document.getElementById('c-' + contentID)\r\n            oldTile.remove();\r\n            contentSaveButton.value = ''\r\n        }\r\n    }\r\n    // reset form status\r\n    toggleContentForm()\r\n    reupdate()\r\n    resource.countTiles()\r\n    enableButtons()\r\n})\r\n\r\n// save the content\r\ncontentSaveButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n    let contentDetails, content, contentID, contentTitle, contentDescription, contentLink, contentGroup;\r\n     // extract values from input form\r\n     contentDetails = createContentForm.querySelectorAll('form input');\r\n    //  title\r\n     contentTitle = contentDetails[0].value\r\n    //  code snippet\r\n     let codeArea = createContentForm.querySelector('textarea')\r\n     contentDescription = codeArea.value\r\n    //  link\r\n     contentLink = contentDetails[1].value\r\n    //  group\r\n     let groups = createContentForm.querySelector('select[name=group]')\r\n     contentGroup = groups.value\r\n\r\n    //  for resource to be saved, user must have inputted a title and a link, because this is a resource library\r\n    if (contentTitle == \"\" || contentLink == \"\") {\r\n        contentDetails[0].setAttribute('required', 'true')\r\n        contentDetails[1].setAttribute('required', 'true')\r\n        validateText.innerHTML = 'Please enter a title and a resource link to save this content.'\r\n\r\n    } else {\r\n        // if updating the card, look for content with same id value and replace it\r\n        if (createContentForm.classList.contains('update')) {\r\n            contentID = parseInt(contentSaveButton.value)\r\n            for (let i = 0; i < contentList.length; i++) {\r\n                var oldContent = contentList[i]\r\n                if (oldContent.id == contentID) {\r\n                    contentList.splice(contentList.indexOf(oldContent), 1)\r\n                    let oldTile = document.getElementById('c-' + contentID)\r\n                    oldTile.remove();\r\n                    contentSaveButton.value = ''\r\n                }\r\n            }\r\n        // otherwise, generate one\r\n        } else {\r\n            contentID = Date.now()\r\n        }\r\n    \r\n    // create new object in class\r\n    content = new Content(contentID, contentTitle, contentDescription, contentLink, contentGroup, contentList)\r\n    // create DOM and also save to list\r\n    content.createCard(content.addContent());\r\n\r\n    // update tile count and group links\r\n    toggleContentForm()\r\n    resource.countTiles()\r\n    resource.openGroupLinks()\r\n    reupdate()\r\n    enableButtons()\r\n    }\r\n})\r\n\r\n// if the user decides to create a new card through the empty state CTA, emulate what would happen with the create task button\r\nvar emptyStateButton = document.querySelector('#empty-state-content button')\r\nemptyStateButton.addEventListener('click', function() {\r\n    if (deviceSize != 'desktop') {\r\n        // counter click for the 'buttons container dropdown'\r\n        document.querySelector('#content-buttons button.icon').click()\r\n    }\r\n    newContent.click()\r\n})\r\n\r\n// if user pastes code content into the content cards\r\n// https://stackoverflow.com/questions/12027137/javascript-trick-for-paste-as-plain-text-in-execcommand\r\ndocument.querySelector('[contenteditable]').addEventListener('paste', function (event) {\r\n    event.preventDefault();\r\n    document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\r\n});"]}