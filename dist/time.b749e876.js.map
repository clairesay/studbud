{"version":3,"sources":["js/time.js"],"names":["timeToolsOverlay","document","getElementById","timeSelector","dropdown","peekStatusDisplay","querySelector","peekTimeDisplay","peekMinutes","peekSeconds","timeMenuToggleOpen","toggleTimeMenu","classList","addEventListener","stopwatch","stopwatchSelector","pomodoro","pomodoroSelector","appendChild","setTimerType","currentTimer","id","add","remove","round","value","toLocaleString","minimumIntegerDigits","useGrouping","min","sec","milli","minutes","seconds","milliseconds","stopwatchStart","stopwatchReset","stopwatchOn","intervals","offset","textContent","disabled","setAttribute","clearInterval","start","currentTime","elapsedTime","stringify","parseInt","Date","now","incrementUp","setInterval","removeEventListener","workMin","workSec","breakMin","breakSec","workMinutes","workSeconds","breakMinutes","breakSeconds","pomoAlarm","workButtons","breakButtons","timer","workAdd","workSubtract","breakAdd","breakSubtract","pomoStartStop","pomoMin","pomoSec","pomoMinutes","pomoSeconds","pomoIntervals","pomoOn","pomoTime","style","display","timeline","loadSpans","querySelectorAll","allSpans","finalLoadSpanContainer","finalLoadSpan","resetPomo","pomoLength","endPomo","phase","pomodoroTimer","incrementDown","sessions","play","workSpans","breakSpans","pomoStatus","operator","mode","incrementValue","total","timelineLength","workLength","breakLength","forEach","span","width","fullTime","animation"],"mappings":"AAAA;AACA,IAAMA,gBAAgB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AAAA,IACIC,YAAY,GAAGF,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CADnB;AAAA,IAEIE,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAFf;AAIA,IAAIG,iBAAiB,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,wBAAvB,CAAxB;AAAA,IACIC,eAAe,GAAGN,QAAQ,CAACK,aAAT,CAAuB,cAAvB,CADtB;AAAA,IAEIE,WAAW,GAAGD,eAAe,CAACD,aAAhB,CAA8B,UAA9B,CAFlB;AAAA,IAGIG,WAAW,GAAGF,eAAe,CAACD,aAAhB,CAA8B,UAA9B,CAHlB;AAKA,IAAII,kBAAkB,GAAG,KAAzB,EAEA;;AACA,SAASC,cAAT,GAA0B;AACtB,MAAID,kBAAkB,IAAI,KAA1B,EAAiC;AAC7BP,IAAAA,YAAY,CAACS,SAAb,GAAyB,MAAzB;AACAF,IAAAA,kBAAkB,GAAG,IAArB;AACH,GAHD,MAGO,IAAIA,kBAAkB,IAAI,IAA1B,EAAgC;AACnCP,IAAAA,YAAY,CAACS,SAAb,GAAyB,OAAzB;AACAF,IAAAA,kBAAkB,GAAG,KAArB;AACH;AACJ,EACD;;;AACAN,QAAQ,CAACS,gBAAT,CAA0B,OAA1B,EAAmCF,cAAnC;AAEA,IAAMG,SAAS,GAAGb,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;AACA,IAAMa,iBAAiB,GAAGd,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAA1B;AACA,IAAMc,QAAQ,GAAGf,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AACA,IAAMe,gBAAgB,GAAGhB,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAzB,EAEA;;AACAa,iBAAiB,CAACF,gBAAlB,CAAmC,OAAnC,EAA4C,YAAY;AACpDV,EAAAA,YAAY,CAACe,WAAb,CAAyBD,gBAAzB;AACAE,EAAAA,YAAY;AACf,CAHD;AAIAF,gBAAgB,CAACJ,gBAAjB,CAAkC,OAAlC,EAA2C,YAAY;AACnDV,EAAAA,YAAY,CAACe,WAAb,CAAyBH,iBAAzB;AACAI,EAAAA,YAAY;AACf,CAHD,GAKA;;AACA,SAASA,YAAT,GAAwB;AACpB,MAAIC,YAAY,GAAGjB,YAAY,CAACG,aAAb,CAA2B,cAA3B,CAAnB;;AACA,MAAIc,YAAY,CAACC,EAAb,IAAmB,kBAAvB,EAA2C;AACvCP,IAAAA,SAAS,CAACF,SAAV,CAAoBU,GAApB,CAAwB,QAAxB;AACAN,IAAAA,QAAQ,CAACJ,SAAT,CAAmBW,MAAnB,CAA0B,QAA1B;AACH,GAHD,MAGO,IAAIH,YAAY,CAACC,EAAb,IAAmB,iBAAvB,EAA0C;AAC7CP,IAAAA,SAAS,CAACF,SAAV,CAAoBW,MAApB,CAA2B,QAA3B;AACAP,IAAAA,QAAQ,CAACJ,SAAT,CAAmBU,GAAnB,CAAuB,QAAvB;AACH;AACJ;;AACDH,YAAY,IAEZ;AACA;AACA;AAEA;AACA;;AACA,SAASK,KAAT,CAAeC,KAAf,EAAsB;AAClB,SAAQA,KAAD,CAAQC,cAAR,CAAuB,OAAvB,EAAgC;AAAEC,IAAAA,oBAAoB,EAAE,CAAxB;AAA2BC,IAAAA,WAAW,EAAE;AAAxC,GAAhC,CAAP;AACH,EAED;AACA;AACA;;;AAEA,IAAIC,GAAG,GAAGC,GAAG,GAAGC,KAAK,GAAG,CAAxB;AAAA,IACIC,OAAO,GAAG/B,QAAQ,CAACK,aAAT,CAAuB,qBAAvB,CADd;AAAA,IAEI2B,OAAO,GAAGhC,QAAQ,CAACK,aAAT,CAAuB,qBAAvB,CAFd;AAAA,IAGI4B,YAAY,GAAGjC,QAAQ,CAACK,aAAT,CAAuB,0BAAvB,CAHnB;AAKA,IAAM6B,cAAc,GAAGlC,QAAQ,CAACK,aAAT,CAAuB,8BAAvB,CAAvB;AACA,IAAM8B,cAAc,GAAGnC,QAAQ,CAACK,aAAT,CAAuB,yBAAvB,CAAvB;AAEA,IAAI+B,WAAW,GAAG,KAAlB;AAAA,IACIC,SADJ,EAGA;;AACAF,cAAc,CAACvB,gBAAf,CAAgC,OAAhC,EAAyC,YAAY;AACjD;AACAkB,EAAAA,KAAK,GAAGD,GAAG,GAAGD,GAAG,GAAGU,MAAM,GAAG,CAA7B;AACAP,EAAAA,OAAO,CAACQ,WAAR,GAAsBhB,KAAK,CAACK,GAAD,CAA3B;AACAI,EAAAA,OAAO,CAACO,WAAR,GAAsBhB,KAAK,CAACM,GAAD,CAA3B;AACAI,EAAAA,YAAY,CAACM,WAAb,GAA2BhB,KAAK,CAACO,KAAD,CAAhC;AACAvB,EAAAA,WAAW,CAACgC,WAAZ,GAA0BhB,KAAK,CAACK,GAAD,CAA/B;AACApB,EAAAA,WAAW,CAAC+B,WAAZ,GAA0BhB,KAAK,CAACM,GAAD,CAA/B,CAPiD,CASjD;;AACAK,EAAAA,cAAc,CAACK,WAAf,GAA6B,OAA7B;AACAL,EAAAA,cAAc,CAACvB,SAAf,CAAyBW,MAAzB,CAAgC,QAAhC;AACAY,EAAAA,cAAc,CAACvB,SAAf,CAAyBU,GAAzB,CAA6B,SAA7B,EAZiD,CAcjD;;AACAc,EAAAA,cAAc,CAACK,QAAf,GAA0B,KAA1B;AACAJ,EAAAA,WAAW,GAAG,KAAd;AACArC,EAAAA,gBAAgB,CAAC0C,YAAjB,CAA8B,QAA9B,EAAwC,MAAxC,EAjBiD,CAmBjD;;AACAC,EAAAA,aAAa,CAACL,SAAD,CAAb,CApBiD,CAsBjD;;AACAlC,EAAAA,QAAQ,CAACS,gBAAT,CAA0B,OAA1B,EAAmCF,cAAnC;AACH,CAxBD;AA0BA,IAAIiC,KAAJ,EAAWC,WAAX,EAAwBC,WAAxB,EAAqCC,SAArC;AACA,IAAIR,MAAM,GAAG,CAAb,EAEA;;AACAJ,cAAc,CAACtB,gBAAf,CAAgC,OAAhC,EAAyC,YAAY;AACjDb,EAAAA,gBAAgB,CAAC0C,YAAjB,CAA8B,QAA9B,EAAwC,OAAxC,EADiD,CAGjD;;AACA,MAAIL,WAAW,IAAI,IAAnB,EAAyB;AACrBM,IAAAA,aAAa,CAACL,SAAD,CAAb;AACAH,IAAAA,cAAc,CAACK,WAAf,GAA6B,OAA7B;AACAL,IAAAA,cAAc,CAACvB,SAAf,CAAyBW,MAAzB,CAAgC,QAAhC;AACAY,IAAAA,cAAc,CAACvB,SAAf,CAAyBU,GAAzB,CAA6B,SAA7B;AACAe,IAAAA,WAAW,GAAG,KAAd;AACAE,IAAAA,MAAM,GAAGS,QAAQ,CAACjB,KAAD,CAAR,GAAkB,EAA3B,CANqB,CAQzB;AACC,GATD,MASO,IAAIM,WAAW,IAAI,KAAnB,EAA0B;AAE7BO,IAAAA,KAAK,GAAGK,IAAI,CAACC,GAAL,EAAR;AACAC,IAAAA,WAAW,GAHkB,CAI7B;AACA;;AACA,aAASA,WAAT,GAAuB;AACnBN,MAAAA,WAAW,GAAGI,IAAI,CAACC,GAAL,EAAd;AACAJ,MAAAA,WAAW,GAAGD,WAAW,GAAGD,KAAd,GAAsBL,MAApC,CAFmB,CAInB;;AACAQ,MAAAA,SAAS,GAAID,WAAD,CAAcpB,cAAd,CAA6B,OAA7B,EAAsC;AAAEC,QAAAA,oBAAoB,EAAE,CAAxB;AAA2BC,QAAAA,WAAW,EAAE;AAAxC,OAAtC,CAAZ;AACAG,MAAAA,KAAK,GAAGgB,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAhC,CANmB,CAQnB;;AACA,UAAID,WAAW,IAAI,IAAnB,EAAyB;AACrBF,QAAAA,KAAK,IAAI,IAAT;AACAd,QAAAA,GAAG,IAAI,CAAP;AACH,OAZkB,CAanB;;;AACA,UAAIA,GAAG,IAAI,EAAX,EAAe;AACXA,QAAAA,GAAG,GAAG,CAAN;AACAD,QAAAA,GAAG,IAAI,CAAP;AACH;AACJ,KAxB4B,CA0B7B;;;AACAS,IAAAA,SAAS,GAAGc,WAAW,CAAC,YAAY;AAChCpB,MAAAA,OAAO,CAACQ,WAAR,GAAsBhB,KAAK,CAACK,GAAD,CAA3B;AACAI,MAAAA,OAAO,CAACO,WAAR,GAAsBhB,KAAK,CAACM,GAAD,CAA3B;AACAI,MAAAA,YAAY,CAACM,WAAb,GAA2BhB,KAAK,CAACO,KAAD,CAAhC;AACAvB,MAAAA,WAAW,CAACgC,WAAZ,GAA0BhB,KAAK,CAACK,GAAD,CAA/B;AACApB,MAAAA,WAAW,CAAC+B,WAAZ,GAA0BhB,KAAK,CAACM,GAAD,CAA/B;AACAqB,MAAAA,WAAW;AACd,KAPsB,EAOpB,EAPoB,CAAvB,CA3B6B,CAkCrB;AAER;;AACAf,IAAAA,cAAc,CAACK,QAAf,GAA0B,KAA1B,CArC6B,CAuC7B;;AACAN,IAAAA,cAAc,CAACK,WAAf,GAA6B,MAA7B;AACAL,IAAAA,cAAc,CAACvB,SAAf,CAAyBW,MAAzB,CAAgC,SAAhC;AACAY,IAAAA,cAAc,CAACvB,SAAf,CAAyBU,GAAzB,CAA6B,QAA7B,EA1C6B,CA4C7B;;AACAlB,IAAAA,QAAQ,CAACiD,mBAAT,CAA6B,OAA7B,EAAsC1C,cAAtC;AACA0B,IAAAA,WAAW,GAAG,IAAd;AACH;AACJ,CA7DD,GA+DA;AACA;AACA;;AACA,IAAIiB,OAAO,GAAG,EAAd;AAAA,IACIC,OAAO,GAAG,CADd;AAAA,IAEIC,QAAQ,GAAG,CAFf;AAAA,IAGIC,QAAQ,GAAG,CAHf;AAAA,IAIIC,WAAW,GAAGzD,QAAQ,CAACK,aAAT,CAAuB,0BAAvB,CAJlB;AAAA,IAKIqD,WAAW,GAAG1D,QAAQ,CAACK,aAAT,CAAuB,0BAAvB,CALlB;AAAA,IAMIsD,YAAY,GAAG3D,QAAQ,CAACK,aAAT,CAAuB,2BAAvB,CANnB;AAAA,IAOIuD,YAAY,GAAG5D,QAAQ,CAACK,aAAT,CAAuB,2BAAvB,CAPnB;AASA,IAAMwD,SAAS,GAAG7D,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AAEA,IAAM6D,WAAW,GAAG9D,QAAQ,CAACK,aAAT,CAAuB,iBAAvB,CAApB;AAAA,IACI0D,YAAY,GAAG/D,QAAQ,CAACK,aAAT,CAAuB,kBAAvB,CADnB;AAAA,IAEI2D,KAAK,GAAGhE,QAAQ,CAACK,aAAT,CAAuB,qBAAvB,CAFZ;AAAA,IAGI4D,OAAO,GAAGjE,QAAQ,CAACK,aAAT,CAAuB,4BAAvB,CAHd;AAAA,IAII6D,YAAY,GAAGlE,QAAQ,CAACK,aAAT,CAAuB,iCAAvB,CAJnB;AAAA,IAKI8D,QAAQ,GAAGnE,QAAQ,CAACK,aAAT,CAAuB,6BAAvB,CALf;AAAA,IAMI+D,aAAa,GAAGpE,QAAQ,CAACK,aAAT,CAAuB,kCAAvB,CANpB;AAAA,IAOIgE,aAAa,GAAGrE,QAAQ,CAACK,aAAT,CAAuB,6BAAvB,CAPpB;AASA,IAAIiE,OAAO,GAAGjB,OAAd;AAAA,IACIkB,OAAO,GAAGjB,OADd;AAAA,IAEIkB,WAAW,GAAGxE,QAAQ,CAACK,aAAT,CAAuB,2BAAvB,CAFlB;AAAA,IAGIoE,WAAW,GAAGzE,QAAQ,CAACK,aAAT,CAAuB,2BAAvB,CAHlB;AAKAmE,WAAW,CAACjC,WAAZ,GAA0BhB,KAAK,CAAC+C,OAAD,CAA/B;AAEA,IAAII,aAAJ;AAAA,IACIC,MAAM,GAAG,KADb,EAGA;;AACAV,OAAO,CAACrD,gBAAR,CAAyB,OAAzB,EAAkC;AAAA,SAAMgE,QAAQ,CAAC,KAAD,EAAQ,MAAR,CAAd;AAAA,CAAlC;AACAV,YAAY,CAACtD,gBAAb,CAA8B,OAA9B,EAAuC;AAAA,SAAMgE,QAAQ,CAAC,UAAD,EAAa,MAAb,CAAd;AAAA,CAAvC;AACAT,QAAQ,CAACvD,gBAAT,CAA0B,OAA1B,EAAmC;AAAA,SAAMgE,QAAQ,CAAC,KAAD,EAAQ,OAAR,CAAd;AAAA,CAAnC;AACAR,aAAa,CAACxD,gBAAd,CAA+B,OAA/B,EAAwC;AAAA,SAAMgE,QAAQ,CAAC,UAAD,EAAa,OAAb,CAAd;AAAA,CAAxC;AACAd,WAAW,CAACe,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACAf,YAAY,CAACc,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACAd,KAAK,CAACa,KAAN,CAAYC,OAAZ,GAAsB,MAAtB,EAEA;;AACA,IAAIC,QAAQ,GAAG/E,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAf;AACA,IAAM+E,SAAS,GAAGhF,QAAQ,CAACiF,gBAAT,CAA0B,4BAA1B,CAAlB;AAAA,IACIC,QAAQ,GAAGlF,QAAQ,CAACiF,gBAAT,CAA0B,4BAA1B,CADf;AAAA,IAEIE,sBAAsB,GAAGnF,QAAQ,CAACK,aAAT,CAAuB,0BAAvB,CAF7B;AAAA,IAGI+E,aAAa,GAAGpF,QAAQ,CAACK,aAAT,CAAuB,8BAAvB,CAHpB;AAAA,IAIIgF,SAAS,GAAGrF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAJhB,EAMA;;AACAoF,SAAS,CAACzE,gBAAV,CAA2B,OAA3B,EAAoC,YAAY;AAC5C0D,EAAAA,OAAO,GAAG,EAAV;AACAjB,EAAAA,OAAO,GAAG,EAAV;AACAE,EAAAA,QAAQ,GAAG,CAAX;AACAE,EAAAA,WAAW,CAAClB,WAAZ,GAA0BhB,KAAK,CAAC,EAAD,CAA/B;AACAoC,EAAAA,YAAY,CAACpB,WAAb,GAA2BhB,KAAK,CAAC,CAAD,CAAhC;AACA+D,EAAAA,UAAU;AACb,CAPD,GASA;;AACAjB,aAAa,CAACzD,gBAAd,CAA+B,OAA/B,EAAwC,YAAY;AAChD;AACA;AACA;AACA,MAAI+D,MAAM,IAAI,IAAd,EAAoB;AAChB;AACAY,IAAAA,OAAO;AACPC,IAAAA,KAAK,GAAG,OAAR;AACAC,IAAAA,aAAa,CAAC,QAAD,CAAb;AAEH,GAND,MAMO,IAAId,MAAM,IAAI,KAAd,EAAqB;AACxB;AACA5E,IAAAA,gBAAgB,CAAC0C,YAAjB,CAA8B,QAA9B,EAAwC,OAAxC,EAFwB,CAGxB;;AACA,aAASiD,aAAT,GAAyB;AACrB,UAAIpB,OAAO,IAAI,CAAX,IAAgBC,OAAO,IAAI,CAA/B,EAAkC;AAC9BoB,QAAAA,QAAQ,IAAI,CAAZ;AACAF,QAAAA,aAAa;AACb5B,QAAAA,SAAS,CAAC+B,IAAV;AACH,OAJD,MAIO,IAAIrB,OAAO,IAAI,CAAf,EAAkB;AACrBD,QAAAA,OAAO,IAAI,CAAX;AACAC,QAAAA,OAAO,GAAG,EAAV;AACH,OAHM,MAGA;AACHA,QAAAA,OAAO,IAAI,CAAX;AACH;AACJ,KAfuB,CAiBxB;;;AACAT,IAAAA,WAAW,CAACe,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACAf,IAAAA,YAAY,CAACc,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACAd,IAAAA,KAAK,CAACa,KAAN,CAAYC,OAAZ,GAAsB,MAAtB,CApBwB,CAsBxB;;AACAJ,IAAAA,aAAa,GAAGvB,WAAW,CAAC,YAAY;AACpCuC,MAAAA,aAAa;AACblB,MAAAA,WAAW,CAACjC,WAAZ,GAA0BhB,KAAK,CAAC+C,OAAD,CAA/B;AACAG,MAAAA,WAAW,CAAClC,WAAZ,GAA0BhB,KAAK,CAACgD,OAAD,CAA/B;AACAhE,MAAAA,WAAW,CAACgC,WAAZ,GAA0BhB,KAAK,CAAC+C,OAAD,CAA/B;AACA9D,MAAAA,WAAW,CAAC+B,WAAZ,GAA0BhB,KAAK,CAACgD,OAAD,CAA/B;AACH,KAN0B,EAMxB,IANwB,CAA3B,CAvBwB,CA+BxB;;AACAF,IAAAA,aAAa,CAAC9B,WAAd,GAA4B,MAA5B;AACA8B,IAAAA,aAAa,CAAC1D,SAAd,CAAwBW,MAAxB,CAA+B,SAA/B;AACA+C,IAAAA,aAAa,CAAC1D,SAAd,CAAwBU,GAAxB,CAA4B,QAA5B;AACAlB,IAAAA,QAAQ,CAACiD,mBAAT,CAA6B,OAA7B,EAAsC1C,cAAtC;AACAiE,IAAAA,MAAM,GAAG,IAAT;AACAc,IAAAA,aAAa;AAChB;AACJ,CAjDD;AAmDA,IAAMI,SAAS,GAAG7F,QAAQ,CAACiF,gBAAT,CAA0B,8CAA1B,CAAlB;AAAA,IACIa,UAAU,GAAG9F,QAAQ,CAACiF,gBAAT,CAA0B,0CAA1B,CADjB;AAAA,IAEIc,UAAU,GAAG/F,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAFjB;AAGA,IAAIuF,KAAK,GAAG,MAAZ;AAAA,IACIG,QAAQ,GAAG,CADf,EAGA;;AACA,SAASf,QAAT,CAAkBoB,QAAlB,EAA4BC,IAA5B,EAAkC;AAC9B,MAAIC,cAAc,GAAG,CAArB;;AACA,MAAID,IAAI,IAAI,MAAZ,EAAoB;AAChB;AACA,QAAID,QAAQ,IAAI,KAAZ,IAAqB3C,OAAO,GAAG,EAAnC,EAAuC;AACnCA,MAAAA,OAAO,IAAI6C,cAAX,CADmC,CAEvC;AACC,KAHD,MAGO,IAAIF,QAAQ,IAAI,UAAZ,IAA0B3C,OAAO,GAAG,CAAxC,EAA2C;AAC9CA,MAAAA,OAAO,IAAI6C,cAAX;AACH;AACJ,GARD,MAQO,IAAID,IAAI,IAAI,OAAZ,EAAqB;AACxB;AACA,QAAID,QAAQ,IAAI,KAAZ,IAAqBzC,QAAQ,GAAG,EAApC,EAAwC;AACpCA,MAAAA,QAAQ,IAAI2C,cAAZ,CADoC,CAExC;AACC,KAHD,MAGO,IAAIF,QAAQ,IAAI,UAAZ,IAA0BzC,QAAQ,GAAG,CAAzC,EAA4C;AAC/CA,MAAAA,QAAQ,IAAI2C,cAAZ;AACH;AACJ,GAlB6B,CAmB9B;;;AACA5B,EAAAA,OAAO,GAAGjB,OAAV;AACAmB,EAAAA,WAAW,CAACjC,WAAZ,GAA0BhB,KAAK,CAAC+C,OAAD,CAA/B;AACAb,EAAAA,WAAW,CAAClB,WAAZ,GAA0BhB,KAAK,CAAC8B,OAAD,CAA/B;AACAM,EAAAA,YAAY,CAACpB,WAAb,GAA2BhB,KAAK,CAACgC,QAAD,CAAhC;AACA+B,EAAAA,UAAU;AACb,EAGD;;;AACA,SAASA,UAAT,GAAsB;AAClB;AACA,MAAIa,KAAK,GAAG9C,OAAO,GAAG,CAAV,GAAcE,QAAQ,GAAG,CAArC;AAAA,MACI6C,cAAc,GAAG,GADrB;AAAA,MAEIC,UAAU,GAAGhD,OAAO,GAAG8C,KAAV,GAAkBC,cAFnC;AAAA,MAGIE,WAAW,GAAG/C,QAAQ,GAAG4C,KAAX,GAAmBC,cAHrC,CAFkB,CAOlB;;AACAP,EAAAA,SAAS,CAACU,OAAV,CAAkB,UAAUC,IAAV,EAAgB;AAC9BA,IAAAA,IAAI,CAAC3B,KAAL,CAAW4B,KAAX,GAAmBJ,UAAU,GAAG,IAAhC;AACH,GAFD;AAGAP,EAAAA,UAAU,CAACS,OAAX,CAAmB,UAAUC,IAAV,EAAgB;AAC/BA,IAAAA,IAAI,CAAC3B,KAAL,CAAW4B,KAAX,GAAmBH,WAAW,GAAG,IAAjC;AACH,GAFD;AAGH;;AACDhB,UAAU,IAEV;;AACA7B,WAAW,CAAClB,WAAZ,GAA0BhB,KAAK,CAAC8B,OAAD,CAA/B;AACAM,YAAY,CAACpB,WAAb,GAA2BhB,KAAK,CAACgC,QAAD,CAAhC,EAEA;;AACA,SAASkC,aAAT,CAAuBQ,IAAvB,EAA6B;AACzB;AACAF,EAAAA,UAAU,CAACxD,WAAX,GAAyBiD,KAAzB;AACApF,EAAAA,iBAAiB,CAACmC,WAAlB,GAAgCiD,KAAhC,CAHyB,CAIzB;;AACA,MAAIG,QAAQ,GAAG,CAAf,EAAkB;AACd;AACA,QAAIH,KAAK,IAAI,MAAb,EAAqB;AACjBlB,MAAAA,OAAO,GAAGjB,OAAV;AACAkB,MAAAA,OAAO,GAAGjB,OAAV;AACAkC,MAAAA,KAAK,GAAG,OAAR;AACH,KAJD,MAIO,IAAIA,KAAK,IAAI,OAAb,EAAsB;AACzBlB,MAAAA,OAAO,GAAGf,QAAV;AACAgB,MAAAA,OAAO,GAAGf,QAAV;AACAgC,MAAAA,KAAK,GAAG,MAAR;AACH,KAVa,CAYd;;;AACA,QAAIkB,QAAJ;;AACA,QAAIlB,KAAK,IAAI,MAAb,EAAqB;AACjBkB,MAAAA,QAAQ,GAAGlD,QAAQ,GAAGD,QAAQ,GAAG,EAAjC;AAEH,KAHD,MAGO,IAAIiC,KAAK,IAAI,OAAb,EAAsB;AACzBkB,MAAAA,QAAQ,GAAGpD,OAAO,GAAGD,OAAO,GAAG,EAA/B;AACH,KAnBa,CAqBd;;;AACA,QAAI4C,IAAI,IAAI,QAAZ,EAAsB;AAClBjB,MAAAA,SAAS,CAACW,QAAD,CAAT,CAAoBd,KAApB,CAA0B8B,SAA1B,GAAsC,MAAtC;AACH,KAFD,MAEO;AACH3B,MAAAA,SAAS,CAACW,QAAD,CAAT,CAAoBd,KAApB,CAA0B8B,SAA1B,GAAsC,gBAAgBD,QAAhB,GAA2B,IAA3B,GAAkC,iBAAxE;AACH,KA1Ba,CA4Bd;;;AACAvB,IAAAA,sBAAsB,CAACN,KAAvB,CAA6BC,OAA7B,GAAuC,MAAvC;AACAC,IAAAA,QAAQ,CAACF,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACH,GA/BD,MA+BO,IAAIa,QAAQ,IAAI,CAAhB,EAAmB;AACtB;AACArB,IAAAA,OAAO,GAAG,EAAV;AACAC,IAAAA,OAAO,GAAG,CAAV;AACAiB,IAAAA,KAAK,GAAG,YAAR,CAJsB,CAKtB;;AACA,QAAIkB,SAAQ,GAAGpC,OAAO,GAAG,EAAV,GAAeC,OAA9B;;AACAY,IAAAA,sBAAsB,CAACN,KAAvB,CAA6BC,OAA7B,GAAuC,MAAvC;AACAC,IAAAA,QAAQ,CAACF,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACAM,IAAAA,aAAa,CAACP,KAAd,CAAoB8B,SAApB,GAAgC,gBAAgBD,SAAhB,GAA2B,IAA3B,GAAkC,iBAAlE;AAEH,GAXM,MAWA;AACH7C,IAAAA,SAAS,CAAC+B,IAAV,GADG,CAEH;;AACAT,IAAAA,sBAAsB,CAACN,KAAvB,CAA6BC,OAA7B,GAAuC,MAAvC;AACAC,IAAAA,QAAQ,CAACF,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACAS,IAAAA,OAAO;AACPC,IAAAA,KAAK,GAAG,MAAR;AACH;AACJ;;AAED,SAASD,OAAT,GAAmB;AACnB;AACAxF,EAAAA,gBAAgB,CAAC0C,YAAjB,CAA8B,QAA9B,EAAwC,MAAxC,EAFmB,CAInB;;AACA6B,EAAAA,OAAO,GAAGjB,OAAV;AACAkB,EAAAA,OAAO,GAAGjB,OAAV;AACAkB,EAAAA,WAAW,CAACjC,WAAZ,GAA0BhB,KAAK,CAAC+C,OAAD,CAA/B;AACAG,EAAAA,WAAW,CAAClC,WAAZ,GAA0BhB,KAAK,CAACgD,OAAD,CAA/B;AACAhE,EAAAA,WAAW,CAACgC,WAAZ,GAA0BhB,KAAK,CAAC+C,OAAD,CAA/B;AACA9D,EAAAA,WAAW,CAAC+B,WAAZ,GAA0BhB,KAAK,CAACgD,OAAD,CAA/B,CAVmB,CAYnB;;AACA7B,EAAAA,aAAa,CAACgC,aAAD,CAAb,CAbmB,CAcnB;;AACAL,EAAAA,aAAa,CAAC9B,WAAd,GAA4B,OAA5B;AACA8B,EAAAA,aAAa,CAAC1D,SAAd,CAAwBW,MAAxB,CAA+B,QAA/B;AACA+C,EAAAA,aAAa,CAAC1D,SAAd,CAAwBU,GAAxB,CAA4B,SAA5B,EAjBmB,CAkBnB;;AACAlB,EAAAA,QAAQ,CAACS,gBAAT,CAA0B,OAA1B,EAAmCF,cAAnC,EAnBmB,CAqBnB;;AACAoD,EAAAA,WAAW,CAACe,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACAf,EAAAA,YAAY,CAACc,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACAd,EAAAA,KAAK,CAACa,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AAEAH,EAAAA,MAAM,GAAG,KAAT,CA1BmB,CA4BnB;;AACAK,EAAAA,SAAS,CAACuB,OAAV,CAAkB,UAAUC,IAAV,EAAgB;AAC9BA,IAAAA,IAAI,CAAC3B,KAAL,CAAW8B,SAAX,GAAuB,EAAvB;AACH,GAFD;AAGAvB,EAAAA,aAAa,CAACP,KAAd,CAAoB8B,SAApB,GAAgC,MAAhC;AACAhB,EAAAA,QAAQ,GAAG,CAAX;AACC","file":"time.b749e876.js","sourceRoot":"..\\public","sourcesContent":["// toggling time popup window\r\nconst timeToolsOverlay = document.getElementById('time'),\r\n    timeSelector = document.getElementById('time-selector'),\r\n    dropdown = document.getElementById('dropdown');\r\n\r\nvar peekStatusDisplay = document.querySelector('#time nav #peek-status'),\r\n    peekTimeDisplay = document.querySelector('#time nav h1'),\r\n    peekMinutes = peekTimeDisplay.querySelector('span.min'),\r\n    peekSeconds = peekTimeDisplay.querySelector('span.sec');\r\n\r\nvar timeMenuToggleOpen = false\r\n\r\n// toggling whether the dropdown menu isopen or closed\r\nfunction toggleTimeMenu() {\r\n    if (timeMenuToggleOpen == false) {\r\n        timeSelector.classList = 'open'\r\n        timeMenuToggleOpen = true\r\n    } else if (timeMenuToggleOpen == true) {\r\n        timeSelector.classList = 'close'\r\n        timeMenuToggleOpen = false\r\n    }\r\n}\r\n// listening for the dropdown selector\r\ndropdown.addEventListener('click', toggleTimeMenu)\r\n\r\nconst stopwatch = document.getElementById('stopwatch')\r\nconst stopwatchSelector = document.getElementById('stopwatch-select')\r\nconst pomodoro = document.getElementById('pomodoro')\r\nconst pomodoroSelector = document.getElementById('pomodoro-select')\r\n\r\n// timer dropdown selector\r\nstopwatchSelector.addEventListener('click', function () {\r\n    timeSelector.appendChild(pomodoroSelector)\r\n    setTimerType()\r\n})\r\npomodoroSelector.addEventListener('click', function () {\r\n    timeSelector.appendChild(stopwatchSelector)\r\n    setTimerType()\r\n})\r\n\r\n// set the timer type to stopwatch or pomodoro, pending user selection in dropdown\r\nfunction setTimerType() {\r\n    let currentTimer = timeSelector.querySelector(':first-child')\r\n    if (currentTimer.id == 'stopwatch-select') {\r\n        stopwatch.classList.add('active')\r\n        pomodoro.classList.remove('active')\r\n    } else if (currentTimer.id == 'pomodoro-select') {\r\n        stopwatch.classList.remove('active')\r\n        pomodoro.classList.add('active')\r\n    }\r\n}\r\nsetTimerType()\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////// COMMON FUNCTIONALITY ///////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n// setting two integer digits for all time functions\r\n// making sure there are always 2 digits https://stackoverflow.com/questions/8043026/how-to-format-numbers-by-prepending-0-to-single-digit-numbers\r\nfunction round(value) {\r\n    return (value).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////// STOPWATCH FUNCTIONALITY /////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\nvar min = sec = milli = 0,\r\n    minutes = document.querySelector('#stopwatch .minutes'),\r\n    seconds = document.querySelector('#stopwatch .seconds'),\r\n    milliseconds = document.querySelector('#stopwatch .milliseconds');\r\n\r\nconst stopwatchStart = document.querySelector('#stopwatch button.start-stop')\r\nconst stopwatchReset = document.querySelector('#stopwatch button.reset')\r\n\r\nvar stopwatchOn = false,\r\n    intervals;\r\n\r\n// resetting the stopwatch\r\nstopwatchReset.addEventListener('click', function () {\r\n    // set numbers to 0\r\n    milli = sec = min = offset = 0\r\n    minutes.textContent = round(min)\r\n    seconds.textContent = round(sec)\r\n    milliseconds.textContent = round(milli)\r\n    peekMinutes.textContent = round(min)\r\n    peekSeconds.textContent = round(sec)\r\n\r\n    // reset inner text of button\r\n    stopwatchStart.textContent = 'Start'\r\n    stopwatchStart.classList.remove('danger')\r\n    stopwatchStart.classList.add('primary')\r\n\r\n    // enable reset button clicking\r\n    stopwatchReset.disabled = false\r\n    stopwatchOn = false\r\n    timeToolsOverlay.setAttribute('static', 'true')\r\n\r\n    // turn off counting\r\n    clearInterval(intervals)\r\n\r\n    // enable dropdown\r\n    dropdown.addEventListener('click', toggleTimeMenu)\r\n})\r\n\r\nvar start, currentTime, elapsedTime, stringify;\r\nvar offset = 0;\r\n\r\n// stopwatch start/stop button\r\nstopwatchStart.addEventListener('click', function () {\r\n    timeToolsOverlay.setAttribute('static', 'false')\r\n\r\n    // if the stopwatch is on, we want to turn it off\r\n    if (stopwatchOn == true) {\r\n        clearInterval(intervals)\r\n        stopwatchStart.textContent = 'Start'\r\n        stopwatchStart.classList.remove('danger')\r\n        stopwatchStart.classList.add('primary')\r\n        stopwatchOn = false\r\n        offset = parseInt(milli) * 10\r\n\r\n    // otherwise, if the stopwatch is not on,\r\n    } else if (stopwatchOn == false) {\r\n\r\n        start = Date.now()\r\n        incrementUp()\r\n        // increment the time upwards from the time the start button was clicked\r\n        // learnt from https://stackoverflow.com/questions/29971898/how-to-create-an-accurate-timer-in-javascript\r\n        function incrementUp() {\r\n            currentTime = Date.now()\r\n            elapsedTime = currentTime - start + offset\r\n            \r\n            // formatting the elapsed time\r\n            stringify = (elapsedTime).toLocaleString('en-US', { minimumIntegerDigits: 3, useGrouping: false })\r\n            milli = stringify[0] + stringify[1]\r\n\r\n            // incrementing seconds\r\n            if (elapsedTime >= 1000) {\r\n                start += 1000\r\n                sec += 1\r\n            }\r\n            // incrementing minutes\r\n            if (sec == 60) {\r\n                sec = 0\r\n                min += 1\r\n            }\r\n        }\r\n\r\n        // set the intervals for frequent update of the numbers\r\n        intervals = setInterval(function () {\r\n            minutes.textContent = round(min)\r\n            seconds.textContent = round(sec)\r\n            milliseconds.textContent = round(milli)\r\n            peekMinutes.textContent = round(min)\r\n            peekSeconds.textContent = round(sec)\r\n            incrementUp()\r\n        }, 10); // update every 10 milliseconds\r\n\r\n        // enable the reset button\r\n        stopwatchReset.disabled = false\r\n\r\n        // replace text content for relevance and restyle button\r\n        stopwatchStart.textContent = 'Stop'\r\n        stopwatchStart.classList.remove('primary')\r\n        stopwatchStart.classList.add('danger')\r\n\r\n        // disable the timer dropdown\r\n        dropdown.removeEventListener('click', toggleTimeMenu)\r\n        stopwatchOn = true\r\n    }\r\n})\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////// POMODORO FUNCTIONALITY //////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\nvar workMin = 25,\r\n    workSec = 0,\r\n    breakMin = 5,\r\n    breakSec = 0,\r\n    workMinutes = document.querySelector('#pomodoro #work .minutes'),\r\n    workSeconds = document.querySelector('#pomodoro #work .seconds'),\r\n    breakMinutes = document.querySelector('#pomodoro #break .minutes'),\r\n    breakSeconds = document.querySelector('#pomodoro #break .seconds');\r\n\r\nconst pomoAlarm = document.getElementById('alarm-sound')\r\n\r\nconst workButtons = document.querySelector('#pomodoro #work'),\r\n    breakButtons = document.querySelector('#pomodoro #break'),\r\n    timer = document.querySelector('#pomodoro div#timer'),\r\n    workAdd = document.querySelector('#pomodoro #work button.add'),\r\n    workSubtract = document.querySelector('#pomodoro #work button.subtract'),\r\n    breakAdd = document.querySelector('#pomodoro #break button.add'),\r\n    breakSubtract = document.querySelector('#pomodoro #break button.subtract'),\r\n    pomoStartStop = document.querySelector('#pomodoro button.start-stop');\r\n\r\nvar pomoMin = workMin,\r\n    pomoSec = workSec,\r\n    pomoMinutes = document.querySelector('#pomodoro #timer .minutes'),\r\n    pomoSeconds = document.querySelector('#pomodoro #timer .seconds');\r\n\r\npomoMinutes.textContent = round(pomoMin)\r\n\r\nvar pomoIntervals,\r\n    pomoOn = false;\r\n\r\n//es6 shorthand for event listeners https://josephcardillo.medium.com/arrow-functions-and-this-in-es6-4f1d350a85cf\r\nworkAdd.addEventListener('click', () => pomoTime('add', 'work'))\r\nworkSubtract.addEventListener('click', () => pomoTime('subtract', 'work'))\r\nbreakAdd.addEventListener('click', () => pomoTime('add', 'break'))\r\nbreakSubtract.addEventListener('click', () => pomoTime('subtract', 'break'))\r\nworkButtons.style.display = 'flex'\r\nbreakButtons.style.display = 'flex'\r\ntimer.style.display = 'none'\r\n\r\n// timeline is the visual representation of work and break times in a pomodoro timer\r\nvar timeline = document.getElementById('timeline')\r\nconst loadSpans = document.querySelectorAll('#pomodoro div.length > div'),\r\n    allSpans = document.querySelectorAll('#pomodoro div > div.length'),\r\n    finalLoadSpanContainer = document.querySelector('#pomodoro div#final-load'),\r\n    finalLoadSpan = document.querySelector('#pomodoro div#final-load div'),\r\n    resetPomo = document.getElementById('reset-pomo');\r\n\r\n// reset button to return to default \r\nresetPomo.addEventListener('click', function () {\r\n    pomoMin = 25\r\n    workMin = 25\r\n    breakMin = 5\r\n    workMinutes.textContent = round(25)\r\n    breakMinutes.textContent = round(5)\r\n    pomoLength()\r\n})\r\n\r\n//start or stop the pomodoro timer\r\npomoStartStop.addEventListener('click', function () {\r\n    // reference for pomo intervals \r\n    //https://www.focusboosterapp.com/blog/common-misconceptions-of-the-pomodoro-technique/#:~:text=The%20average%20and%20suggested%20pomodoro,with%20a%2010%2Dminute%20break.\r\n    // if pomo is on, turn it off\r\n    if (pomoOn == true) {\r\n        // recall ending sequence\r\n        endPomo()\r\n        phase = 'break'\r\n        pomodoroTimer('static')\r\n\r\n    } else if (pomoOn == false) {\r\n        // timer is active\r\n        timeToolsOverlay.setAttribute('static', 'false')        \r\n        // increment downwards (uses similar functionality to stopwatch above^^)\r\n        function incrementDown() {\r\n            if (pomoMin == 0 && pomoSec == 0) {\r\n                sessions += 1\r\n                pomodoroTimer()\r\n                pomoAlarm.play()\r\n            } else if (pomoSec == 0) {\r\n                pomoMin -= 1\r\n                pomoSec = 59\r\n            } else {\r\n                pomoSec -= 1\r\n            }\r\n        }\r\n\r\n        // show/hide relevant elements\r\n        workButtons.style.display = 'none'\r\n        breakButtons.style.display = 'none'\r\n        timer.style.display = 'flex'\r\n\r\n        // set intervals and text content\r\n        pomoIntervals = setInterval(function () {\r\n            incrementDown()\r\n            pomoMinutes.textContent = round(pomoMin)\r\n            pomoSeconds.textContent = round(pomoSec)\r\n            peekMinutes.textContent = round(pomoMin)\r\n            peekSeconds.textContent = round(pomoSec)\r\n        }, 1000);\r\n\r\n        // change timer status\r\n        pomoStartStop.textContent = 'Stop'\r\n        pomoStartStop.classList.remove('primary')\r\n        pomoStartStop.classList.add('danger')\r\n        dropdown.removeEventListener('click', toggleTimeMenu)\r\n        pomoOn = true\r\n        pomodoroTimer()\r\n    }\r\n})\r\n\r\nconst workSpans = document.querySelectorAll('#pomodoro div > div.length:nth-child(2n + 1)'),\r\n    breakSpans = document.querySelectorAll('#pomodoro div > div.length:nth-child(2n)'),\r\n    pomoStatus = document.getElementById('pomo-status')\r\nvar phase = 'work',\r\n    sessions = 0\r\n\r\n// increments timer times up and down\r\nfunction pomoTime(operator, mode) {\r\n    let incrementValue = 5\r\n    if (mode == 'work') {\r\n        // increase\r\n        if (operator == 'add' && workMin < 60) {\r\n            workMin += incrementValue\r\n        // decrease\r\n        } else if (operator == 'subtract' && workMin > 5) {\r\n            workMin -= incrementValue\r\n        }\r\n    } else if (mode == 'break') {\r\n        // increase\r\n        if (operator == 'add' && breakMin < 20) {\r\n            breakMin += incrementValue\r\n        // decrease\r\n        } else if (operator == 'subtract' && breakMin > 5) {\r\n            breakMin -= incrementValue\r\n        }\r\n    }\r\n    // set text content\r\n    pomoMin = workMin\r\n    pomoMinutes.textContent = round(pomoMin)\r\n    workMinutes.textContent = round(workMin)\r\n    breakMinutes.textContent = round(breakMin)\r\n    pomoLength()\r\n}\r\n\r\n\r\n// visualising the work and break times\r\nfunction pomoLength() {\r\n    // calculating distance\r\n    let total = workMin * 3 + breakMin * 2,\r\n        timelineLength = 232,\r\n        workLength = workMin / total * timelineLength,\r\n        breakLength = breakMin / total * timelineLength;\r\n\r\n    // apply relevant lengths\r\n    workSpans.forEach(function (span) {\r\n        span.style.width = workLength + 'px';\r\n    })\r\n    breakSpans.forEach(function (span) {\r\n        span.style.width = breakLength + 'px';\r\n    })\r\n}\r\npomoLength()\r\n\r\n// setting text content\r\nworkMinutes.textContent = round(workMin)\r\nbreakMinutes.textContent = round(breakMin)\r\n\r\n// this sets new phases of the timer if a phase ends.\r\nfunction pomodoroTimer(mode) {\r\n    // update 'status' for user when pomo time changes\r\n    pomoStatus.textContent = phase;\r\n    peekStatusDisplay.textContent = phase\r\n    // check sessions\r\n    if (sessions < 5) {\r\n        // alternate between sessions\r\n        if (phase == 'work') {\r\n            pomoMin = workMin\r\n            pomoSec = workSec\r\n            phase = 'break'\r\n        } else if (phase == 'break') {\r\n            pomoMin = breakMin\r\n            pomoSec = breakSec\r\n            phase = 'work'\r\n        }\r\n\r\n        // calculate the full time taken for each pomo phase\r\n        let fullTime;\r\n        if (phase == 'work') {\r\n            fullTime = breakSec + breakMin * 60\r\n\r\n        } else if (phase == 'break') {\r\n            fullTime = workSec + workMin * 60\r\n        }\r\n\r\n        // cancel the animations if timer is off\r\n        if (mode == 'static') {\r\n            loadSpans[sessions].style.animation = 'none'\r\n        } else {\r\n            loadSpans[sessions].style.animation = 'load-spans ' + fullTime + 's ' + 'linear forwards'\r\n        }\r\n\r\n        // show/hide relevant elements\r\n        finalLoadSpanContainer.style.display = 'none'\r\n        timeline.style.display = 'flex'\r\n    } else if (sessions == 5) {\r\n        // setting duration of final break\r\n        pomoMin = 30\r\n        pomoSec = 0\r\n        phase = 'finalbreak'\r\n        // enable animations\r\n        let fullTime = pomoMin * 60 + pomoSec\r\n        finalLoadSpanContainer.style.display = 'flex'\r\n        timeline.style.display = 'none'\r\n        finalLoadSpan.style.animation = 'load-spans ' + fullTime + 's ' + 'linear forwards'\r\n        \r\n    } else {\r\n        pomoAlarm.play()\r\n        // otherwise, the pomodoro has ended - reset everything\r\n        finalLoadSpanContainer.style.display = 'none'\r\n        timeline.style.display = 'flex'\r\n        endPomo()\r\n        phase = 'work'\r\n    }\r\n}\r\n\r\nfunction endPomo() {\r\n// both timers are inactive\r\ntimeToolsOverlay.setAttribute('static', 'true')\r\n\r\n// reset the pomo time\r\npomoMin = workMin\r\npomoSec = workSec\r\npomoMinutes.textContent = round(pomoMin)\r\npomoSeconds.textContent = round(pomoSec)\r\npeekMinutes.textContent = round(pomoMin)\r\npeekSeconds.textContent = round(pomoSec)\r\n\r\n// stop the countup intervals\r\nclearInterval(pomoIntervals)\r\n// reset the text\r\npomoStartStop.textContent = 'Start'\r\npomoStartStop.classList.remove('danger')\r\npomoStartStop.classList.add('primary')\r\n// allow dropdowns\r\ndropdown.addEventListener('click', toggleTimeMenu)\r\n\r\n// display/show relevant elements\r\nworkButtons.style.display = 'flex'\r\nbreakButtons.style.display = 'flex'\r\ntimer.style.display = 'none'\r\n\r\npomoOn = false\r\n\r\n// remove animation functions\r\nloadSpans.forEach(function (span) {\r\n    span.style.animation = ''\r\n})\r\nfinalLoadSpan.style.animation = 'none'\r\nsessions = 0\r\n}\r\n\r\n"]}