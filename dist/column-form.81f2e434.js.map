{"version":3,"sources":["js/column.js","js/kanban.js","js/column-form.js"],"names":["Column","id","name","column","document","querySelector","cloneNode","columnName","value","editButton","deleteButton","total","textContent","cards","querySelectorAll","forEach","card","remove","tasks","getElementById","appendChild","scrollTo","top","left","clientWidth","behavior","countCards","cardContainers","columns","getElementsByClassName","emptyStateMessage","length","style","display","count","object","index","cardCount","i","classList","sortability","element","Sortable","group","animation","swapThreshold","ghostClass","chosenClass","dragClass","filter","forceFallback","onStart","evt","itemEl","item","cursor","body","getElementsByTagName","onEnd","allDeleteColumnButtons","button","parentElement","add","createTaskForm","updateColumnNames","columnNames","statuses","innerHTML","newOption","createElement","modalBackground","addColumnForm","newColumnToggle","newColumn","toggleColumnForm","validateText","removeAttribute","reset","createNewSortable","newCard","kanban","enableButtons","addEventListener","columnCancelButton","columnCloseButton","nextElementSibling","columnSubmitButton","event","preventDefault","Date","now","setAttribute","col","createColumn","columnEditDeleteFunctionality","columnDeleteToolTip","columnEditToolTip","columnTitles","columnTitle","editColumnButton","deleteColumnButton","columnNameInput","focus","key","blur"],"mappings":";;AEAA;;AACA;;;;ADDA;AACO,SAAS0B,UAAT,GAAsB;AACzB,MAAIf,KAAK,GAAGP,QAAQ,CAACU,gBAAT,CAA0B,QAA1B,CAAZ;AAAA,MACIa,cAAc,GAAGvB,QAAQ,CAACU,gBAAT,CAA0B,QAA1B,CADrB;ACCJ,ADDI,ICCEiD,EDCEnC,OAAO,GAAGxB,ECDE,GAAGA,GDCG,CAACU,ICDI,CAACK,WDCd,CAA0B,ECDrB,CAAwB,MDC7B,CAFd,WCCmB,CAAvB,EAEA;ADHI,IDFEnB,ECKEa,KAAK,GAAGT,QAAQ,CAACyB,sBAAT,CAAgC,MAAhC,CAHZ;ACIJ,AFLI,ACMA,MAAIC,GCDCkC,SFLO/D,EAAZ,EAAgBC,CCMK,GCDzB,AFLI,ACMwBE,EDNF,CEKG,KDCO,CAACe,cAAT,CAAwB,mBAAxB,CAAxB,CANyB,CAOzB;ACDA,AFNsB,MEMlB8C,WAAW,GAAG7D,QAAQ,CAACU,gBAAT,CAA0B,cAA1B,CAAlB,CADyB,CAEzB;ADCA,MAAID,KAAK,CAACkB,MAAN,IAAgB,CAApB,EAAuB;ACAvB,AFPI,ACQAJ,IAAAA,ECDAuC,GFPKjE,EAAL,GEOQ,AFPEA,EAAV,CEOW8D,CDCG,CAAC,CAAD,CAAd,CAAkB3C,SCDO,CAACf,CDC1B,CAA8ByB,WCDnB,CAA6B,KDCxC,gBCDW,CAAf;AACAoC,AFPI,ACQApC,ECDJoC,EDCIpC,KDRK5B,CEOD,CAACiE,EFPL,GAAYjE,IEOhB,AFPI,CCQiB,CAAC8B,CCDD,EAArB,CAJyB,CAKzB,ADAI,CAAwBC,OAAxB,GAAkC,MAAlC;ADPH,ACQA,GAHD,MAGO;ACAPgC,ADCIrC,ECDJqC,EDCIrC,OAAO,CAAC,CCDD,ADCA,CCDCb,ADCR,CAAWK,MCDf,CAAoB,IDChB,CAAuBU,KCDGK,MAAV,EAAkB,IDClC;ACAA,ADCAL,IAAAA,ICDIsC,SAAS,GAAGhE,CDCC,CAAC4B,KAAlB,CCDwB,ADCAC,CCDCoC,MDCzB,GAAkC,ICDlB,CAAuB,CDCvC,OCDgB,CAAhB;AACAD,ADCH,GAdwB,CCarBA,ADGJ,SCHa,CAACxD,WAAV,GAAwBuB,MAAM,CAAC3B,KAA/B;AACA4D,IAAAA,OFTJ,EESa,CAAC5D,KAAV,GAAkB2B,MAAM,CAAC3B,KAAzB,CFTW;AEUX0D,AFTA,IESAA,QAAQ,CAAC9C,WAAT,CAAqBgD,SAArB;AACH,AFTG,ACUJzD,EAAAA,CCNA,IDMK,CAACI,EDVEZ,KCUR,CDVc,ACUA,GDVGC,MCUM8B,EDVE,CAAC7B,ECUZ,CAAe8B,MAAf,EAAuBC,EDVpB,CAAuB,ECU1B,EAA8B,QDV3B,CAAb;AEUP,AFTOjC,ACUA,MDVAA,ECUIkC,IDVE,GAAGlC,ECUI,GAAG,CDVD,ACUf,CDVgBG,SAAP,CAAiB,IAAjB,CAAT;AAEA,UAAIC,UAAU,GAAGJ,MAAM,CAACE,aAAP,CAAqB,mBAArB,CAAjB;AEQR2D,AFPQzD,ACQA,MDRAA,GCQK,IAAI+B,CAAC,EDRA,CEOD,AFPE9B,ACQE,CAAb,EAAgB8B,CAAC,CDRjB,ECQoBX,CDRD,KAAKzB,IAAxB,ICQkC,CAACkC,KAAD,CAAd,CAAsBtB,gBAAtB,CAAuC,OAAvC,EAAgDiB,MAApE,EAA4EO,CAAC,EAA7E,EAAkF;ACC1F,AFRQ,ACQI,ICANgC,MFRM7D,ACQIkB,SCAK,CFRC,EEQEvB,CFRCD,CCQK,CAACiC,IDRA,CEQC,AFRA/B,ACQF,CCAGc,ADAjB,CAAsBL,WDRb,CAAqB,CEQtB,CAAwB,EDAhC,CAAuC,OAAvC,EAAgDwB,CAAhD,EDRS,ACQ0CC,CDR3D,EEQgB,CAAxB,KDAgB,CAA6DR,MAA7D,IAAuE,CAA3E,EAA8E;ACC1F,AFRQ,ACQQM,ICAVkC,IDAUlC,EDRJ3B,OEQO,ADAM,GCAHN,CDAO,CDRL,ACQR,GDRWD,GEQG,CAACgB,EFRE,CAACd,WEQZ,CAAwB,CFRnB,CAAqB,eEQ1B,CAAtB,GFR2B,CAAnB;AESR,AFPQ,ACOK,ICATmE,MFPQ7D,KAAK,GAAGR,CEOD,GAAG,EFPI,CAACE,EEO3B,WFPoB,CAAqB,UAArB,CAAZ;AEQR,AFPQM,ACOC,ICAH8D,EFPE9D,KAAK,CAACC,CEOC,GAAGR,OFPV,CEOkB,CAACe,CFPC,CAApB,CAXW,CAYX,UEMU,CAAwB,YAAxB,CAAlB,EAEA;;AACA,AFRQ,ACMAR,IAAAA,KCEC+D,ADFI,CDND7D,ACMEuB,KDNG,ACMJ,CAAL,CAAaxB,CDNDT,MAAM,CEQ1B,AFR2BW,GEQC,ADFpB,GAA2BuB,SAA3B,CDNY,CAAwB,YAAxB,CAAZ;AESJ,AFRIxB,ACMH,GARD,GDEIA,KAAK,CAACE,OAAN,CAAc,UAAUC,IAAV,EAAgB;AESlC2D,AFRQ3D,ACMX,ECEG2D,MFRQ3D,IAAI,CAACC,CEQD,CAACkD,IFRL,KEQR,GAAyB,EAAzB;AACA,AFRK,MEQDjE,CFVA,EAdW,CEwBP,AFNJ,GEMOqE,aAAa,CAAClE,aAAd,CAA4B,OAA5B,CAAX;AACAH,ADHJwB,ECGIxB,IAAI,CAAC0E,GDHC,IAEV,QCCI,CAAqB,UAArB,EAJwB,CAMxB;AFRI,UAAI1D,KAAK,GAAGd,QAAQ,CAACe,cAAT,CAAwB,OAAxB,CAAZ;AESJ,AFRID,ACKD,MCGCsD,AFRAtD,GCKQsB,EDLH,CAACpB,QCKP,CCGgB,EFRf,ACKsB,CDLJjB,CEQC,KAAvB,AFRI,EEQ0B,AF5Bf,CAsBX;AEOAoE,ADHJ,ICGIA,aAAa,CAAChC,SAAd,CAAwBuB,GAAxB,CAA4B,QAA5B;AACAU,AFPAtD,ACIJ,ICGIsD,EFPAtD,ACIAS,KDJK,CAACP,OEOS,CDHD,ECGI,CFPlB,ACIiBhB,CDJCA,EEOlB,KDHyB,CDJC,ACIAU,CDJCT,aAAT,CAAuB,CCIxB,CAA0B,QAA1B,CAArB,SDJsB,CAAlB,EAvBW,CAyBX;AEMAiE,ADHJ3C,EAAAA,ECGI2C,YDHU,CAACvD,ECGI,CAACiB,IDHpB,CCGI,ADHmB,CCGGC,OAAtB,EDH4BQ,CCGI,MAAhC,ADHmB,EAAkB;ACIxC,AFNGvB,ACGA,GCDJ,GFFIA,ECGIwB,CCGD,EFNE,CAACrB,CEMCmD,GDHP,CAAa/B,GDHb,CAAe,GCGf,EAAsB,ECGA,IAAI,IAAvB,EAA6B;AAChC8B,AFNIjD,ACGAqB,ICGJ4B,EDHI5B,EDHArB,GAAG,ACGE,EDHA,ACGE,CDJI,GEOF,CAACiB,GDJQ,MCItB,CAAwBtB,MAAxB,CAA+B,QAA/B;AACAsD,AFNIhD,ACGAqB,ICGJ2B,EDHI3B,EDHArB,IAAI,EAAEL,CCGG,ECGA,ADHE,CCGD2D,CFNC,CAACrD,ACCM,GCKtB,QFRe;AESfgD,AFNI/C,ACGAoB,ICGJ2B,EDHI3B,EDHApB,QAAQ,EAAE,CEMC,ADHE,EAAE,CCGD,GDNI,ECMtB;AACA6C,AFVe,ACOXxB,ICGJwB,EDHIxB,CDPJ,SCOc,EAAE,CCGD,CAACd,KAAhB,CAAsBC,IDPA,GCOtB,GAAgC,MAAhC;AACH,AFNA,ACGOc,MAAAA,WAAW,EAAE,aALK;ACS7B,ADHWC,ECKZ,IDLYA,SAAS,EAAE,eANO;AAOlBC,MAAAA,MAAM,EAAE,WAPU;AAOG;ACKjC,ADJYC,MAAAA,GCIH4B,UDJgB,EAAE,IARG,CCY9B,GAA6B;AACzB,ADHQ3B,MCGJ4B,ADHI5B,OCGG,ADHI,EAAE,CCGH/C,QAAQ,CAACU,ODHIsC,GAAV,EAAe,ICGlB,CAA0B,QAA1B,CAAd;AACA2B,ADHY,ECGZA,OAAO,GAAGA,GFTC/E,IESM,CAAC+E,OAAO,CAAChD,MAAR,GAAiB,CAAlB,CAAjB;AACA,ADHY,MCGRW,MDHYW,ECGhB,CAAa0B,GDHS,GAAG3B,CCGzB,EAAsB,ADHM,CAACE,IAAjB;ACIRX,ADHQU,ICGRV,IDHQU,CCGH,EAAE,GDHO,CAACrB,ICEG,CDFV,CAAauB,MAAb,GAAsB,UAAtB;ACIRX,ADFQ,ICERA,QDFYY,CCEH,EAAE,CDFK,ECAE,CDACpD,QAAQ,CAACqD,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAX;ACGRZ,ADFQW,ICERX,IDFQW,IAAI,CAACxB,ICEA,CDFL,CCEO,ADFIuB,ICDD,EDCV,GAAoB,UAApB;ACGRT,ADFK,ICELA,GDnBsB,OCmBZ,EAAE,YAJM;AAKlBC,ADDIW,ICCJX,EDDIW,KAAK,EAAE,ECCA,EAAE,WDDQN,ECJH,CDIP,EAAe;ACE1BJ,ADDQ,ICCRA,SAAS,EAAE,eANO;AAOlBC,ADDQ,ICCRA,MAAM,EAAE,ADDII,MAAM,GAAGD,ECNH,CDMM,CAACE,IAAjB;ACERJ,ADDQG,ICCRH,IDDQG,MAAM,CAACrB,ECCF,EAAE,CDDP,CAAauB,E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","file":"column-form.81f2e434.js","sourceRoot":"..\\public","sourcesContent":["class Column {\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    createColumn() {\r\n        // duplicating existing columns and tweaking some elements to make it unique\r\n        let column = document.querySelector('div.column')\r\n        column = column.cloneNode(true)\r\n\r\n        let columnName = column.querySelector('input.column-name')\r\n        columnName.value = this.name;\r\n        let editButton = column.querySelector('svg.edit-column')\r\n        let deleteButton = column.querySelector('svg.delete-column')\r\n\r\n        let total = column.querySelector('h3.total')\r\n        total.textContent = 0;\r\n        // remove any existing cards inside the column\r\n        let cards = column.querySelectorAll('.cards > *')\r\n        cards.forEach(function (card) {\r\n            card.remove()\r\n        })\r\n\r\n        // appending to the tasks container\r\n        let tasks = document.getElementById('tasks')\r\n        tasks.appendChild(column)\r\n\r\n        // adding the final padding\r\n        tasks.appendChild(document.querySelector('#tasks div.padding'))\r\n\r\n        // smooth scroll to the new column\r\n        tasks.scrollTo({\r\n            top: 0,\r\n            left: tasks.clientWidth,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n}\r\n\r\nexport default Column","// counts how many cards are in a kanban column\r\nexport function countCards() {\r\n    let total = document.querySelectorAll('.total'),\r\n        cardContainers = document.querySelectorAll('.cards'),\r\n        columns = document.querySelectorAll('.column'),\r\n        cards = document.getElementsByClassName('card');\r\n\r\n    let emptyStateMessage = document.getElementById('empty-state-tasks');\r\n    // if there are no cards, add an empty state message, otherwise remove it.\r\n    if (cards.length == 0) {\r\n        cardContainers[0].appendChild(emptyStateMessage)\r\n        emptyStateMessage.style.display = 'flex';\r\n    } else {\r\n        columns[0].appendChild(emptyStateMessage)\r\n        emptyStateMessage.style.display = 'none';\r\n    }\r\n\r\n    // writing the total number of cards at the head of each column\r\n    total.forEach(function count(object, index) {\r\n        let cardCount = 0;\r\n        for (let i = 0; i < cardContainers[index].querySelectorAll('.card').length; i ++) {\r\n            if (cardContainers[index].querySelectorAll('.card')[i].classList.length == 1) {\r\n                cardCount += 1\r\n            }\r\n        }\r\n        total[index].textContent = cardCount;\r\n    })\r\n}\r\ncountCards()\r\n\r\n// Setting sortable functionality to the cards with the sortable.js library\r\nexport function sortability() {\r\n    // applying sortability to the children of each .cards container\r\n    let cardContainers = document.querySelectorAll('.cards')\r\n    cardContainers.forEach(function(element) {\r\n        new Sortable(element, {\r\n            group: 'nested',\r\n            animation: 200,\r\n            swapThreshold: 0.65,\r\n            ghostClass: 'ghost-card',\r\n            chosenClass: 'chosen-card',\r\n            dragClass: \"sortable-drag\",\r\n            filter: '.filtered', // 'filtered' class is not draggable\r\n            forceFallback: true,\r\n\r\n            onStart: function (evt) {\r\n                // setting the cursor to grabbing while user is holding card\r\n                let itemEl = evt.item;\r\n                itemEl.style.cursor = 'grabbing'\r\n\r\n                let body = document.getElementsByTagName('body')[0]\r\n                body.style.cursor = 'grabbing'\r\n            },\r\n\r\n            onEnd: function (evt) {\r\n                // setting the cursor to grab \r\n                let itemEl = evt.item;\r\n                itemEl.style.cursor = 'grab'\r\n                \r\n                // reset cursor to normal arrow\r\n                let body = document.getElementsByTagName('body')[0]\r\n                body.style.cursor = 'initial'\r\n\r\n                // recount all the cards in each column and update their totals\r\n                countCards()\r\n\r\n                // set enabled/disabled status to each of the buttons after the reallocation happened\r\n                let allDeleteColumnButtons = document.querySelectorAll('svg.delete-column')\r\n                allDeleteColumnButtons.forEach( function(button) {\r\n                    let columns = document.getElementsByClassName('column')\r\n                    let column = button.parentElement.parentElement\r\n                    let cards = column.querySelectorAll('.card')\r\n                    \r\n                    // ensuring there are mroe than 3 columns and no cards within the column\r\n                    if (columns.length > 3 && cards.length == 0) {\r\n                        button.classList.remove('disabled')\r\n                    } else if (columns.length <= 3) {\r\n                        button.classList.add('disabled') \r\n                    } else if (cards.length > 0) {\r\n                        button.classList.add('disabled')\r\n                    }\r\n                })\r\n            },\r\n        });\r\n    })\r\n}\r\n\r\nsortability()","import Column from './column'\r\nimport * as kanban from './kanban'\r\n\r\nconst createTaskForm = document.getElementById('create-task-form')\r\n\r\n// updates all column names after any change/renaming is done\r\nfunction updateColumnNames() {\r\n    let columnNames = document.querySelectorAll('.column-name')\r\n    // reset the form statuses for the create task form\r\n    let statuses = createTaskForm.querySelector('select[name=status]');\r\n    statuses.innerHTML = ''\r\n    // apply all the new column names\r\n    columnNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        statuses.appendChild(newOption)\r\n    })\r\n}\r\nupdateColumnNames()\r\n\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addColumnForm = document.getElementById('add-column-form')\r\nvar newColumnToggle = false;\r\nconst newColumn = document.getElementById('new-column');\r\n\r\n// toggle the column form to either show or hide\r\nfunction toggleColumnForm() {\r\n    // reset the validation required messages\r\n    validateText.innerHTML = ''\r\n    let name = addColumnForm.querySelector('input')\r\n    name.removeAttribute('required')\r\n\r\n    // toggle the column form to show/hide\r\n    if (newColumnToggle == false) {\r\n        addColumnForm.classList.add('active')\r\n        newColumnToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newColumnToggle == true) {\r\n        addColumnForm.classList.remove('active')\r\n        addColumnForm.reset()\r\n        newColumnToggle = false\r\n        modalBackground.style.display = 'none'\r\n    }\r\n}\r\n\r\n// enable sortable functionality for new created column\r\nfunction createNewSortable() {\r\n    let newCard = document.querySelectorAll('.cards')\r\n    newCard = newCard[newCard.length - 1]\r\n    new Sortable(newCard, {\r\n        group: 'nested',\r\n        animation: 200,\r\n        swapThreshold: 0.65,\r\n        ghostClass: 'ghost-card',\r\n        chosenClass: 'chosen-card',\r\n        dragClass: \"sortable-drag\",\r\n        filter: '.filtered',\r\n        forceFallback: true,\r\n        onEnd: function (evt) {\r\n            kanban.countCards()\r\n        }\r\n    })\r\n}\r\n\r\n//updating disabled/enabled status for all buttons\r\nfunction enableButtons() {\r\n    let allDeleteColumnButtons = document.querySelectorAll('svg.delete-column')\r\n    allDeleteColumnButtons.forEach( function(button) {\r\n        let columns = document.getElementsByClassName('column')\r\n        let column = button.parentElement.parentElement\r\n        let cards = column.querySelectorAll('.card')\r\n\r\n        // checking for more than 3 columns and no cards within column\r\n        if (columns.length > 3 && cards.length == 0) {\r\n            button.classList.remove('disabled')\r\n        } else if (columns.length <= 3 || cards.length > 0) {\r\n            button.classList.add('disabled')\r\n        }\r\n    })\r\n}\r\n\r\n// adding an event listener to bring up the form\r\nnewColumn.addEventListener('click', toggleColumnForm)\r\n\r\n// adding an event listener for submitting the column\r\nconst columnCancelButton = document.getElementById('add-column-cancel')\r\nconst columnCloseButton = columnCancelButton.nextElementSibling\r\n\r\n// closing the column without saving\r\ncolumnCancelButton.addEventListener('click', function () {\r\n    toggleColumnForm()\r\n})\r\ncolumnCloseButton.addEventListener('click', function () {\r\n    toggleColumnForm()\r\n})\r\n\r\n// submitting column\r\nconst columnSubmitButton = document.getElementById('add-column-submit')\r\nvar validateText = addColumnForm.querySelector('.validate-message')\r\ncolumnSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault()\r\n\r\n    let id = Date.now()\r\n    let name = addColumnForm.querySelector('input')\r\n\r\n    // if there isn't a name for the column, don't submit the form. ask user to input\r\n    if (name.value == '') {\r\n        validateText.innerHTML = 'Please enter a name for this column.'\r\n        name.setAttribute('required', 'true')\r\n    } else {\r\n        // create a column\r\n        let col = new Column(id, name.value)\r\n        col.createColumn()\r\n\r\n        // reset statuses\r\n        enableButtons()\r\n        updateColumnNames()\r\n        toggleColumnForm()\r\n        createNewSortable();\r\n        columnEditDeleteFunctionality()\r\n    }\r\n})\r\n\r\n// //////////// COLUMN DELETE and EDIT BUTTONS\r\nconst columnDeleteToolTip = document.querySelector('div.tooltip#delete')\r\nconst columnEditToolTip = document.querySelector('div.tooltip#edit')\r\n\r\n// for all the columns\r\nfunction columnEditDeleteFunctionality() {\r\n    const columnTitles = document.querySelectorAll('div.title')\r\n    columnTitles.forEach(function (columnTitle) {\r\n        let editColumnButton = columnTitle.querySelector('svg.edit-column')\r\n        let deleteColumnButton = columnTitle.querySelector('svg.delete-column')\r\n        let columnNameInput = columnTitle.querySelector('input.column-name')\r\n\r\n        // focus when clicked\r\n        editColumnButton.addEventListener('click', function () {\r\n            columnNameInput.focus()\r\n        })\r\n        // on change, reupdate all column names\r\n        columnNameInput.addEventListener('change', function (event) {\r\n            updateColumnNames();\r\n        })\r\n        // 'save' column name\r\n        columnNameInput.addEventListener('keyup', function (event) {\r\n            if (event.key === 'Enter') {\r\n                columnNameInput.blur()\r\n            }\r\n            updateColumnNames();\r\n        })\r\n        // tooltip on hover\r\n        editColumnButton.addEventListener('mouseover', function () {\r\n            editColumnButton.parentElement.appendChild(columnEditToolTip)\r\n        })\r\n        // delete columns as long as there are more than 3 and there are no cards within it\r\n        deleteColumnButton.addEventListener('click', function () {\r\n            let columns = document.getElementsByClassName('column')\r\n            let column = columnTitle.parentElement\r\n            let cards = column.querySelectorAll('.card')\r\n            if (columns.length > 3 && cards.length == 0) {\r\n                column.remove()\r\n                updateColumnNames()\r\n            }\r\n            // updating the 'disabled' visual of each delete icon\r\n            let allDeleteColumnButtons = document.querySelectorAll('svg.delete-column')\r\n            allDeleteColumnButtons.forEach(function (button) {\r\n                let columns = document.getElementsByClassName('column')\r\n                let column = button.parentElement.parentElement\r\n                let cards = column.querySelectorAll('.card')\r\n\r\n                //if there are cards inside the column, or there are only 3 columns, delete is disabled. \r\n                if (columns.length > 3 && cards.length == 0) {\r\n                    button.classList.remove('disabled')\r\n                } else if (columns.length <= 3 || cards.length > 0) {\r\n                    button.classList.add('disabled')\r\n                }\r\n            })\r\n        })\r\n\r\n        // updating 'disabled' status for icons on hover\r\n        deleteColumnButton.addEventListener('mouseover', function () {\r\n            let columns = document.getElementsByClassName('column')\r\n            let column = columnTitle.parentElement\r\n            let cards = column.querySelectorAll('.card')\r\n            deleteColumnButton.parentElement.appendChild(columnDeleteToolTip)\r\n            if (columns.length > 3 && cards.length == 0) {\r\n                deleteColumnButton.classList.remove('disabled')\r\n            } else if (columns.length <= 3 || cards.length > 0) {\r\n                deleteColumnButton.classList.add('disabled')\r\n            }\r\n        })\r\n    })\r\n}\r\ncolumnEditDeleteFunctionality()"]}