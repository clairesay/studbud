{"mappings":"kBACMA,EAAYC,SAASC,eAAe,YACtCC,EAAWF,SAASG,cAAc,gBAClCC,EAAWJ,SAASG,cAAc,aAClCE,EAAiBD,EAASD,cAAc,2BAEtCG,EAAaN,SAASC,eAAe,aACvCM,EAAMD,EAAWH,cAAc,OAC/BK,EAAkBF,EAAWH,cAAc,qBAC3CM,EAAmBH,EAAWH,cAAc,YA4BhD,SAAAO,EAAoBC,OACZC,EAAOC,EACE,GAATF,GACAC,EAAQb,EACRc,EAAO,QACS,GAATF,IACPC,EAAQN,EACRO,EAAO,SAuCf,SAAyBD,GACH,WAAdE,aACIF,GAASb,EACTO,EAAWS,aAAa,QAAS,WAEjChB,EAAUgB,aAAa,QAAS,YAxCxCC,CAAgBJ,GAMmB,WAA/BA,EAAMK,aAAa,UAImB,QAA/BL,EAAMK,aAAa,UAH1BL,EAAMG,aAAa,QAAS,UAE5BG,GAAK,EAAOL,IAI0B,UAA/BD,EAAMK,aAAa,UAAwD,QAAhCL,EAAMK,aAAa,WACrEL,EAAMG,aAAa,QAAS,WAC5BG,GAAK,EAAOL,IAC0B,UAA/BD,EAAMK,aAAa,WAC1BL,EAAMG,aAAa,QAAS,QAC5BG,GAAK,EAAML,GACPD,GAASb,IAGgC,mBAArCM,EAAeY,aAAa,OAA4C,UAAdH,WAC1DV,EAASe,MAAMC,QAAU,OAGzBhB,EAASe,MAAMC,QAAU,SA8CG,WAApCd,EAAWW,aAAa,SACN,UAAdH,WACAf,EAAUoB,MAAME,MAAQ,QAExBtB,EAAUoB,MAAME,MAAQ,QAGc,UAAnCtB,EAAUkB,aAAa,UAAsC,UAAdH,WACtDf,EAAUoB,MAAME,MAAQ,IAGxBtB,EAAUoB,MAAME,MAAQ,QArChC,SAAAH,EAAcI,EAAMT,GACJ,QAARA,GACAT,EAASe,MAAMC,QAAU,OACb,GAARE,GACApB,EAASiB,MAAMC,QAAU,OACzBhB,EAASe,MAAMI,KAAO,OACtBnB,EAASe,MAAME,MAAQ,MACvBjB,EAASD,cAAc,MAAMgB,MAAMK,MAAQ,YAE3CtB,EAASiB,MAAMC,QAAU,OACzBhB,EAASe,MAAMI,KAAO,OACtBnB,EAASe,MAAME,MAAQ,OACvBjB,EAASD,cAAc,MAAMgB,MAAMK,MAAQ,YAEhC,SAARX,IACK,GAARS,EACAf,EAAIkB,YAAYjB,GAEhBC,EAAiBgB,YAAYjB,IArGzCT,EAAUgB,aAAa,QAAS,WAChCT,EAAWS,aAAa,QAAS,WAGXf,SAAS0B,iBAAiB,+BAChCC,SAAQ,SAAUC,EAAQjB,GAEtCiB,EAAOC,iBAAiB,SAAS,SAASC,GACtCA,EAAMC,kBACNrB,EAAWC,SAKnBZ,EAAU8B,iBAAiB,SAAS,WACO,QAAnC9B,EAAUkB,aAAa,UAAyD,WAAnClB,EAAUkB,aAAa,UACpEP,EAAW,MAGnBJ,EAAWuB,iBAAiB,SAAS,WACO,QAApCvB,EAAWW,aAAa,UAA0D,WAApCX,EAAWW,aAAa,UACtEP,EAAW","sources":["./public/js/pop-up.js"],"sourcesContent":["// POPUP TAB ACTIVITY\r\nconst timePopUp = document.getElementById('time')\r\nvar peekTime = document.querySelector('#time nav h1');\r\nvar dropdown = document.querySelector('#dropdown')\r\nvar dropdownOption = dropdown.querySelector('#time-selector h3')\r\n\r\nconst musicPopUp = document.getElementById('music')\r\nvar nav = musicPopUp.querySelector('nav')\r\nvar currentControls = musicPopUp.querySelector('#current-controls')\r\nvar currentContainer = musicPopUp.querySelector('#current')\r\n\r\ntimePopUp.setAttribute('state', 'standby')\r\nmusicPopUp.setAttribute('state', 'standby')\r\n\r\n// collapse button for each of the pop-up windows\r\nvar collapseButtons = document.querySelectorAll('.pop-up nav button.collapse')\r\ncollapseButtons.forEach(function (button, index) {\r\n    // on click, we open or close the corresponding popup window\r\n    button.addEventListener('click', function(event) {\r\n        event.stopPropagation()\r\n        popUpState(index)\r\n    })\r\n})\r\n\r\n// if we click on the pop-up window itself, and its pcurrent state is either peek or standby, open it to active mode.\r\ntimePopUp.addEventListener('click', function() {\r\n    if (timePopUp.getAttribute('state') == 'peek' || timePopUp.getAttribute('state') == 'standby') {\r\n        popUpState(0)\r\n    }\r\n})\r\nmusicPopUp.addEventListener('click', function() {\r\n    if (musicPopUp.getAttribute('state') == 'peek' || musicPopUp.getAttribute('state') == 'standby') {\r\n        popUpState(1)\r\n    }\r\n})\r\n\r\n// alternate states of the pop-up tab\r\nfunction popUpState(index) {\r\n    var popUp, mode;\r\n    if (index == 0) {\r\n        popUp = timePopUp\r\n        mode = 'time'\r\n    } else if (index == 1) {\r\n        popUp = musicPopUp\r\n        mode = 'music'\r\n    }\r\n\r\n    // setting responsive alternates in case device size is smaller\r\n    responsivePopUp(popUp)\r\n\r\n    // if/else tree to determine the status of the current pop-up being activated\r\n    // active --> the pop-up tab is open\r\n    // peek --> users can see a little bit of the timer/music player, but not the whole thing\r\n    // standby --> the pop-up is reduced to an icon\r\n    if (popUp.getAttribute('state') == 'standby') {\r\n        popUp.setAttribute('state', 'active')\r\n        // checks for peek modes and alters styles in turn.\r\n        peek(false, mode)\r\n    } else if (popUp.getAttribute('state') == 'peek') {\r\n        popUp.setAttribute('state', 'active')\r\n        peek(false, mode)\r\n    } else if (popUp.getAttribute('state') == 'active' && popUp.getAttribute('static') == 'true') {\r\n        popUp.setAttribute('state', 'standby')\r\n        peek(false, mode)\r\n    } else if (popUp.getAttribute('state') == 'active') {\r\n        popUp.setAttribute('state', 'peek')\r\n        peek(true, mode)\r\n        if (popUp == timePopUp) {\r\n            // hide the dropdown if it the user is in peek mode, and the selected timer is a pomodoro timer\r\n            // or if the device is a mobile (in that case there's no space for it)\r\n            if (dropdownOption.getAttribute('id') == 'pomodoro-select' || deviceSize == 'mobile') {\r\n                dropdown.style.display = 'none'\r\n            // otherwise, in stopwatch mode and if the device is bigger than mobile, still show the dropdown\r\n            } else {\r\n                dropdown.style.display = 'flex'\r\n            }\r\n        }\r\n    }\r\n    // positioning the time pop-up from the right hand side\r\n    popUpPositioning()\r\n}\r\n\r\n// on mobile/smaller device sizes, the other popUp is forced to be in 'standby' mode to ensure there is space on the screen\r\nfunction responsivePopUp(popUp) {\r\n    if (deviceSize != 'desktop') {\r\n        if (popUp == timePopUp) {\r\n            musicPopUp.setAttribute('state', 'standby')\r\n        } else {\r\n            timePopUp.setAttribute('state', 'standby')\r\n        }\r\n    }\r\n}\r\n\r\n// make the appropriate alterations to the pop-up windows\r\nfunction peek(bool, mode) {\r\n    if (mode == 'time') {\r\n        dropdown.style.display = 'flex'\r\n        if (bool == true) {\r\n            peekTime.style.display = 'flex'\r\n            dropdown.style.left = 'auto'\r\n            dropdown.style.right = '0px'\r\n            dropdown.querySelector('h3').style.color = '#909090'\r\n        } else {\r\n            peekTime.style.display = 'none'\r\n            dropdown.style.left = '60px'\r\n            dropdown.style.right = 'auto'\r\n            dropdown.querySelector('h3').style.color = '#303030'\r\n        }\r\n    } else if (mode == 'music') {\r\n        if (bool == true) {\r\n            nav.appendChild(currentControls)\r\n        } else {\r\n            currentContainer.appendChild(currentControls)\r\n        }\r\n    }\r\n}\r\n\r\n// this determines the positioning of the time pop-up \r\nfunction popUpPositioning() {\r\n    // if the music pop-up is on standby, calculate how far from the right the time pop-up will be \r\n    if (musicPopUp.getAttribute('state') != 'standby') {\r\n        if (deviceSize == 'mobile') {\r\n            timePopUp.style.right = '254px';\r\n        } else {\r\n            timePopUp.style.right = '354px';\r\n        }\r\n    // if the time pop-up is active and on mobile, it should open up to full device width and thus position right 0\r\n    } else if (timePopUp.getAttribute('state') == 'active' && deviceSize == 'mobile') {\r\n        timePopUp.style.right = '0';\r\n    // otherwise, we go with default position\r\n    } else {\r\n        timePopUp.style.right = '110px';\r\n    }\r\n}"],"names":["$ad7e38c634c74c3f5fd0d174c7d5ae05$var$timePopUp","document","getElementById","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$peekTime","querySelector","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$dropdown","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$dropdownOption","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$musicPopUp","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$nav","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$currentControls","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$currentContainer","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$popUpState","index","popUp","mode","deviceSize","setAttribute","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$responsivePopUp","getAttribute","$ad7e38c634c74c3f5fd0d174c7d5ae05$var$peek","style","display","right","bool","left","color","appendChild","querySelectorAll","forEach","button","addEventListener","event","stopPropagation"],"version":3,"file":"index.742ce546.js.map"}