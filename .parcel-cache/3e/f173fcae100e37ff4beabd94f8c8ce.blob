{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./public/js/column.js","./public/js/column-form.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","class Column {\r\n    constructor(id, name, deleteFunction) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    editColumn(editColumnButton) {\r\n\r\n        let column = editColumnButton.parentElement\r\n        let columnNameInput = column.querySelector('input.column-name')\r\n        columnNameInput.addEventListener('keyup', function(event) {\r\n            if (event.key === 'Enter') {\r\n                columnNameInput.blur()\r\n            }\r\n        })\r\n        \r\n        editColumnButton.addEventListener('click', function() {\r\n            columnNameInput.focus()\r\n        })\r\n    }\r\n\r\n    deleteColumn(deleteColumnButton) {\r\n        deleteColumnButton.addEventListener('click', function() {\r\n            let columns = document.getElementsByClassName('column')\r\n            let column = deleteColumnButton.parentElement.parentElement\r\n            let cards = column.querySelectorAll('.card')\r\n            if (columns.length > 1 && cards.length == 0) {\r\n                column.remove()\r\n            }\r\n        })\r\n    }\r\n\r\n    createColumn() {\r\n        // creating the column\r\n        let column = document.createElement('div')\r\n        column.classList.add('column')\r\n        let title = document.createElement('div')\r\n        title.classList.add('title')\r\n        let columnName = document.createElement('input')\r\n        columnName.classList.add('column-name')\r\n        columnName.value = this.name\r\n\r\n        let editButton = document.querySelector('svg.edit-column')\r\n        editButton = editButton.cloneNode(true)\r\n        \r\n        let deleteButton = document.querySelector('svg.delete-column')\r\n        deleteButton = deleteButton.cloneNode(true)\r\n\r\n        let total = document.createElement('h3')\r\n        total.classList.add('total')\r\n        total.textContent = 0;\r\n        let cards = document.createElement('div')\r\n        cards.classList.add('cards')\r\n    \r\n        title.appendChild(columnName)\r\n\r\n        title.appendChild(total)\r\n        title.appendChild(editButton)\r\n        this.editColumn(editButton)\r\n        title.appendChild(deleteButton)\r\n        this.deleteColumn(deleteButton)\r\n        column.appendChild(title)\r\n        column.appendChild(cards)\r\n        let tasks = document.getElementById('tasks')\r\n        tasks.appendChild(column)\r\n        // smooth scroll to the new column\r\n        tasks.scrollTo({\r\n            top: 0,\r\n            left: tasks.clientWidth,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Column","import Column from './column'\r\nimport * as kanbanA from './kanban'\r\n\r\nconst createTaskForm = document.getElementById('create-task-form')\r\nfunction updateColumnNames() {\r\n    let columnNames = document.querySelectorAll('.column-name')\r\n    let statuses = createTaskForm.querySelector('select[name=status]');\r\n    statuses.innerHTML = ''\r\n    columnNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        statuses.appendChild(newOption)\r\n    })\r\n}\r\nupdateColumnNames()\r\n\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addColumnForm = document.getElementById('add-column-form')\r\nvar newColumnToggle = false;\r\nconst newColumn = document.getElementById('new-column');\r\n\r\nfunction toggleColumnForm() {\r\n    if (newColumnToggle == false) {\r\n        addColumnForm.classList.add('active')\r\n        newColumnToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newColumnToggle == true) {\r\n        addColumnForm.classList.remove('active')\r\n        addColumnForm.reset()\r\n        newColumnToggle = false\r\n        modalBackground.style.display = 'none'\r\n    }\r\n}\r\n\r\nfunction createNewSortable() {\r\n    let newCard = document.querySelectorAll('.cards')\r\n    newCard = newCard[newCard.length - 1]\r\n    new Sortable(newCard, {\r\n        group: 'nested',\r\n        animation: 200,\r\n        swapThreshold: 0.65,\r\n        ghostClass: 'ghost-card',\r\n        chosenClass: 'chosen-card',\r\n        forceFallback: true,\r\n        onEnd: function (evt) {\r\n            kanbanA.countCards()\r\n        }\r\n    })\r\n}\r\n\r\n// adding an event listener to bring up the form\r\nnewColumn.addEventListener('click', toggleColumnForm)\r\n\r\n// adding an event listener for submitting the column\r\nconst columnCancelButton = document.getElementById('add-column-cancel')\r\nconst columnCloseButton = columnCancelButton.nextElementSibling\r\n// columnCancelButton.querySelector('~ button.form-close')\r\ncolumnCancelButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\ncolumnCloseButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\n\r\nconst columnSubmitButton = document.getElementById('add-column-submit')\r\ncolumnSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n\r\n    let id = Date.now()\r\n    let name = addColumnForm.querySelector('input').value\r\n\r\n    let col = new Column(id, name)\r\n    col.createColumn()\r\n\r\n    updateColumnNames()\r\n\r\n    toggleColumnForm()\r\n\r\n    createNewSortable();\r\n})\r\n\r\n// //////////// COLUMN BUTTONS\r\nconst columnTitles = document.querySelectorAll('div.title')\r\ncolumnTitles.forEach(function(columnTitle) {\r\n    let editColumnButton = columnTitle.querySelector('svg.edit-column')\r\n    let deleteColumnButton = columnTitle.querySelector('svg.delete-column')\r\n    let columnNameInput = columnTitle.querySelector('input.column-name')\r\n\r\n\r\n    \r\n    editColumnButton.addEventListener('click', function() {columnNameInput.focus()})\r\n    columnNameInput.addEventListener('keyup', function(event) {\r\n        if (event.key === 'Enter') {\r\n            columnNameInput.blur()\r\n        }\r\n    })\r\n    deleteColumnButton.addEventListener('click', function() {\r\n        let columns = document.getElementsByClassName('column')\r\n        let column = columnTitle.parentElement\r\n        let cards = column.querySelectorAll('.card')\r\n        if (columns.length > 1 && cards.length == 0) {\r\n            column.remove()\r\n        }\r\n    })\r\n})\r\n// let columnOptions = document.querySelector('img.column-options')\r\n// let editColumn = document.querySelector('img.edit-column')\r\n// let deleteColumn = document.querySelector('img.delete-column')\r\n// let columnOptionsToggle = false;\r\n// columnOptions.addEventListener('click', toggleColumnOptions)\r\n\r\n// function toggleColumnOptions() {\r\n//     if (columnOptionsToggle == false) {\r\n//         columnOptions.style.display = 'flex';\r\n//         editColumn.style.display = 'none';\r\n//         deleteColumn.style.display = 'none';\r\n//         columnOptionsToggle = true;\r\n//     } else if (columnOptionsToggle == true) {\r\n//         columnOptions.style.display = 'none';\r\n//         editColumn.style.display = 'flex';\r\n//         deleteColumn.style.display = 'flex';\r\n//         columnOptionsToggle = false;\r\n//     }\r\n// }"],"names":["globalThis","self","window","global","$8b38702613a783d21a2f250d3e1ed6dd$export$default","constructor","id","name","deleteFunction","this","editColumn","editColumnButton","columnNameInput","parentElement","querySelector","addEventListener","event","key","blur","focus","deleteColumn","deleteColumnButton","columns","document","getElementsByClassName","column","cards","querySelectorAll","length","remove","createColumn","createElement","classList","add","title","columnName","value","editButton","cloneNode","deleteButton","total","textContent","appendChild","tasks","getElementById","scrollTo","top","left","clientWidth","behavior","$a969fc4719ba336d4874bd6e736e73f1$var$createTaskForm","$a969fc4719ba336d4874bd6e736e73f1$var$updateColumnNames","columnNames","statuses","innerHTML","forEach","object","newOption","$a969fc4719ba336d4874bd6e736e73f1$var$modalBackground","$a969fc4719ba336d4874bd6e736e73f1$var$addColumnForm","$a969fc4719ba336d4874bd6e736e73f1$var$newColumnToggle","$a969fc4719ba336d4874bd6e736e73f1$var$toggleColumnForm","style","display","reset","$a969fc4719ba336d4874bd6e736e73f1$var$columnCancelButton","$a969fc4719ba336d4874bd6e736e73f1$var$columnCloseButton","nextElementSibling","preventDefault","Date","now","col","newCard","Sortable","group","animation","swapThreshold","ghostClass","chosenClass","forceFallback","onEnd","evt","$a969fc4719ba336d4874bd6e736e73f1$var$createNewSortable","columnTitle"],"version":3,"file":"index.HASH_REF_97ca2af3a47c960ef40dd57f17c164ed.js.map"}