{"mappings":"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","sources":["./public/js/time.js"],"sourcesContent":["// toggling time popup window\r\nconst timeToolsOverlay = document.getElementById('time')\r\nconst timeSelector = document.getElementById('time-selector')\r\nconst dropdown = document.getElementById('dropdown')\r\nvar timeMenuToggleOpen = false\r\n\r\nfunction toggleTimeMenu() {\r\n    if (timeMenuToggleOpen == false) {\r\n        timeSelector.classList = 'open'\r\n        timeMenuToggleOpen = true\r\n    } else if (timeMenuToggleOpen == true) {\r\n        timeSelector.classList = 'close'\r\n        timeMenuToggleOpen = false\r\n    }\r\n}\r\ndropdown.addEventListener('click', toggleTimeMenu)\r\n\r\nconst stopwatch = document.getElementById('stopwatch')\r\nconst stopwatchSelector = document.getElementById('stopwatch-select')\r\nconst pomodoro = document.getElementById('pomodoro')\r\nconst pomodoroSelector = document.getElementById('pomodoro-select')\r\n\r\n// timer dropdown selector\r\nstopwatchSelector.addEventListener('click', function () {\r\n    timeSelector.appendChild(pomodoroSelector)\r\n    setTimerType()\r\n})\r\npomodoroSelector.addEventListener('click', function () {\r\n    timeSelector.appendChild(stopwatchSelector)\r\n    setTimerType()\r\n})\r\n\r\nfunction setTimerType() {\r\n    let currentTimer = timeSelector.querySelector(':first-child')\r\n    if (currentTimer.id == 'stopwatch-select') {\r\n        stopwatch.classList.add('active')\r\n        pomodoro.classList.remove('active')\r\n    } else if (currentTimer.id == 'pomodoro-select') {\r\n        stopwatch.classList.remove('active')\r\n        pomodoro.classList.add('active')\r\n    }\r\n}\r\n\r\nsetTimerType()\r\n\r\n// STOPWATCH FUNCTIONALITY\r\nvar min = sec = milli = 0,\r\n    minutes = document.querySelector('#stopwatch .minutes'),\r\n    seconds = document.querySelector('#stopwatch .seconds'),\r\n    milliseconds = document.querySelector('#stopwatch .milliseconds');\r\n\r\nconst stopwatchStart = document.querySelector('#stopwatch button.start-stop')\r\nconst stopwatchReset = document.querySelector('#stopwatch button.reset')\r\n\r\nvar stopwatchOn = false,\r\n    intervals;\r\n\r\n\r\n// window.timeStatic = timeStatic;\r\n\r\n// resetting the stopwatch\r\nstopwatchReset.addEventListener('click', function () {\r\n    // set numbers to 0\r\n    milli = sec = min = offset = 0\r\n    minutes.textContent = round(min)\r\n    seconds.textContent = round(sec)\r\n    milliseconds.textContent = round(milli)\r\n\r\n    // reset inner text of button\r\n    stopwatchStart.textContent = 'Start'\r\n    // enable button clicking\r\n    stopwatchReset.disabled = false\r\n    stopwatchOn = false\r\n    timeToolsOverlay.setAttribute('static', 'true')\r\n    // timeStatic = true\r\n    // turn off counting\r\n    clearInterval(intervals)\r\n\r\n    // enable dropdown\r\n    dropdown.addEventListener('click', toggleTimeMenu)\r\n})\r\n\r\nvar start, currentTime, elapsedTime, stringify;\r\nvar offset = 0;\r\n// stopwatch start/stop button\r\nstopwatchStart.addEventListener('click', function () {\r\n    timeToolsOverlay.setAttribute('static', 'false')\r\n    // timeStatic = false;\r\n\r\n    // if the stopwatch is on, we want to turn this off\r\n    if (stopwatchOn == true) {\r\n        clearInterval(intervals)\r\n        stopwatchStart.textContent = 'Start'\r\n        stopwatchOn = false\r\n        offset = parseInt(milli) * 10\r\n\r\n    // otherwise, if the stopwatch is not on,\r\n    } else if (stopwatchOn == false) {\r\n\r\n        start = Date.now()\r\n        incrementUp()\r\n        // increment the time upwards from the time the start button was clicked\r\n        function incrementUp() {\r\n            currentTime = Date.now()\r\n            elapsedTime = currentTime - start + offset\r\n            \r\n            stringify = (elapsedTime).toLocaleString('en-US', { minimumIntegerDigits: 3, useGrouping: false })\r\n            milli = stringify[0] + stringify[1]\r\n\r\n            if (elapsedTime >= 1000) {\r\n                start += 1000\r\n                sec += 1\r\n            }\r\n            if (sec == 60) {\r\n                sec = 0\r\n                min += 1\r\n            }\r\n        }\r\n\r\n        // set the intervals for frequent update of the numbers\r\n        intervals = setInterval(function () {\r\n            minutes.textContent = round(min)\r\n            seconds.textContent = round(sec)\r\n            milliseconds.textContent = round(milli)\r\n            incrementUp()\r\n        }, 10); // update every 10 milliseconds\r\n\r\n        // enable the reset button\r\n        stopwatchReset.disabled = false\r\n        // replace text content for relevance\r\n        stopwatchStart.textContent = 'Stop'\r\n        // disable the timer dropdown\r\n        dropdown.removeEventListener('click', toggleTimeMenu)\r\n        stopwatchOn = true\r\n    }\r\n})\r\n\r\n// setting two integer digits for all time functions\r\n// making sure there are always 2 digits https://stackoverflow.com/questions/8043026/how-to-format-numbers-by-prepending-0-to-single-digit-numbers\r\nfunction round(value) {\r\n    return (value).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })\r\n}\r\n\r\n// POMODORO TIMER\r\nvar workMin = 25,\r\n    workSec = 0,\r\n    breakMin = 5,\r\n    breakSec = 0,\r\n    workMinutes = document.querySelector('#pomodoro #work .minutes'),\r\n    workSeconds = document.querySelector('#pomodoro #work .seconds'),\r\n    breakMinutes = document.querySelector('#pomodoro #break .minutes'),\r\n    breakSeconds = document.querySelector('#pomodoro #break .seconds');\r\n\r\nconst workButtons = document.querySelector('#pomodoro #work'),\r\n    breakButtons = document.querySelector('#pomodoro #break'),\r\n    timer = document.querySelector('#pomodoro div#timer'),\r\n    workAdd = document.querySelector('#pomodoro #work button.add'),\r\n    workSubtract = document.querySelector('#pomodoro #work button.subtract'),\r\n    breakAdd = document.querySelector('#pomodoro #break button.add'),\r\n    breakSubtract = document.querySelector('#pomodoro #break button.subtract'),\r\n    pomoStartStop = document.querySelector('#pomodoro button.start-stop');\r\n\r\nvar pomoMin = workMin,\r\n    pomoSec = workSec,\r\n    pomoMinutes = document.querySelector('#pomodoro #timer .minutes'),\r\n    pomoSeconds = document.querySelector('#pomodoro #timer .seconds');\r\n\r\npomoMinutes.textContent = round(pomoMin)\r\n\r\nvar pomoIntervals,\r\n    pomoOn = false;\r\n\r\nworkAdd.addEventListener('click', () => pomoTime('add', 'work'))\r\nworkSubtract.addEventListener('click', () => pomoTime('subtract', 'work'))\r\nbreakAdd.addEventListener('click', () => pomoTime('add', 'break'))\r\nbreakSubtract.addEventListener('click', () => pomoTime('subtract', 'break'))\r\nworkButtons.style.display = 'flex'\r\nbreakButtons.style.display = 'flex'\r\ntimer.style.display = 'none'\r\n\r\nvar timeline = document.getElementById('timeline')\r\nconst loadSpans = document.querySelectorAll('#pomodoro div.length > div'),\r\n    allSpans = document.querySelectorAll('#pomodoro div > div.length'),\r\n    finalLoadSpanContainer = document.querySelector('#pomodoro div#final-load'),\r\n    finalLoadSpan = document.querySelector('#pomodoro div#final-load div'),\r\n    resetPomo = document.getElementById('reset-pomo');\r\n\r\n// reset button to return to default \r\nresetPomo.addEventListener('click', function () {\r\n    pomoMin = 25\r\n    workMin = 25\r\n    breakMin = 5\r\n    workMinutes.textContent = round(25)\r\n    breakMinutes.textContent = round(5)\r\n    pomoLength()\r\n})\r\n\r\n//start or stop the pomodoro timer\r\npomoStartStop.addEventListener('click', function () {\r\n    // reference for pomo intervals \r\n    //https://www.focusboosterapp.com/blog/common-misconceptions-of-the-pomodoro-technique/#:~:text=The%20average%20and%20suggested%20pomodoro,with%20a%2010%2Dminute%20break.\r\n    // if pomo is on, turn it off\r\n    if (pomoOn == true) {\r\n        // // both timers are inactive\r\n        // timeStatic = true;\r\n        // // reset the pomo time\r\n        // pomoMin = workMin\r\n        // pomoSec = workSec\r\n        // pomoMinutes.textContent = round(pomoMin)\r\n        // pomoSeconds.textContent = round(pomoSec)\r\n\r\n        // // stop the countup intervals\r\n        // clearInterval(pomoIntervals)\r\n        // // reset the text\r\n        // pomoStartStop.textContent = 'Start'\r\n        // // allow dropdowns\r\n        // dropdown.addEventListener('click', toggleTimeMenu)\r\n        \r\n        // // display/show relevant elements\r\n        // workButtons.style.display = 'flex'\r\n        // breakButtons.style.display = 'flex'\r\n        // timer.style.display = 'none'\r\n\r\n        // pomoOn = false\r\n\r\n        // // remove animation functions\r\n        // loadSpans.forEach(function (span) {\r\n        //     span.style.animation = ''\r\n        // })\r\n        // finalLoadSpan.style.animation = 'none'\r\n        // sessions = 0\r\n        // reset status\r\n        endPomo()\r\n        phase = 'break'\r\n        \r\n        pomodoroTimer('static')\r\n\r\n    } else if (pomoOn == false) {\r\n        // timer is active\r\n        timeToolsOverlay.setAttribute('static', 'false')\r\n        // timeStatic = false;\r\n        \r\n        // increment downwards\r\n        function incrementDown() {\r\n            if (pomoMin == 0 && pomoSec == 0) {\r\n                sessions += 1\r\n                pomodoroTimer()\r\n            } else if (pomoSec == 0) {\r\n                pomoMin -= 1\r\n                pomoSec = 59\r\n            } else {\r\n                pomoSec -= 1\r\n            }\r\n        }\r\n\r\n        // show/hide relevant elements\r\n        workButtons.style.display = 'none'\r\n        breakButtons.style.display = 'none'\r\n        timer.style.display = 'flex'\r\n\r\n        // set intervals and text content\r\n        pomoIntervals = setInterval(function () {\r\n            incrementDown()\r\n            pomoMinutes.textContent = round(pomoMin)\r\n            pomoSeconds.textContent = round(pomoSec)\r\n        }, 1000);\r\n\r\n        // change timer status\r\n        pomoStartStop.textContent = 'Stop'\r\n        dropdown.removeEventListener('click', toggleTimeMenu)\r\n        pomoOn = true\r\n        pomodoroTimer()\r\n    }\r\n})\r\n\r\nconst workSpans = document.querySelectorAll('#pomodoro div > div.length:nth-child(2n + 1)'),\r\n    breakSpans = document.querySelectorAll('#pomodoro div > div.length:nth-child(2n)'),\r\n    pomoStatus = document.getElementById('pomo-status')\r\nvar phase = 'work',\r\n    sessions = 0\r\n\r\n// increments timer times up and down\r\nfunction pomoTime(operator, mode) {\r\n    let incrementValue = 5\r\n    if (mode == 'work') {\r\n        // increase\r\n        if (operator == 'add' && workMin < 60) {\r\n            workMin += incrementValue\r\n        // decrease\r\n        } else if (operator == 'subtract' && workMin > 5) {\r\n            workMin -= incrementValue\r\n        }\r\n    } else if (mode == 'break') {\r\n        // increase\r\n        if (operator == 'add' && breakMin < 20) {\r\n            breakMin += incrementValue\r\n        // decrease\r\n        } else if (operator == 'subtract' && breakMin > 5) {\r\n            breakMin -= incrementValue\r\n        }\r\n    }\r\n    // set text content\r\n    pomoMin = workMin\r\n    pomoMinutes.textContent = round(pomoMin)\r\n    workMinutes.textContent = round(workMin)\r\n    breakMinutes.textContent = round(breakMin)\r\n    pomoLength()\r\n}\r\n\r\n\r\n// visualising the work and break times\r\nfunction pomoLength() {\r\n    // calculating distance\r\n    let total = workMin * 3 + breakMin * 2,\r\n        timelineLength = 232,\r\n        // timelineLength = timeline.getBoundingClientRect(width) - 4 * 4,\r\n        workLength = workMin / total * timelineLength,\r\n        breakLength = breakMin / total * timelineLength;\r\n\r\n    // apply relevant lengths\r\n    workSpans.forEach(function (span) {\r\n        span.style.width = workLength + 'px';\r\n    })\r\n\r\n    breakSpans.forEach(function (span) {\r\n        span.style.width = breakLength + 'px';\r\n    })\r\n}\r\n\r\npomoLength()\r\n// setting text content\r\nworkMinutes.textContent = round(workMin)\r\nbreakMinutes.textContent = round(breakMin)\r\n\r\nfunction pomodoroTimer(mode) {\r\n    // update 'status' for user when pomo time changes\r\n    pomoStatus.textContent = phase;\r\n    // check sessions\r\n    if (sessions < 5) {\r\n        // alternate between sessions\r\n        if (phase == 'work') {\r\n            pomoMin = workMin\r\n            pomoSec = workSec\r\n            phase = 'break'\r\n        } else if (phase == 'break') {\r\n            pomoMin = breakMin\r\n            pomoSec = breakSec\r\n            phase = 'work'\r\n        }\r\n\r\n        // calculate the full time taken for each pomo phase\r\n        let fullTime;\r\n        if (phase == 'work') {\r\n            fullTime = workSec + workMin * 60\r\n\r\n        } else if (phase == 'break') {\r\n            fullTime = breakSec + breakMin * 60\r\n        }\r\n\r\n        // cancel the animations if timer is off\r\n        if (mode == 'static') {\r\n            loadSpans[sessions].style.animation = 'none'\r\n        } else {\r\n            loadSpans[sessions].style.animation = 'load-spans ' + fullTime + 's ' + 'linear forwards'\r\n        }\r\n\r\n        // show/hide relevant elements\r\n        finalLoadSpanContainer.style.display = 'none'\r\n        timeline.style.display = 'flex'\r\n    } else if (sessions == 5) {\r\n        // setting duration of final break\r\n        pomoMin = 30\r\n        pomoSec = 0\r\n        phase = 'finalbreak'\r\n        // enable animations\r\n        let fullTime = pomoMin * 60 + pomoSec\r\n        finalLoadSpanContainer.style.display = 'flex'\r\n        timeline.style.display = 'none'\r\n        finalLoadSpan.style.animation = 'load-spans ' + fullTime + 's ' + 'linear forwards'\r\n        \r\n    } else {\r\n        // otherwise, the pomodoro has ended - reset everything\r\n        // timeStatic = true;\r\n        finalLoadSpanContainer.style.display = 'none'\r\n        timeline.style.display = 'flex'\r\n        // pomoMin = workMin\r\n        // pomoSec = workSec\r\n        // pomoMinutes.textContent = round(pomoMin)\r\n        // pomoSeconds.textContent = round(pomoSec)\r\n        \r\n        // clearInterval(pomoIntervals)\r\n        // pomoStartStop.textContent = 'Start'\r\n        // dropdown.addEventListener('click', toggleTimeMenu)\r\n\r\n        // workButtons.style.display = 'flex'\r\n        // breakButtons.style.display = 'flex'\r\n        // timer.style.display = 'none'\r\n\r\n        // pomoOn = false\r\n        // loadSpans.forEach(function (span) {\r\n        //     span.style.animation = ''\r\n        // })\r\n\r\n        // finalLoadSpan.style.animation = 'none'\r\n        \r\n        // sessions = 0\r\n        endPomo()\r\n        phase = 'work'\r\n    }\r\n}\r\n\r\nfunction endPomo() {\r\n// both timers are inactive\r\ntimeToolsOverlay.setAttribute('static', 'true')\r\n// timeStatic = true;\r\n// reset the pomo time\r\npomoMin = workMin\r\npomoSec = workSec\r\npomoMinutes.textContent = round(pomoMin)\r\npomoSeconds.textContent = round(pomoSec)\r\n\r\n// stop the countup intervals\r\nclearInterval(pomoIntervals)\r\n// reset the text\r\npomoStartStop.textContent = 'Start'\r\n// allow dropdowns\r\ndropdown.addEventListener('click', toggleTimeMenu)\r\n\r\n// display/show relevant elements\r\nworkButtons.style.display = 'flex'\r\nbreakButtons.style.display = 'flex'\r\ntimer.style.display = 'none'\r\n\r\npomoOn = false\r\n\r\n// remove animation functions\r\nloadSpans.forEach(function (span) {\r\n    span.style.animation = ''\r\n})\r\nfinalLoadSpan.style.animation = 'none'\r\nsessions = 0\r\n}\r\n\r\n"],"names":["$0653d19d3f6f5b3abec08a250f73383f$var$timeToolsOverlay","document","getElementById","$0653d19d3f6f5b3abec08a250f73383f$var$timeSelector","$0653d19d3f6f5b3abec08a250f73383f$var$dropdown","$0653d19d3f6f5b3abec08a250f73383f$var$timeMenuToggleOpen","$0653d19d3f6f5b3abec08a250f73383f$var$toggleTimeMenu","classList","addEventListener","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatch","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchSelector","$0653d19d3f6f5b3abec08a250f73383f$var$pomodoro","$0653d19d3f6f5b3abec08a250f73383f$var$pomodoroSelector","$0653d19d3f6f5b3abec08a250f73383f$var$setTimerType","currentTimer","querySelector","id","add","remove","appendChild","$0653d19d3f6f5b3abec08a250f73383f$var$min","sec","milli","$0653d19d3f6f5b3abec08a250f73383f$var$minutes","$0653d19d3f6f5b3abec08a250f73383f$var$seconds","$0653d19d3f6f5b3abec08a250f73383f$var$milliseconds","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchStart","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchReset","$0653d19d3f6f5b3abec08a250f73383f$var$intervals","$0653d19d3f6f5b3abec08a250f73383f$var$start","$0653d19d3f6f5b3abec08a250f73383f$var$currentTime","$0653d19d3f6f5b3abec08a250f73383f$var$elapsedTime","$0653d19d3f6f5b3abec08a250f73383f$var$stringify","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchOn","$0653d19d3f6f5b3abec08a250f73383f$var$offset","textContent","$0653d19d3f6f5b3abec08a250f73383f$var$round","disabled","setAttribute","clearInterval","value","toLocaleString","minimumIntegerDigits","useGrouping","parseInt","incrementUp","Date","now","setInterval","removeEventListener","$0653d19d3f6f5b3abec08a250f73383f$var$workMin","$0653d19d3f6f5b3abec08a250f73383f$var$breakMin","$0653d19d3f6f5b3abec08a250f73383f$var$workMinutes","$0653d19d3f6f5b3abec08a250f73383f$var$breakMinutes","$0653d19d3f6f5b3abec08a250f73383f$var$workButtons","$0653d19d3f6f5b3abec08a250f73383f$var$breakButtons","$0653d19d3f6f5b3abec08a250f73383f$var$timer","$0653d19d3f6f5b3abec08a250f73383f$var$workAdd","$0653d19d3f6f5b3abec08a250f73383f$var$workSubtract","$0653d19d3f6f5b3abec08a250f73383f$var$breakAdd","$0653d19d3f6f5b3abec08a250f73383f$var$breakSubtract","$0653d19d3f6f5b3abec08a250f73383f$var$pomoStartStop","$0653d19d3f6f5b3abec08a250f73383f$var$pomoMin","$0653d19d3f6f5b3abec08a250f73383f$var$pomoSec","$0653d19d3f6f5b3abec08a250f73383f$var$pomoMinutes","$0653d19d3f6f5b3abec08a250f73383f$var$pomoSeconds","$0653d19d3f6f5b3abec08a250f73383f$var$pomoIntervals","$0653d19d3f6f5b3abec08a250f73383f$var$pomoOn","$0653d19d3f6f5b3abec08a250f73383f$var$pomoTime","style","display","$0653d19d3f6f5b3abec08a250f73383f$var$timeline","$0653d19d3f6f5b3abec08a250f73383f$var$loadSpans","querySelectorAll","$0653d19d3f6f5b3abec08a250f73383f$var$finalLoadSpanContainer","$0653d19d3f6f5b3abec08a250f73383f$var$finalLoadSpan","$0653d19d3f6f5b3abec08a250f73383f$var$pomoLength","$0653d19d3f6f5b3abec08a250f73383f$var$endPomo","$0653d19d3f6f5b3abec08a250f73383f$var$phase","$0653d19d3f6f5b3abec08a250f73383f$var$pomodoroTimer","$0653d19d3f6f5b3abec08a250f73383f$var$sessions","$0653d19d3f6f5b3abec08a250f73383f$var$workSpans","$0653d19d3f6f5b3abec08a250f73383f$var$breakSpans","$0653d19d3f6f5b3abec08a250f73383f$var$pomoStatus","operator","mode","total","workLength","breakLength","forEach","span","width","fullTime","animation"],"version":3,"file":"index.HASH_REF_d80b52aa5c0e492d19168536c70f8f75.js.map"}