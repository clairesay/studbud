{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./public/js/column.js","./public/js/column-form.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","class Column {\r\n    constructor(id, name, deleteFunction) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    editColumn(editColumnButton) {\r\n       \r\n        let column = editColumnButton.parentElement\r\n        let columnNameInput = column.querySelector('input.column-name')\r\n        columnNameInput.addEventListener('keyup', function(event) {\r\n            if (event.key === 'Enter') {\r\n                columnNameInput.blur()\r\n            }\r\n        })\r\n        \r\n        editColumnButton.addEventListener('click', function() {\r\n            columnNameInput.focus()\r\n        })\r\n\r\n        const columnEditToolTip = document.querySelector('div.tooltip#edit')\r\n        editColumnButton.addEventListener('mouseover', function() {\r\n            editColumnButton.parentElement.appendChild(columnEditToolTip)\r\n        })\r\n    }\r\n\r\n    deleteColumn(deleteColumnButton) {\r\n        deleteColumnButton.addEventListener('click', function() {\r\n            let columns = document.getElementsByClassName('column')\r\n            let column = deleteColumnButton.parentElement.parentElement\r\n            let cards = column.querySelectorAll('.card')\r\n            if (columns.length > 1 && cards.length == 0) {\r\n                column.remove()\r\n            }\r\n        })\r\n\r\n        const columnDeleteToolTip = document.querySelector('div.tooltip#delete')\r\n        deleteColumnButton.addEventListener('mouseover', function() {\r\n            deleteColumnButton.parentElement.appendChild(columnDeleteToolTip)\r\n            let columns = document.getElementsByClassName('column')\r\n            let column = deleteColumnButton.parentElement.parentElement\r\n            let cards = column.querySelectorAll('.card')\r\n\r\n            if (columns.length > 1 && cards.length == 0) {\r\n                deleteColumnButton.classList.remove('disabled')\r\n            } else if (columns.length <= 1 || cards.length > 0) {\r\n                deleteColumnButton.classList.add('disabled')\r\n            }\r\n        })\r\n    }\r\n\r\n    updateButtonStates() {\r\n        let allDeleteColumnButtons = document.querySelectorAll('svg.delete-column')\r\n        allDeleteColumnButtons.forEach( function(button) {\r\n            button.classList.remove('disabled')\r\n        })\r\n    }\r\n\r\n    createColumn() {\r\n        // creating the column\r\n        let column = document.createElement('div')\r\n        column.classList.add('column')\r\n        let title = document.createElement('div')\r\n        title.classList.add('title')\r\n        let columnName = document.createElement('input')\r\n        columnName.classList.add('column-name')\r\n        columnName.value = this.name\r\n\r\n        let editButton = document.querySelector('svg.edit-column')\r\n        editButton = editButton.cloneNode(true)\r\n        \r\n        let deleteButton = document.querySelector('svg.delete-column')\r\n        deleteButton = deleteButton.cloneNode(true)\r\n\r\n        let total = document.createElement('h3')\r\n        total.classList.add('total')\r\n        total.textContent = 0;\r\n        let cards = document.createElement('div')\r\n        cards.classList.add('cards')\r\n    \r\n        title.appendChild(columnName)\r\n\r\n        title.appendChild(total)\r\n        title.appendChild(editButton)\r\n        this.editColumn(editButton)\r\n        title.appendChild(deleteButton)\r\n        this.deleteColumn(deleteButton)\r\n        this.updateButtonStates()\r\n        column.appendChild(title)\r\n        column.appendChild(cards)\r\n        let tasks = document.getElementById('tasks')\r\n        tasks.appendChild(column)\r\n        // smooth scroll to the new column\r\n        tasks.scrollTo({\r\n            top: 0,\r\n            left: tasks.clientWidth,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Column","import Column from './column'\r\nimport * as kanbanA from './kanban'\r\n\r\nconst createTaskForm = document.getElementById('create-task-form')\r\nfunction updateColumnNames() {\r\n    let columnNames = document.querySelectorAll('.column-name')\r\n    let statuses = createTaskForm.querySelector('select[name=status]');\r\n    statuses.innerHTML = ''\r\n    columnNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        statuses.appendChild(newOption)\r\n    })\r\n}\r\nupdateColumnNames()\r\n\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addColumnForm = document.getElementById('add-column-form')\r\nvar newColumnToggle = false;\r\nconst newColumn = document.getElementById('new-column');\r\n\r\nfunction toggleColumnForm() {\r\n    if (newColumnToggle == false) {\r\n        addColumnForm.classList.add('active')\r\n        newColumnToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newColumnToggle == true) {\r\n        addColumnForm.classList.remove('active')\r\n        addColumnForm.reset()\r\n        newColumnToggle = false\r\n        modalBackground.style.display = 'none'\r\n    }\r\n}\r\n\r\nfunction createNewSortable() {\r\n    let newCard = document.querySelectorAll('.cards')\r\n    newCard = newCard[newCard.length - 1]\r\n    new Sortable(newCard, {\r\n        group: 'nested',\r\n        animation: 200,\r\n        swapThreshold: 0.65,\r\n        ghostClass: 'ghost-card',\r\n        chosenClass: 'chosen-card',\r\n        forceFallback: true,\r\n        onEnd: function (evt) {\r\n            kanbanA.countCards()\r\n        }\r\n    })\r\n}\r\n\r\n// adding an event listener to bring up the form\r\nnewColumn.addEventListener('click', toggleColumnForm)\r\n\r\n// adding an event listener for submitting the column\r\nconst columnCancelButton = document.getElementById('add-column-cancel')\r\nconst columnCloseButton = columnCancelButton.nextElementSibling\r\n// columnCancelButton.querySelector('~ button.form-close')\r\ncolumnCancelButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\ncolumnCloseButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\n\r\nconst columnSubmitButton = document.getElementById('add-column-submit')\r\ncolumnSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n\r\n    let id = Date.now()\r\n    let name = addColumnForm.querySelector('input').value\r\n\r\n    let col = new Column(id, name)\r\n    col.createColumn()\r\n\r\n    updateColumnNames()\r\n\r\n    toggleColumnForm()\r\n\r\n    createNewSortable();\r\n})\r\n\r\n// //////////// COLUMN BUTTONS\r\nconst columnDeleteToolTip = document.querySelector('div.tooltip#delete')\r\nconst columnEditToolTip = document.querySelector('div.tooltip#edit')\r\nconst columnTitles = document.querySelectorAll('div.title')\r\ncolumnTitles.forEach(function(columnTitle) {\r\n    let editColumnButton = columnTitle.querySelector('svg.edit-column')\r\n    let deleteColumnButton = columnTitle.querySelector('svg.delete-column')\r\n    let columnNameInput = columnTitle.querySelector('input.column-name')\r\n\r\n    editColumnButton.addEventListener('click', function() {columnNameInput.focus()})\r\n    columnNameInput.addEventListener('keyup', function(event) {\r\n        if (event.key === 'Enter') {\r\n            columnNameInput.blur()\r\n        }\r\n    })\r\n    editColumnButton.addEventListener('mouseover', function() {\r\n        editColumnButton.parentElement.appendChild(columnEditToolTip)\r\n    })\r\n\r\n    deleteColumnButton.addEventListener('click', function() {\r\n        let columns = document.getElementsByClassName('column')\r\n        let column = columnTitle.parentElement\r\n        let cards = column.querySelectorAll('.card')\r\n        if (columns.length > 1 && cards.length == 0) {\r\n            column.remove()\r\n        }\r\n    })\r\n\r\n    deleteColumnButton.addEventListener('mouseover', function() {\r\n        let columns = document.getElementsByClassName('column')\r\n        let column = columnTitle.parentElement\r\n        let cards = column.querySelectorAll('.card')\r\n        deleteColumnButton.parentElement.appendChild(columnDeleteToolTip)\r\n        if (columns.length > 1 && cards.length == 0) {\r\n            deleteColumnButton.classList.remove('disabled')\r\n        } else if (columns.length <= 1 || cards.length > 0) {\r\n            deleteColumnButton.classList.add('disabled')\r\n        }\r\n    })\r\n})\r\n// let columnOptions = document.querySelector('img.column-options')\r\n// let editColumn = document.querySelector('img.edit-column')\r\n// let deleteColumn = document.querySelector('img.delete-column')\r\n// let columnOptionsToggle = false;\r\n// columnOptions.addEventListener('click', toggleColumnOptions)\r\n\r\n// function toggleColumnOptions() {\r\n//     if (columnOptionsToggle == false) {\r\n//         columnOptions.style.display = 'flex';\r\n//         editColumn.style.display = 'none';\r\n//         deleteColumn.style.display = 'none';\r\n//         columnOptionsToggle = true;\r\n//     } else if (columnOptionsToggle == true) {\r\n//         columnOptions.style.display = 'none';\r\n//         editColumn.style.display = 'flex';\r\n//         deleteColumn.style.display = 'flex';\r\n//         columnOptionsToggle = false;\r\n//     }\r\n// }"],"names":["globalThis","self","window","global","$8b38702613a783d21a2f250d3e1ed6dd$export$default","constructor","id","name","deleteFunction","this","editColumn","editColumnButton","columnNameInput","parentElement","querySelector","addEventListener","event","key","blur","focus","columnEditToolTip","document","appendChild","deleteColumn","deleteColumnButton","columns","getElementsByClassName","column","cards","querySelectorAll","length","remove","columnDeleteToolTip","classList","add","updateButtonStates","forEach","button","createColumn","createElement","title","columnName","value","editButton","cloneNode","deleteButton","total","textContent","tasks","getElementById","scrollTo","top","left","clientWidth","behavior","$a969fc4719ba336d4874bd6e736e73f1$var$createTaskForm","$a969fc4719ba336d4874bd6e736e73f1$var$updateColumnNames","columnNames","statuses","innerHTML","object","newOption","$a969fc4719ba336d4874bd6e736e73f1$var$modalBackground","$a969fc4719ba336d4874bd6e736e73f1$var$addColumnForm","$a969fc4719ba336d4874bd6e736e73f1$var$newColumnToggle","$a969fc4719ba336d4874bd6e736e73f1$var$toggleColumnForm","style","display","reset","$a969fc4719ba336d4874bd6e736e73f1$var$columnCancelButton","$a969fc4719ba336d4874bd6e736e73f1$var$columnCloseButton","nextElementSibling","preventDefault","Date","now","col","newCard","Sortable","group","animation","swapThreshold","ghostClass","chosenClass","forceFallback","onEnd","evt","$a969fc4719ba336d4874bd6e736e73f1$var$createNewSortable","$a969fc4719ba336d4874bd6e736e73f1$var$columnDeleteToolTip","$a969fc4719ba336d4874bd6e736e73f1$var$columnEditToolTip","columnTitle"],"version":3,"file":"index.HASH_REF_97ca2af3a47c960ef40dd57f17c164ed.js.map"}