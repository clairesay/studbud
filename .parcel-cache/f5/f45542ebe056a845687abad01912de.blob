{"mappings":"sBACwB,oBAAfA,WACHA,WACgB,oBAATC,KACPA,KACkB,oBAAXC,OACPA,OACkB,oBAAXC,OACPA,OAAAA,gCCRN,MAAAC,EACIC,YAAYC,EAAIC,EAAMC,GAClBC,KAAKH,GAAKA,EACVG,KAAKF,KAAOA,EAGhBG,WAAWC,OAGHC,EADSD,EAAiBE,cACDC,cAAc,qBAC3CF,EAAgBG,iBAAiB,SAAS,SAASC,GAC7B,UAAdA,EAAMC,KAENL,EAAgBM,UAIxBP,EAAiBI,iBAAiB,SAAS,WAEvCH,EAAgBO,iBAGdC,EAAoBC,SAASP,cAAc,oBACjDH,EAAiBI,iBAAiB,aAAa,WAC3CJ,EAAiBE,cAAcS,YAAYF,MAInDG,aAAaC,GACTA,EAAmBT,iBAAiB,SAAS,eACrCU,EAAUJ,SAASK,uBAAuB,UAC1CC,EAASH,EAAmBX,cAAcA,cAC1Ce,EAAQD,EAAOE,iBAAiB,SAChCJ,EAAQK,OAAS,GAAqB,GAAhBF,EAAME,SAC5BH,EAAOI,SACPtB,KAAKuB,0BAIPC,EAAsBZ,SAASP,cAAc,sBACnDU,EAAmBT,iBAAiB,aAAa,WAC7CS,EAAmBX,cAAcS,YAAYW,OACzCR,EAAUJ,SAASK,uBAAuB,UAE1CE,EADSJ,EAAmBX,cAAcA,cAC3BgB,iBAAiB,SAEhCJ,EAAQK,OAAS,GAAqB,GAAhBF,EAAME,OAC5BN,EAAmBU,UAAUH,OAAO,aAC7BN,EAAQK,QAAU,GAAKF,EAAME,OAAS,IAC7CN,EAAmBU,UAAUC,IAAI,eAK7CH,sBACUI,EAAiBf,SAASgB,eAAe,wBAE3CC,EAAcjB,SAASQ,iBAAiB,gBACxCU,EAAWH,EAAetB,cAAc,uBAC5CyB,EAASC,UAAY,GACrBF,EAAYG,SAAQ,SAAUC,OACtBC,EAAYtB,SAASuB,cAAc,UACvCD,EAAUE,YAAcH,EAAOI,MAC/BH,EAAUG,MAAQJ,EAAOI,MACzBP,EAASjB,YAAYqB,MAK7BI,mBAEQpB,EAASN,SAASuB,cAAc,OACpCjB,EAAOO,UAAUC,IAAI,cACjBa,EAAQ3B,SAASuB,cAAc,OACnCI,EAAMd,UAAUC,IAAI,aAChBc,EAAa5B,SAASuB,cAAc,SACxCK,EAAWf,UAAUC,IAAI,eACzBc,EAAWH,MAAQrC,KAAKF,SAEpB2C,EAAa7B,SAASP,cAAc,mBACxCoC,EAAaA,EAAWC,WAAU,OAE9BC,EAAe/B,SAASP,cAAc,qBAC1CsC,EAAeA,EAAaD,WAAU,GACtCC,EAAalB,UAAUH,OAAO,gBAE1BsB,EAAQhC,SAASuB,cAAc,MACnCS,EAAMnB,UAAUC,IAAI,SACpBkB,EAAMR,YAAc,MAChBjB,EAAQP,SAASuB,cAAc,OACnChB,EAAMM,UAAUC,IAAI,SAEpBa,EAAM1B,YAAY2B,GAElBD,EAAM1B,YAAY+B,GAClBL,EAAM1B,YAAY4B,GAClBzC,KAAKC,WAAWwC,GAChBF,EAAM1B,YAAY8B,GAClB3C,KAAKc,aAAa6B,GAElBzB,EAAOL,YAAY0B,GACnBrB,EAAOL,YAAYM,GAEnBnB,KAAKuB,oBAEDsB,EAAQjC,SAASgB,eAAe,SACpCiB,EAAMhC,YAAYK,GAElB2B,EAAMC,SAAAA,CACFC,IAAK,EACLC,KAAMH,EAAMI,YACZC,SAAU,sBC5GhBC,EAAiBvC,SAASgB,eAAe,oBAC/C,SAAAwB,QACQvB,EAAcjB,SAASQ,iBAAiB,gBACxCU,EAAWqB,EAAe9C,cAAc,uBAC5CyB,EAASC,UAAY,GACrBF,EAAYG,SAAQ,SAAUC,OACtBC,EAAYtB,SAASuB,cAAc,UACvCD,EAAUE,YAAcH,EAAOI,MAC/BH,EAAUG,MAAQJ,EAAOI,MACzBP,EAASjB,YAAYqB,MAG7BkB,UAEMC,EAAkBzC,SAASgB,eAAe,oBAC1C0B,EAAgB1C,SAASgB,eAAe,uBAC1C2B,GAAkB,EAGtB,SAAAC,IAC2B,GAAnBD,GACAD,EAAc7B,UAAUC,IAAI,UAC5B6B,GAAkB,EAClBF,EAAgBI,MAAMC,QAAU,QACN,GAAnBH,IACPD,EAAc7B,UAAUH,OAAO,UAC/BgC,EAAcK,QACdJ,GAAkB,EAClBF,EAAgBI,MAAMC,QAAU,QAXtB9C,SAASgB,eAAe,cAiChCtB,iBAAiB,QAASkD,SAG9BI,EAAqBhD,SAASgB,eAAe,qBAC7CiC,EAAoBD,EAAmBE,mBAE7CF,EAAmBtD,iBAAiB,SAAS,WACzCkD,OAEJK,EAAkBvD,iBAAiB,SAAS,WACxCkD,OAGuB5C,SAASgB,eAAe,qBAChCtB,iBAAiB,SAAS,SAAUC,GACnDA,EAAMwD,qBAEFlE,EAAKmE,KAAKC,MACVnE,EAAOwD,EAAcjD,cAAc,SAASgC,MAE5C6B,IAAAA,EAAiBrE,EAAIC,GACrBwC,eAEJc,IAEAI,IA3CJ,eACQW,EAAUvD,SAASQ,iBAAiB,UACxC+C,EAAUA,EAAQA,EAAQ9C,OAAS,OAC/B+C,SAASD,EAAAA,CACTE,MAAO,SACPC,UAAW,IACXC,cAAe,IACfC,WAAY,aACZC,YAAa,cACbC,UAAW,gBACXC,eAAe,EACfC,MAAO,SAAUC,uBAkCrBC,YAIEC,EAAsBnE,SAASP,cAAc,sBAC7C2E,EAAoBpE,SAASP,cAAc,oBAC5BO,SAASQ,iBAAiB,aAClCY,SAAQ,SAASiD,OACtB/E,EAAmB+E,EAAY5E,cAAc,mBAC7CU,EAAqBkE,EAAY5E,cAAc,qBAC/CF,EAAkB8E,EAAY5E,cAAc,qBAEhDH,EAAiBI,iBAAiB,SAAS,WAEvCH,EAAgBO,WAEpBP,EAAgBG,iBAAiB,SAAS,SAASC,GAC7B,UAAdA,EAAMC,KAENL,EAAgBM,UAGxBP,EAAiBI,iBAAiB,aAAa,WAC3CJ,EAAiBE,cAAcS,YAAYmE,MAG/CjE,EAAmBT,iBAAiB,SAAS,eACrCU,EAAUJ,SAASK,uBAAuB,UAC1CC,EAAS+D,EAAY7E,cACrBe,EAAQD,EAAOE,iBAAiB,SAChCJ,EAAQK,OAAS,GAAqB,GAAhBF,EAAME,SAC5BH,EAAOI,SACP8B,QAIRrC,EAAmBT,iBAAiB,aAAa,eACzCU,EAAUJ,SAASK,uBAAuB,UAE1CE,EADS8D,EAAY7E,cACNgB,iBAAiB,SACpCL,EAAmBX,cAAcS,YAAYkE,GACzC/D,EAAQK,OAAS,GAAqB,GAAhBF,EAAME,OAC5BN,EAAmBU,UAAUH,OAAO,aAC7BN,EAAQK,QAAU,GAAKF,EAAME,OAAS,IAC7CN,EAAmBU,UAAUC,IAAI","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./public/js/column.js","./public/js/column-form.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","class Column {\r\n    constructor(id, name, deleteFunction) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    editColumn(editColumnButton) {\r\n       \r\n        let column = editColumnButton.parentElement\r\n        let columnNameInput = column.querySelector('input.column-name')\r\n        columnNameInput.addEventListener('keyup', function(event) {\r\n            if (event.key === 'Enter') {\r\n                // columnNameInput.removeAttribute('disabled')\r\n                columnNameInput.blur()\r\n            }\r\n        })\r\n        \r\n        editColumnButton.addEventListener('click', function() {\r\n            // columnNameInput.setAttribute('disabled', true)\r\n            columnNameInput.focus()\r\n        })\r\n\r\n        const columnEditToolTip = document.querySelector('div.tooltip#edit')\r\n        editColumnButton.addEventListener('mouseover', function() {\r\n            editColumnButton.parentElement.appendChild(columnEditToolTip)\r\n        })\r\n    }\r\n\r\n    deleteColumn(deleteColumnButton) {\r\n        deleteColumnButton.addEventListener('click', function() {\r\n            let columns = document.getElementsByClassName('column')\r\n            let column = deleteColumnButton.parentElement.parentElement\r\n            let cards = column.querySelectorAll('.card')\r\n            if (columns.length > 3 && cards.length == 0) {\r\n                column.remove()\r\n                this.updateColumns();\r\n            }\r\n        })\r\n\r\n        const columnDeleteToolTip = document.querySelector('div.tooltip#delete')\r\n        deleteColumnButton.addEventListener('mouseover', function() {\r\n            deleteColumnButton.parentElement.appendChild(columnDeleteToolTip)\r\n            let columns = document.getElementsByClassName('column')\r\n            let column = deleteColumnButton.parentElement.parentElement\r\n            let cards = column.querySelectorAll('.card')\r\n\r\n            if (columns.length > 3 && cards.length == 0) {\r\n                deleteColumnButton.classList.remove('disabled')\r\n            } else if (columns.length <= 3 || cards.length > 0) {\r\n                deleteColumnButton.classList.add('disabled')\r\n            }\r\n        })\r\n    }\r\n\r\n    updateColumns() {\r\n        const createTaskForm = document.getElementById('create-task-form')\r\n        // function updateColumnNames() {\r\n        let columnNames = document.querySelectorAll('.column-name')\r\n        let statuses = createTaskForm.querySelector('select[name=status]');\r\n        statuses.innerHTML = ''\r\n        columnNames.forEach(function (object) {\r\n            let newOption = document.createElement('option')\r\n            newOption.textContent = object.value\r\n            newOption.value = object.value\r\n            statuses.appendChild(newOption)\r\n        })\r\n        // }\r\n    }\r\n\r\n    createColumn() {\r\n        // creating the column\r\n        let column = document.createElement('div')\r\n        column.classList.add('column')\r\n        let title = document.createElement('div')\r\n        title.classList.add('title')\r\n        let columnName = document.createElement('input')\r\n        columnName.classList.add('column-name')\r\n        columnName.value = this.name\r\n\r\n        let editButton = document.querySelector('svg.edit-column')\r\n        editButton = editButton.cloneNode(true)\r\n        \r\n        let deleteButton = document.querySelector('svg.delete-column')\r\n        deleteButton = deleteButton.cloneNode(true)\r\n        deleteButton.classList.remove('disabled')\r\n\r\n        let total = document.createElement('h3')\r\n        total.classList.add('total')\r\n        total.textContent = 0;\r\n        let cards = document.createElement('div')\r\n        cards.classList.add('cards')\r\n    \r\n        title.appendChild(columnName)\r\n\r\n        title.appendChild(total)\r\n        title.appendChild(editButton)\r\n        this.editColumn(editButton)\r\n        title.appendChild(deleteButton)\r\n        this.deleteColumn(deleteButton)\r\n\r\n        column.appendChild(title)\r\n        column.appendChild(cards)\r\n\r\n        this.updateColumns()\r\n\r\n        let tasks = document.getElementById('tasks')\r\n        tasks.appendChild(column)\r\n        // smooth scroll to the new column\r\n        tasks.scrollTo({\r\n            top: 0,\r\n            left: tasks.clientWidth,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Column","import Column from './column'\r\nimport * as kanbanA from './kanban'\r\n\r\nconst createTaskForm = document.getElementById('create-task-form')\r\nfunction updateColumnNames() {\r\n    let columnNames = document.querySelectorAll('.column-name')\r\n    let statuses = createTaskForm.querySelector('select[name=status]');\r\n    statuses.innerHTML = ''\r\n    columnNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        statuses.appendChild(newOption)\r\n    })\r\n}\r\nupdateColumnNames()\r\n\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addColumnForm = document.getElementById('add-column-form')\r\nvar newColumnToggle = false;\r\nconst newColumn = document.getElementById('new-column');\r\n\r\nfunction toggleColumnForm() {\r\n    if (newColumnToggle == false) {\r\n        addColumnForm.classList.add('active')\r\n        newColumnToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newColumnToggle == true) {\r\n        addColumnForm.classList.remove('active')\r\n        addColumnForm.reset()\r\n        newColumnToggle = false\r\n        modalBackground.style.display = 'none'\r\n    }\r\n}\r\n\r\nfunction createNewSortable() {\r\n    let newCard = document.querySelectorAll('.cards')\r\n    newCard = newCard[newCard.length - 1]\r\n    new Sortable(newCard, {\r\n        group: 'nested',\r\n        animation: 200,\r\n        swapThreshold: 0.65,\r\n        ghostClass: 'ghost-card',\r\n        chosenClass: 'chosen-card',\r\n        dragClass: \"sortable-drag\",\r\n        forceFallback: true,\r\n        onEnd: function (evt) {\r\n            kanbanA.countCards()\r\n        }\r\n    })\r\n}\r\n\r\n// adding an event listener to bring up the form\r\nnewColumn.addEventListener('click', toggleColumnForm)\r\n\r\n// adding an event listener for submitting the column\r\nconst columnCancelButton = document.getElementById('add-column-cancel')\r\nconst columnCloseButton = columnCancelButton.nextElementSibling\r\n// columnCancelButton.querySelector('~ button.form-close')\r\ncolumnCancelButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\ncolumnCloseButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\n\r\nconst columnSubmitButton = document.getElementById('add-column-submit')\r\ncolumnSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n\r\n    let id = Date.now()\r\n    let name = addColumnForm.querySelector('input').value\r\n\r\n    let col = new Column(id, name)\r\n    col.createColumn()\r\n\r\n    updateColumnNames()\r\n\r\n    toggleColumnForm()\r\n\r\n    createNewSortable();\r\n})\r\n\r\n// //////////// COLUMN BUTTONS\r\nconst columnDeleteToolTip = document.querySelector('div.tooltip#delete')\r\nconst columnEditToolTip = document.querySelector('div.tooltip#edit')\r\nconst columnTitles = document.querySelectorAll('div.title')\r\ncolumnTitles.forEach(function(columnTitle) {\r\n    let editColumnButton = columnTitle.querySelector('svg.edit-column')\r\n    let deleteColumnButton = columnTitle.querySelector('svg.delete-column')\r\n    let columnNameInput = columnTitle.querySelector('input.column-name')\r\n\r\n    editColumnButton.addEventListener('click', function() {\r\n        // columnNameInput.removeAttribute('disabled')\r\n        columnNameInput.focus()\r\n    })\r\n    columnNameInput.addEventListener('keyup', function(event) {\r\n        if (event.key === 'Enter') {\r\n            // columnNameInput.setAttribute('disabled', true)\r\n            columnNameInput.blur()\r\n        }\r\n    })\r\n    editColumnButton.addEventListener('mouseover', function() {\r\n        editColumnButton.parentElement.appendChild(columnEditToolTip)\r\n    })\r\n\r\n    deleteColumnButton.addEventListener('click', function() {\r\n        let columns = document.getElementsByClassName('column')\r\n        let column = columnTitle.parentElement\r\n        let cards = column.querySelectorAll('.card')\r\n        if (columns.length > 3 && cards.length == 0) {\r\n            column.remove()\r\n            updateColumnNames()\r\n        }\r\n    })\r\n\r\n    deleteColumnButton.addEventListener('mouseover', function() {\r\n        let columns = document.getElementsByClassName('column')\r\n        let column = columnTitle.parentElement\r\n        let cards = column.querySelectorAll('.card')\r\n        deleteColumnButton.parentElement.appendChild(columnDeleteToolTip)\r\n        if (columns.length > 3 && cards.length == 0) {\r\n            deleteColumnButton.classList.remove('disabled')\r\n        } else if (columns.length <= 3 || cards.length > 0) {\r\n            deleteColumnButton.classList.add('disabled')\r\n        }\r\n    })\r\n})\r\n\r\n// var \r\n// let allDeleteColumnButtons = document.querySelectorAll('svg.delete-column')\r\n// allDeleteColumnButtons.forEach(function(button) {\r\n//     button.addEventListener('mouseover', function() {\r\n//         let allDeleteColumnButtons = document.querySelectorAll('svg.delete-column')\r\n//         allDeleteColumnButtons.forEach( function(button) {\r\n//             let columns = document.getElementsByClassName('column')\r\n//             let column = button.parentElement.parentElement\r\n//             let cards = column.querySelectorAll('.card')\r\n    \r\n//             if (columns.length > 3 && cards.length == 0) {\r\n//                 button.classList.remove('disabled')\r\n//             } else if (columns.length <= 3 || cards.length > 0) {\r\n//                 button.classList.add('disabled')\r\n//             }\r\n//         })\r\n//     })\r\n// })\r\n"],"names":["globalThis","self","window","global","$8b38702613a783d21a2f250d3e1ed6dd$export$default","constructor","id","name","deleteFunction","this","editColumn","editColumnButton","columnNameInput","parentElement","querySelector","addEventListener","event","key","blur","focus","columnEditToolTip","document","appendChild","deleteColumn","deleteColumnButton","columns","getElementsByClassName","column","cards","querySelectorAll","length","remove","updateColumns","columnDeleteToolTip","classList","add","createTaskForm","getElementById","columnNames","statuses","innerHTML","forEach","object","newOption","createElement","textContent","value","createColumn","title","columnName","editButton","cloneNode","deleteButton","total","tasks","scrollTo","top","left","clientWidth","behavior","$a969fc4719ba336d4874bd6e736e73f1$var$createTaskForm","$a969fc4719ba336d4874bd6e736e73f1$var$updateColumnNames","$a969fc4719ba336d4874bd6e736e73f1$var$modalBackground","$a969fc4719ba336d4874bd6e736e73f1$var$addColumnForm","$a969fc4719ba336d4874bd6e736e73f1$var$newColumnToggle","$a969fc4719ba336d4874bd6e736e73f1$var$toggleColumnForm","style","display","reset","$a969fc4719ba336d4874bd6e736e73f1$var$columnCancelButton","$a969fc4719ba336d4874bd6e736e73f1$var$columnCloseButton","nextElementSibling","preventDefault","Date","now","col","newCard","Sortable","group","animation","swapThreshold","ghostClass","chosenClass","dragClass","forceFallback","onEnd","evt","$a969fc4719ba336d4874bd6e736e73f1$var$createNewSortable","$a969fc4719ba336d4874bd6e736e73f1$var$columnDeleteToolTip","$a969fc4719ba336d4874bd6e736e73f1$var$columnEditToolTip","columnTitle"],"version":3,"file":"index.HASH_REF_97ca2af3a47c960ef40dd57f17c164ed.js.map"}