{"mappings":"sBACwB,oBAAfA,WACHA,WACgB,oBAATC,KACPA,KACkB,oBAAXC,OACPA,OACkB,oBAAXC,OACPA,OAAAA,gCCRN,MAAAC,EACIC,YAAYC,EAAIC,GACZC,KAAKF,GAAKA,EACVE,KAAKD,KAAOA,EAGhBE,mBAEQC,EAASC,SAASC,cAAc,OACpCF,EAAOG,UAAUC,IAAI,cACjBC,EAAQJ,SAASC,cAAc,OACnCG,EAAMF,UAAUC,IAAI,aAChBE,EAAaL,SAASC,cAAc,SACxCI,EAAWH,UAAUC,IAAI,eACzBE,EAAWC,MAAQT,KAAKD,SAEpBW,EAAaP,SAASQ,cAAc,mBACxCD,EAAaA,EAAWE,WAAU,OAC9BC,EAAeV,SAASQ,cAAc,qBAC1CE,EAAeA,EAAaD,WAAU,OAgBlCE,EAAQX,SAASC,cAAc,MACnCU,EAAMT,UAAUC,IAAI,SACpBQ,EAAMC,YAAc,MAChBC,EAAQb,SAASC,cAAc,OACnCY,EAAMX,UAAUC,IAAI,SAEpBC,EAAMU,YAAYT,GAElBD,EAAMU,YAAYH,GAClBP,EAAMU,YAAYP,GAClBH,EAAMU,YAAYJ,GAClBX,EAAOe,YAAYV,GACnBL,EAAOe,YAAYD,OACfE,EAAQf,SAASgB,eAAe,SACpCD,EAAMD,YAAYf,GAElBgB,EAAME,SAAAA,CACFC,IAAK,EACLC,KAAMJ,EAAMK,YACZC,SAAU,sBCnDhBC,EAAiBtB,SAASgB,eAAe,oBAC/C,SAAAO,QACQC,EAAcxB,SAASyB,iBAAiB,gBACxCC,EAAWJ,EAAed,cAAc,uBAC5CkB,EAASC,UAAY,GACrBH,EAAYI,SAAQ,SAAUC,OACtBC,EAAY9B,SAASC,cAAc,UACvC6B,EAAUlB,YAAciB,EAAOvB,MAC/BwB,EAAUxB,MAAQuB,EAAOvB,MACzBoB,EAASZ,YAAYgB,MAG7BP,UAEMQ,EAAkB/B,SAASgB,eAAe,oBAC1CgB,EAAgBhC,SAASgB,eAAe,uBAC1CiB,GAAkB,EAGtB,SAAAC,IAC2B,GAAnBD,GACAD,EAAc9B,UAAUC,IAAI,UAC5B8B,GAAkB,EAClBF,EAAgBI,MAAMC,QAAU,QACN,GAAnBH,IACPD,EAAc9B,UAAUmC,OAAO,UAC/BL,EAAcM,QACdL,GAAkB,EAClBF,EAAgBI,MAAMC,QAAU,QAXtBpC,SAASgB,eAAe,cAgChCuB,iBAAiB,QAASL,SAG9BM,EAAqBxC,SAASgB,eAAe,qBAC7CyB,EAAoBD,EAAmBE,mBAE7CF,EAAmBD,iBAAiB,SAAS,WACzCL,OAEJO,EAAkBF,iBAAiB,SAAS,WACxCL,OAGuBlC,SAASgB,eAAe,qBAChCuB,iBAAiB,SAAS,SAAUI,GACnDA,EAAMC,qBAEFjD,EAAKkD,KAAKC,MACVlD,EAAOoC,EAAcxB,cAAc,SAASF,MAE5CyC,IAAAA,EAAiBpD,EAAIC,GACrBE,eAEJyB,IAEAW,IA1CJ,eACQc,EAAUhD,SAASyB,iBAAiB,UACxCuB,EAAUA,EAAQA,EAAQC,OAAS,OAC/BC,SAASF,EAAAA,CACTG,MAAO,SACPC,UAAW,IACXC,cAAe,IACfC,WAAY,aACZC,YAAa,cACbC,eAAe,EACfC,MAAO,SAAUC,uBAkCrBC","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./public/js/column.js","./public/js/column-form.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","class Column {\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    createColumn() {\r\n        // creating the column\r\n        let column = document.createElement('div')\r\n        column.classList.add('column')\r\n        let title = document.createElement('div')\r\n        title.classList.add('title')\r\n        let columnName = document.createElement('input')\r\n        columnName.classList.add('column-name')\r\n        columnName.value = this.name\r\n\r\n        let editButton = document.querySelector('svg.edit-column')\r\n        editButton = editButton.cloneNode(true)\r\n        let deleteButton = document.querySelector('svg.delete-column')\r\n        deleteButton = deleteButton.cloneNode(true)\r\n        // let editButton = document.createElement('div')\r\n        // editButton.classList.add('edit-column')\r\n        // let deleteButton = document.createElement('div')\r\n        // deleteButton.classList.add('delete-column')\r\n        // editButton.innerHTML = `\r\n        // <svg class=\"edit-column\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        // <path\r\n        //     d=\"M0 12.6672V16H3.33287L13.1626 6.17028L9.82975 2.83741L0 12.6672ZM15.74 3.59286C16.0867 3.24625 16.0867 2.68632 15.74 2.33971L13.6603 0.259994C13.3137 -0.0866241 12.7538 -0.0866241 12.4072 0.259994L10.7807 1.88644L14.1136 5.21931L15.74 3.59286Z\"\r\n        //     fill=\"#909090\" />\r\n        // </svg>`\r\n        // deleteButton.innerHTML = `\r\n        // <svg class=\"delete-column\" width=\"14\" height=\"18\" viewBox=\"0 0 14 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        // <path d=\"M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z\" fill=\"#909090\"/>\r\n        // </svg>`\r\n\r\n        let total = document.createElement('h3')\r\n        total.classList.add('total')\r\n        total.textContent = 0;\r\n        let cards = document.createElement('div')\r\n        cards.classList.add('cards')\r\n    \r\n        title.appendChild(columnName)\r\n\r\n        title.appendChild(total)\r\n        title.appendChild(editButton)\r\n        title.appendChild(deleteButton)\r\n        column.appendChild(title)\r\n        column.appendChild(cards)\r\n        let tasks = document.getElementById('tasks')\r\n        tasks.appendChild(column)\r\n        // smooth scroll to the new column\r\n        tasks.scrollTo({\r\n            top: 0,\r\n            left: tasks.clientWidth,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Column","import Column from './column'\r\nimport * as kanbanA from './kanban'\r\n\r\nconst createTaskForm = document.getElementById('create-task-form')\r\nfunction updateColumnNames() {\r\n    let columnNames = document.querySelectorAll('.column-name')\r\n    let statuses = createTaskForm.querySelector('select[name=status]');\r\n    statuses.innerHTML = ''\r\n    columnNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        statuses.appendChild(newOption)\r\n    })\r\n}\r\nupdateColumnNames()\r\n\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addColumnForm = document.getElementById('add-column-form')\r\nvar newColumnToggle = false;\r\nconst newColumn = document.getElementById('new-column');\r\n\r\nfunction toggleColumnForm() {\r\n    if (newColumnToggle == false) {\r\n        addColumnForm.classList.add('active')\r\n        newColumnToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newColumnToggle == true) {\r\n        addColumnForm.classList.remove('active')\r\n        addColumnForm.reset()\r\n        newColumnToggle = false\r\n        modalBackground.style.display = 'none'\r\n    }\r\n}\r\n\r\nfunction createNewSortable() {\r\n    let newCard = document.querySelectorAll('.cards')\r\n    newCard = newCard[newCard.length - 1]\r\n    new Sortable(newCard, {\r\n        group: 'nested',\r\n        animation: 200,\r\n        swapThreshold: 0.65,\r\n        ghostClass: 'ghost-card',\r\n        chosenClass: 'chosen-card',\r\n        forceFallback: true,\r\n        onEnd: function (evt) {\r\n            kanbanA.countCards()\r\n        }\r\n    })\r\n}\r\n\r\n// adding an event listener to bring up the form\r\nnewColumn.addEventListener('click', toggleColumnForm)\r\n\r\n// adding an event listener for submitting the column\r\nconst columnCancelButton = document.getElementById('add-column-cancel')\r\nconst columnCloseButton = columnCancelButton.nextElementSibling\r\n// columnCancelButton.querySelector('~ button.form-close')\r\ncolumnCancelButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\ncolumnCloseButton.addEventListener('click', function() {\r\n    toggleColumnForm()\r\n})\r\n\r\nconst columnSubmitButton = document.getElementById('add-column-submit')\r\ncolumnSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n\r\n    let id = Date.now()\r\n    let name = addColumnForm.querySelector('input').value\r\n\r\n    let col = new Column(id, name)\r\n    col.createColumn()\r\n\r\n    updateColumnNames()\r\n\r\n    toggleColumnForm()\r\n\r\n    createNewSortable();\r\n})\r\n\r\n// //////////// COLUMN BUTTONS\r\n\r\n// let columnOptions = document.querySelector('img.column-options')\r\n// let editColumn = document.querySelector('img.edit-column')\r\n// let deleteColumn = document.querySelector('img.delete-column')\r\n// let columnOptionsToggle = false;\r\n// columnOptions.addEventListener('click', toggleColumnOptions)\r\n\r\n// function toggleColumnOptions() {\r\n//     if (columnOptionsToggle == false) {\r\n//         columnOptions.style.display = 'flex';\r\n//         editColumn.style.display = 'none';\r\n//         deleteColumn.style.display = 'none';\r\n//         columnOptionsToggle = true;\r\n//     } else if (columnOptionsToggle == true) {\r\n//         columnOptions.style.display = 'none';\r\n//         editColumn.style.display = 'flex';\r\n//         deleteColumn.style.display = 'flex';\r\n//         columnOptionsToggle = false;\r\n//     }\r\n// }"],"names":["globalThis","self","window","global","$8b38702613a783d21a2f250d3e1ed6dd$export$default","constructor","id","name","this","createColumn","column","document","createElement","classList","add","title","columnName","value","editButton","querySelector","cloneNode","deleteButton","total","textContent","cards","appendChild","tasks","getElementById","scrollTo","top","left","clientWidth","behavior","$a969fc4719ba336d4874bd6e736e73f1$var$createTaskForm","$a969fc4719ba336d4874bd6e736e73f1$var$updateColumnNames","columnNames","querySelectorAll","statuses","innerHTML","forEach","object","newOption","$a969fc4719ba336d4874bd6e736e73f1$var$modalBackground","$a969fc4719ba336d4874bd6e736e73f1$var$addColumnForm","$a969fc4719ba336d4874bd6e736e73f1$var$newColumnToggle","$a969fc4719ba336d4874bd6e736e73f1$var$toggleColumnForm","style","display","remove","reset","addEventListener","$a969fc4719ba336d4874bd6e736e73f1$var$columnCancelButton","$a969fc4719ba336d4874bd6e736e73f1$var$columnCloseButton","nextElementSibling","event","preventDefault","Date","now","col","newCard","length","Sortable","group","animation","swapThreshold","ghostClass","chosenClass","forceFallback","onEnd","evt","$a969fc4719ba336d4874bd6e736e73f1$var$createNewSortable"],"version":3,"file":"index.HASH_REF_97ca2af3a47c960ef40dd57f17c164ed.js.map"}