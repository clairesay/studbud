const timeToolsOverlay = document.getElementById('time')
        const timeSelector = document.getElementById('time-selector')
        const dropdown = document.getElementById('dropdown')
        
        timeMenuToggleOpen = false
        function toggleTimeMenu() {
            if (timeMenuToggleOpen == false) {
                timeSelector.classList = 'open'
                timeMenuToggleOpen = true
            } else if (timeMenuToggleOpen == true) {
                timeSelector.classList = 'close'
                timeMenuToggleOpen = false
            }
        }
        dropdown.addEventListener('click', toggleTimeMenu)

        const stopwatch = document.getElementById('stopwatch')
        const stopwatchSelector = document.getElementById('stopwatch-select')
        const pomodoro = document.getElementById('pomodoro')
        const pomodoroSelector = document.getElementById('pomodoro-select')

        stopwatchSelector.addEventListener('click', function() {
            timeSelector.appendChild(pomodoroSelector)
            setTimerType()
        })
        pomodoroSelector.addEventListener('click', function() {
            timeSelector.appendChild(stopwatchSelector)
            setTimerType()
        })

        function setTimerType() {
            let currentTimer = timeSelector.querySelector(':first-child')
            if (currentTimer.id == 'stopwatch-select') {
                stopwatch.classList.add('active')
                pomodoro.classList.remove('active')
            } else if (currentTimer.id == 'pomodoro-select') {
                stopwatch.classList.remove('active')
                pomodoro.classList.add('active')
            }
        }
        setTimerType()


        var minutes = document.querySelector('#stopwatch .minutes')
        // minutes = minutes.textContent = '00'
        var min = 0
        var seconds = document.querySelector('#stopwatch .seconds')
        // seconds = seconds.textContent = '00'
        var sec = 0
        var milliseconds = document.querySelector('#stopwatch .milliseconds')
        // milliseconds = milliseconds.textContent = '00'
        var milli = 0
        // incrementUp()
        // function incrementUp() {
        //     if (sec == 59) {
        //         sec = 0
        //         min += 1
        //     } else {
        //         sec += 1
        //     }
            
        const stopwatchStart = document.querySelector('#stopwatch button.start-stop')
        const stopwatchReset = document.querySelector('#stopwatch button.reset')
        var stopwatchOff = false
        stopwatchReset.addEventListener('click', function() {
            // stop the stopwatch
            // continue the stopwatch even while the user is in a different tab?
            milli = 0
            sec = 0
            min = 0
            minutes.textContent = min.toString()
            seconds.textContent = sec.toString()
            milliseconds.textContent = milli.toString()

            stopwatchReset.disabled = true
            dropdown.addEventListener('click', toggleTimeMenu)
        })
        var intervals;
        stopwatchStart.addEventListener('click', function() {
            if (stopwatchOff == true) {
                clearInterval(intervals)
                stopwatchOff = false
            } else if (stopwatchOff == false) {
                incrementUp()
                function incrementUp() {
                    if (milli == 1000) {
                        sec += 1
                        milli = 0
                    } else {
                        milli += 10
                    }
                    if (sec == 60) {
                        sec = 0
                        min += 1
                    } 
                    if (min == 60) {
                        // set false
                    }
                }
                intervals = setInterval(function() { 
                        minutes.textContent = min.toString()
                        seconds.textContent = sec.toString()
                        milliseconds.textContent = milli.toString()
                        incrementUp()
                }, 10);
                stopwatchReset.disabled = false
                // disable the timer dropdown
                dropdown.removeEventListener('click', toggleTimeMenu)
                stopwatchOff = true

            }
        })
        // }
        // setInterval(function() { 
        //         minutes.textContent = min.toString()
        //         seconds.textContent = sec.toString()
        //         incrementUp()
        // }, 1000);

        // incrementUp()
        // function incrementUp() {
        //     if (milli == 1000) {
        //         sec += 1
        //         milli = 0
        //     } else {
        //         milli += 100
        //     }

        //     if (sec == 59) {
        //         sec = 0
        //         min += 1
        //     } 

        // }
        // setInterval(function() { 
        //         minutes.textContent = min.toString()
        //         seconds.textContent = sec.toString()
        //         milliseconds.textContent = milli.toString()
        //         incrementUp()
        // }, 100);
        const timePopUp = document.getElementById('time')
        const musicPopUp = document.getElementById('music')
        
        timePopUp.setAttribute('state', 'standby')
        musicPopUp.setAttribute('state', 'standby')

        var popUpIcons = document.querySelectorAll('.pop-up[state=standby] nav img')
        var collapseButtons = document.querySelectorAll('.pop-up nav button.collapse')
        popUpIcons.forEach(function(icon) {
            icon.addEventListener('click', popUpState)
        })
        collapseButtons.forEach(function(button) {
            button.addEventListener('click', popUpState)
        })

        // if something is running, allow for a third state!
        function popUpState() {
            if (timePopUp.getAttribute('state') == 'standby') {
                timePopUp.setAttribute('state', 'active')
            } else if (timePopUp.getAttribute('state') == 'peek') {
                timePopUp.setAttribute('state', 'active')
            } else if (timePopUp.getAttribute('state') == 'active') {
                timePopUp.setAttribute('state', 'peek')
            }
        }