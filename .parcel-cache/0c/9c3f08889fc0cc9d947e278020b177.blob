{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./public/js/group.js","./public/js/group-form.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","class Group {\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n\r\n    // updateGroupNames() {\r\n    //     let groupNames = document.querySelectorAll('.group-name')\r\n    //     let groups = createContentForm.querySelector('select[name=group]');\r\n    //     groups.innerHTML = ''\r\n    //     groupNames.forEach(function (object) {\r\n    //         let newOption = document.createElement('option')\r\n    //         newOption.textContent = object.value\r\n    //         newOption.value = object.value\r\n    //         groups.appendChild(newOption)\r\n    //     })\r\n    // }\r\n\r\n    createGroup() {\r\n        // creating the column\r\n        let group = document.querySelector('div.group')\r\n        group = group.cloneNode(true)\r\n\r\n        let groupName = group.querySelector('input.group-name')\r\n\r\n        groupName.value = this.name;\r\n        groupName.removeAttribute('disabled')\r\n\r\n\r\n        // let interactiveContainer = groupName.parentElement\r\n        // groupName = document.createElement('input')\r\n        // groupName.classList.add('group-name')\r\n        // groupName.value = this.name;\r\n        // interactiveContainer.innerHTML =  groupName + `\r\n        // <svg class=\"edit-group\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        //     <path\r\n        //         d=\"M0 12.6672V16H3.33287L13.1626 6.17028L9.82975 2.83741L0 12.6672ZM15.74 3.59286C16.0867 3.24625 16.0867 2.68632 15.74 2.33971L13.6603 0.259994C13.3137 -0.0866241 12.7538 -0.0866241 12.4072 0.259994L10.7807 1.88644L14.1136 5.21931L15.74 3.59286Z\"\r\n        //         fill=\"#909090\" />\r\n        // </svg>\r\n        // <svg class=\"delete-group\" width=\"14\" height=\"18\" viewBox=\"0 0 14 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        //     <path d=\"M1 16C1 17.1 1.9 18 3 18H11C12.1 18 13 17.1 13 16V4H1V16ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z\" fill=\"#909090\"/>\r\n        // </svg>`\r\n\r\n\r\n        let editButton = group.querySelector('svg.edit-group')\r\n        let deleteButton = group.querySelector('svg.delete-group')\r\n\r\n\r\n        let tiles = group.querySelectorAll('.tile')\r\n        tiles.forEach(function (tile) {\r\n            tile.remove()\r\n        })\r\n\r\n        // let column = document.createElement('div')\r\n        // column.classList.add('column')\r\n        // let title = document.createElement('div')\r\n        // title.classList.add('title')\r\n        // let columnName = document.createElement('input')\r\n        // columnName.classList.add('column-name')\r\n        // columnName.value = this.name\r\n\r\n        // let editButton = document.querySelector('svg.edit-column')\r\n        // editButton = editButton.cloneNode(true)\r\n        \r\n        // let deleteButton = document.querySelector('svg.delete-column')\r\n        // deleteButton = deleteButton.cloneNode(true)\r\n\r\n        // let total = document.createElement('h3')\r\n        // total.classList.add('total')\r\n        // total.textContent = 0;\r\n        // let cards = document.createElement('div')\r\n        // cards.classList.add('cards')\r\n    \r\n        // title.appendChild(columnName)\r\n\r\n        // title.appendChild(total)\r\n        // title.appendChild(editButton)\r\n\r\n        // title.appendChild(deleteButton)\r\n\r\n        // column.appendChild(title)\r\n        // column.appendChild(cards)\r\n\r\n        let content = document.getElementById('content')\r\n        content.appendChild(group)\r\n\r\n        // this.editColumn(editButton)\r\n        // this.deleteColumn(deleteButton)\r\n        // this.updateColumns()\r\n\r\n        // smooth scroll to the new column\r\n        group.scrollTo({\r\n            top: content.clientHeight,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Group","\r\nimport Group from './group'\r\nimport * as countTiles from './count-tiles'\r\n\r\ncountTiles.countTiles()\r\n\r\nconst createContentForm = document.getElementById('create-content-form')\r\nfunction updateGroupNames() {\r\n    let groupNames = document.querySelectorAll('.group-name')\r\n    let groups = createContentForm.querySelector('select[name=group]');\r\n    groups.innerHTML = ''\r\n    groupNames.forEach(function (object) {\r\n        let newOption = document.createElement('option')\r\n        newOption.textContent = object.value\r\n        newOption.value = object.value\r\n        groups.appendChild(newOption)\r\n    })\r\n}\r\nupdateGroupNames()\r\n\r\nconst modalBackground = document.getElementById('modal-background')\r\nconst addGroupForm = document.getElementById('add-group-form')\r\nvar newGroupToggle = false;\r\nconst newGroup = document.getElementById('new-group');\r\n\r\nfunction toggleGroupForm() {\r\n    if (newGroupToggle == false) {\r\n        addGroupForm.classList.add('active')\r\n        newGroupToggle = true\r\n        modalBackground.style.display = 'flex'\r\n    } else if (newGroupToggle == true) {\r\n        addGroupForm.classList.remove('active')\r\n        addGroupForm.reset()\r\n        newGroupToggle = false\r\n        modalBackground.style.display = 'none'\r\n    }\r\n}\r\n\r\n// function createNewSortable() {\r\n//     let newCard = document.querySelectorAll('.cards')\r\n//     newCard = newCard[newCard.length - 1]\r\n//     new Sortable(newCard, {\r\n//         group: 'nested',\r\n//         animation: 200,\r\n//         swapThreshold: 0.65,\r\n//         ghostClass: 'ghost-card',\r\n//         chosenClass: 'chosen-card',\r\n//         dragClass: \"sortable-drag\",\r\n//         forceFallback: true,\r\n//         onEnd: function (evt) {\r\n//             kanbanA.countCards()\r\n//         }\r\n//     })\r\n// }\r\n\r\n// adding an event listener to bring up the form\r\nnewGroup.addEventListener('click', toggleGroupForm)\r\n\r\n// adding an event listener for submitting the column\r\nconst groupCancelButton = document.getElementById('add-group-cancel')\r\nconst groupCloseButton = groupCancelButton.nextElementSibling\r\n// columnCancelButton.querySelector('~ button.form-close')\r\ngroupCancelButton.addEventListener('click', function() {\r\n    toggleGroupForm()\r\n})\r\ngroupCloseButton.addEventListener('click', function() {\r\n    toggleGroupForm()\r\n})\r\n\r\nconst groupSubmitButton = document.getElementById('add-group-submit')\r\ngroupSubmitButton.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n\r\n    let id = Date.now()\r\n    let name = addGroupForm.querySelector('input').value\r\n    console.log(name)\r\n    let group = new Group(id, name)\r\n    group.createGroup()\r\n\r\n    // updateColumnNames()\r\n\r\n\r\n    toggleGroupForm()\r\n    updateGroupNames()\r\n    countTiles.openGroupLinks()\r\n    countTiles.countTiles()\r\n    groupEditDeleteFunctionality()\r\n    // createNewSortable();\r\n})\r\n\r\n// //////////// COLUMN BUTTONS\r\nfunction groupEditDeleteFunctionality() {\r\n    const groupDeleteToolTip = document.querySelector('div.group-tooltip#delete')\r\n    const groupEditToolTip = document.querySelector('div.group-tooltip#edit')\r\n    const groupTitles = document.querySelectorAll('div.group-title')\r\n    groupTitles.forEach(function(groupTitle) {\r\n        let editGroupButton = groupTitle.querySelector('svg.edit-group')\r\n        let deleteGroupButton = groupTitle.querySelector('svg.delete-group')\r\n        let groupNameInput = groupTitle.querySelector('input.group-name')\r\n    \r\n        editGroupButton.addEventListener('click', function() {\r\n            // columnNameInput.removeAttribute('disabled')\r\n            groupNameInput.focus()\r\n        })\r\n        groupNameInput.addEventListener('change', function(event) {\r\n            updateGroupNames();\r\n            console.log('changed')\r\n        })\r\n        groupNameInput.addEventListener('keyup', function(event) {\r\n            if (event.key === 'Enter') {\r\n                groupNameInput.blur()\r\n            }\r\n            updateGroupNames();\r\n        })\r\n        editGroupButton.addEventListener('mouseover', function() {\r\n            editGroupButton.parentElement.parentElement.appendChild(groupEditToolTip)\r\n        })\r\n    \r\n        deleteGroupButton.addEventListener('click', function() {\r\n            let groups = document.getElementsByClassName('group')\r\n            let group = groupTitle.parentElement\r\n            let tiles = group.querySelectorAll('.tile')\r\n            if (groups.length > 1 && tiles.length == 0) {\r\n                group.remove()\r\n                updateGroupNames()\r\n            }\r\n        })\r\n    \r\n        deleteGroupButton.addEventListener('mouseover', function() {\r\n            let groups = document.getElementsByClassName('group')\r\n            let group = groupTitle.parentElement\r\n            let tiles = group.querySelectorAll('.tile')\r\n            deleteGroupButton.parentElement.parentElement.appendChild(groupDeleteToolTip)\r\n            if (group.length > 1 && tiles.length == 0) {\r\n                deleteGroupButton.classList.remove('disabled')\r\n            } else if (group.length <= 1 || tiles.length > 0) {\r\n                deleteColumnButton.classList.add('disabled')\r\n            }\r\n        })\r\n    })\r\n}\r\n"],"names":["globalThis","self","window","global","$3a4d6c23da85675d71bdb7653780216b$export$default","constructor","id","name","this","createGroup","group","document","querySelector","cloneNode","groupName","value","removeAttribute","querySelectorAll","forEach","tile","remove","content","getElementById","appendChild","scrollTo","top","clientHeight","left","behavior","$f2836ebccb8a1cfa3916bf8dece76a5e$var$createContentForm","$f2836ebccb8a1cfa3916bf8dece76a5e$var$updateGroupNames","groupNames","groups","innerHTML","object","newOption","createElement","textContent","$f2836ebccb8a1cfa3916bf8dece76a5e$var$modalBackground","$f2836ebccb8a1cfa3916bf8dece76a5e$var$addGroupForm","$f2836ebccb8a1cfa3916bf8dece76a5e$var$newGroupToggle","$f2836ebccb8a1cfa3916bf8dece76a5e$var$toggleGroupForm","classList","add","style","display","reset","addEventListener","$f2836ebccb8a1cfa3916bf8dece76a5e$var$groupCancelButton","$f2836ebccb8a1cfa3916bf8dece76a5e$var$groupCloseButton","nextElementSibling","event","preventDefault","Date","now","console","log","groupDeleteToolTip","groupEditToolTip","groupTitle","editGroupButton","deleteGroupButton","groupNameInput","focus","key","blur","parentElement","getElementsByClassName","tiles","length","deleteColumnButton","$f2836ebccb8a1cfa3916bf8dece76a5e$var$groupEditDeleteFunctionality"],"version":3,"file":"index.HASH_REF_4304dcd242a9916f6b8aa6d2ccfa4c50.js.map"}