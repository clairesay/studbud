{"mappings":"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","sources":["./public/js/time.js"],"sourcesContent":["// toggling time popup window\r\nconst timeToolsOverlay = document.getElementById('time')\r\nconst timeSelector = document.getElementById('time-selector')\r\nconst dropdown = document.getElementById('dropdown')\r\nvar peekStatusDisplay = document.querySelector('#time nav #peek-status')\r\nvar peekTimeDisplay = document.querySelector('#time nav h1');\r\nvar peekMinutes = peekTimeDisplay.querySelector('span.min')\r\nvar peekSeconds = peekTimeDisplay.querySelector('span.sec')\r\n\r\nvar timeMenuToggleOpen = false\r\n\r\nfunction toggleTimeMenu() {\r\n    if (timeMenuToggleOpen == false) {\r\n        timeSelector.classList = 'open'\r\n        timeMenuToggleOpen = true\r\n    } else if (timeMenuToggleOpen == true) {\r\n        timeSelector.classList = 'close'\r\n        timeMenuToggleOpen = false\r\n    }\r\n}\r\ndropdown.addEventListener('click', toggleTimeMenu)\r\n\r\nconst stopwatch = document.getElementById('stopwatch')\r\nconst stopwatchSelector = document.getElementById('stopwatch-select')\r\nconst pomodoro = document.getElementById('pomodoro')\r\nconst pomodoroSelector = document.getElementById('pomodoro-select')\r\n\r\n// timer dropdown selector\r\nstopwatchSelector.addEventListener('click', function () {\r\n    timeSelector.appendChild(pomodoroSelector)\r\n    setTimerType()\r\n})\r\npomodoroSelector.addEventListener('click', function () {\r\n    timeSelector.appendChild(stopwatchSelector)\r\n    setTimerType()\r\n})\r\n\r\nfunction setTimerType() {\r\n    let currentTimer = timeSelector.querySelector(':first-child')\r\n    if (currentTimer.id == 'stopwatch-select') {\r\n        stopwatch.classList.add('active')\r\n        pomodoro.classList.remove('active')\r\n    } else if (currentTimer.id == 'pomodoro-select') {\r\n        stopwatch.classList.remove('active')\r\n        pomodoro.classList.add('active')\r\n    }\r\n}\r\n\r\nsetTimerType()\r\n\r\n// STOPWATCH FUNCTIONALITY\r\nvar min = sec = milli = 0,\r\n    minutes = document.querySelector('#stopwatch .minutes'),\r\n    seconds = document.querySelector('#stopwatch .seconds'),\r\n    milliseconds = document.querySelector('#stopwatch .milliseconds');\r\n\r\nconst stopwatchStart = document.querySelector('#stopwatch button.start-stop')\r\nconst stopwatchReset = document.querySelector('#stopwatch button.reset')\r\n\r\nvar stopwatchOn = false,\r\n    intervals;\r\n\r\n\r\n// window.timeStatic = timeStatic;\r\n\r\n// resetting the stopwatch\r\nstopwatchReset.addEventListener('click', function () {\r\n    // set numbers to 0\r\n    milli = sec = min = offset = 0\r\n    minutes.textContent = round(min)\r\n    seconds.textContent = round(sec)\r\n    milliseconds.textContent = round(milli)\r\n    peekMinutes.textContent = round(min)\r\n    peekSeconds.textContent = round(sec)\r\n\r\n    // reset inner text of button\r\n    stopwatchStart.textContent = 'Start'\r\n    stopwatchStart.classList.remove('danger')\r\n    stopwatchStart.classList.add('primary')\r\n    // enable button clicking\r\n    stopwatchReset.disabled = false\r\n    stopwatchOn = false\r\n    timeToolsOverlay.setAttribute('static', 'true')\r\n    // timeStatic = true\r\n    // turn off counting\r\n    clearInterval(intervals)\r\n\r\n    // enable dropdown\r\n    dropdown.addEventListener('click', toggleTimeMenu)\r\n})\r\n\r\nvar start, currentTime, elapsedTime, stringify;\r\nvar offset = 0;\r\n// stopwatch start/stop button\r\nstopwatchStart.addEventListener('click', function () {\r\n    timeToolsOverlay.setAttribute('static', 'false')\r\n    // timeStatic = false;\r\n\r\n    // if the stopwatch is on, we want to turn this off\r\n    if (stopwatchOn == true) {\r\n        clearInterval(intervals)\r\n        stopwatchStart.textContent = 'Start'\r\n        stopwatchStart.classList.remove('danger')\r\n        stopwatchStart.classList.add('primary')\r\n        stopwatchOn = false\r\n        offset = parseInt(milli) * 10\r\n\r\n    // otherwise, if the stopwatch is not on,\r\n    } else if (stopwatchOn == false) {\r\n\r\n        start = Date.now()\r\n        incrementUp()\r\n        // increment the time upwards from the time the start button was clicked\r\n        function incrementUp() {\r\n            currentTime = Date.now()\r\n            elapsedTime = currentTime - start + offset\r\n            \r\n            stringify = (elapsedTime).toLocaleString('en-US', { minimumIntegerDigits: 3, useGrouping: false })\r\n            milli = stringify[0] + stringify[1]\r\n\r\n            if (elapsedTime >= 1000) {\r\n                start += 1000\r\n                sec += 1\r\n            }\r\n            if (sec == 60) {\r\n                sec = 0\r\n                min += 1\r\n            }\r\n        }\r\n\r\n        // set the intervals for frequent update of the numbers\r\n        intervals = setInterval(function () {\r\n            minutes.textContent = round(min)\r\n            seconds.textContent = round(sec)\r\n            milliseconds.textContent = round(milli)\r\n            peekMinutes.textContent = round(min)\r\n            peekSeconds.textContent = round(sec)\r\n            incrementUp()\r\n        }, 10); // update every 10 milliseconds\r\n\r\n        // enable the reset button\r\n        stopwatchReset.disabled = false\r\n        // replace text content for relevance\r\n        stopwatchStart.textContent = 'Stop'\r\n        stopwatchStart.classList.remove('primary')\r\n        stopwatchStart.classList.add('danger')\r\n        // disable the timer dropdown\r\n        dropdown.removeEventListener('click', toggleTimeMenu)\r\n        stopwatchOn = true\r\n    }\r\n})\r\n\r\n// setting two integer digits for all time functions\r\n// making sure there are always 2 digits https://stackoverflow.com/questions/8043026/how-to-format-numbers-by-prepending-0-to-single-digit-numbers\r\nfunction round(value) {\r\n    return (value).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })\r\n}\r\n\r\n// POMODORO TIMER\r\nvar workMin = 25,\r\n    workSec = 0,\r\n    breakMin = 5,\r\n    breakSec = 0,\r\n    workMinutes = document.querySelector('#pomodoro #work .minutes'),\r\n    workSeconds = document.querySelector('#pomodoro #work .seconds'),\r\n    breakMinutes = document.querySelector('#pomodoro #break .minutes'),\r\n    breakSeconds = document.querySelector('#pomodoro #break .seconds');\r\n\r\nconst pomoAlarm = document.getElementById('alarm-sound')\r\n\r\nconst workButtons = document.querySelector('#pomodoro #work'),\r\n    breakButtons = document.querySelector('#pomodoro #break'),\r\n    timer = document.querySelector('#pomodoro div#timer'),\r\n    workAdd = document.querySelector('#pomodoro #work button.add'),\r\n    workSubtract = document.querySelector('#pomodoro #work button.subtract'),\r\n    breakAdd = document.querySelector('#pomodoro #break button.add'),\r\n    breakSubtract = document.querySelector('#pomodoro #break button.subtract'),\r\n    pomoStartStop = document.querySelector('#pomodoro button.start-stop');\r\n\r\nvar pomoMin = workMin,\r\n    pomoSec = workSec,\r\n    pomoMinutes = document.querySelector('#pomodoro #timer .minutes'),\r\n    pomoSeconds = document.querySelector('#pomodoro #timer .seconds');\r\n\r\npomoMinutes.textContent = round(pomoMin)\r\n\r\nvar pomoIntervals,\r\n    pomoOn = false;\r\n\r\nworkAdd.addEventListener('click', () => pomoTime('add', 'work'))\r\nworkSubtract.addEventListener('click', () => pomoTime('subtract', 'work'))\r\nbreakAdd.addEventListener('click', () => pomoTime('add', 'break'))\r\nbreakSubtract.addEventListener('click', () => pomoTime('subtract', 'break'))\r\nworkButtons.style.display = 'flex'\r\nbreakButtons.style.display = 'flex'\r\ntimer.style.display = 'none'\r\n\r\nvar timeline = document.getElementById('timeline')\r\nconst loadSpans = document.querySelectorAll('#pomodoro div.length > div'),\r\n    allSpans = document.querySelectorAll('#pomodoro div > div.length'),\r\n    finalLoadSpanContainer = document.querySelector('#pomodoro div#final-load'),\r\n    finalLoadSpan = document.querySelector('#pomodoro div#final-load div'),\r\n    resetPomo = document.getElementById('reset-pomo');\r\n\r\n// reset button to return to default \r\nresetPomo.addEventListener('click', function () {\r\n    pomoMin = 25\r\n    workMin = 25\r\n    breakMin = 5\r\n    workMinutes.textContent = round(25)\r\n    breakMinutes.textContent = round(5)\r\n    pomoLength()\r\n})\r\n\r\n//start or stop the pomodoro timer\r\npomoStartStop.addEventListener('click', function () {\r\n    // reference for pomo intervals \r\n    //https://www.focusboosterapp.com/blog/common-misconceptions-of-the-pomodoro-technique/#:~:text=The%20average%20and%20suggested%20pomodoro,with%20a%2010%2Dminute%20break.\r\n    // if pomo is on, turn it off\r\n    if (pomoOn == true) {\r\n        // // both timers are inactive\r\n\r\n        endPomo()\r\n        phase = 'break'\r\n        \r\n        pomodoroTimer('static')\r\n\r\n    } else if (pomoOn == false) {\r\n        // timer is active\r\n        timeToolsOverlay.setAttribute('static', 'false')\r\n        // timeStatic = false;\r\n        \r\n        // increment downwards\r\n        function incrementDown() {\r\n            if (pomoMin == 0 && pomoSec == 0) {\r\n                sessions += 1\r\n                pomodoroTimer()\r\n                pomoAlarm.play()\r\n            } else if (pomoSec == 0) {\r\n                pomoMin -= 1\r\n                pomoSec = 59\r\n            } else {\r\n                pomoSec -= 1\r\n            }\r\n        }\r\n\r\n        // show/hide relevant elements\r\n        workButtons.style.display = 'none'\r\n        breakButtons.style.display = 'none'\r\n        timer.style.display = 'flex'\r\n\r\n        // set intervals and text content\r\n        pomoIntervals = setInterval(function () {\r\n            incrementDown()\r\n            pomoMinutes.textContent = round(pomoMin)\r\n            pomoSeconds.textContent = round(pomoSec)\r\n            peekMinutes.textContent = round(pomoMin)\r\n            peekSeconds.textContent = round(pomoSec)\r\n        }, 1000);\r\n\r\n        // change timer status\r\n        pomoStartStop.textContent = 'Stop'\r\n        pomoStartStop.classList.remove('primary')\r\n        pomoStartStop.classList.add('danger')\r\n        dropdown.removeEventListener('click', toggleTimeMenu)\r\n        pomoOn = true\r\n        pomodoroTimer()\r\n    }\r\n})\r\n\r\nconst workSpans = document.querySelectorAll('#pomodoro div > div.length:nth-child(2n + 1)'),\r\n    breakSpans = document.querySelectorAll('#pomodoro div > div.length:nth-child(2n)'),\r\n    pomoStatus = document.getElementById('pomo-status')\r\nvar phase = 'work',\r\n    sessions = 0\r\n\r\n// increments timer times up and down\r\nfunction pomoTime(operator, mode) {\r\n    let incrementValue = 5\r\n    if (mode == 'work') {\r\n        // increase\r\n        if (operator == 'add' && workMin < 60) {\r\n            workMin += incrementValue\r\n        // decrease\r\n        } else if (operator == 'subtract' && workMin > 5) {\r\n            workMin -= incrementValue\r\n        }\r\n    } else if (mode == 'break') {\r\n        // increase\r\n        if (operator == 'add' && breakMin < 20) {\r\n            breakMin += incrementValue\r\n        // decrease\r\n        } else if (operator == 'subtract' && breakMin > 5) {\r\n            breakMin -= incrementValue\r\n        }\r\n    }\r\n    // set text content\r\n    pomoMin = workMin\r\n    pomoMinutes.textContent = round(pomoMin)\r\n    workMinutes.textContent = round(workMin)\r\n    breakMinutes.textContent = round(breakMin)\r\n    pomoLength()\r\n}\r\n\r\n\r\n// visualising the work and break times\r\nfunction pomoLength() {\r\n    // calculating distance\r\n    let total = workMin * 3 + breakMin * 2,\r\n        timelineLength = 232,\r\n        // timelineLength = timeline.getBoundingClientRect(width) - 4 * 4,\r\n        workLength = workMin / total * timelineLength,\r\n        breakLength = breakMin / total * timelineLength;\r\n\r\n    // apply relevant lengths\r\n    workSpans.forEach(function (span) {\r\n        span.style.width = workLength + 'px';\r\n    })\r\n\r\n    breakSpans.forEach(function (span) {\r\n        span.style.width = breakLength + 'px';\r\n    })\r\n}\r\n\r\npomoLength()\r\n// setting text content\r\nworkMinutes.textContent = round(workMin)\r\nbreakMinutes.textContent = round(breakMin)\r\n\r\nfunction pomodoroTimer(mode) {\r\n    // update 'status' for user when pomo time changes\r\n    pomoStatus.textContent = phase;\r\n    peekStatusDisplay.textContent = phase\r\n    // check sessions\r\n    if (sessions < 5) {\r\n        // alternate between sessions\r\n        if (phase == 'work') {\r\n            pomoMin = workMin\r\n            pomoSec = workSec\r\n            phase = 'break'\r\n        } else if (phase == 'break') {\r\n            pomoMin = breakMin\r\n            pomoSec = breakSec\r\n            phase = 'work'\r\n        }\r\n\r\n        // calculate the full time taken for each pomo phase\r\n        let fullTime;\r\n        if (phase == 'work') {\r\n            fullTime = breakSec + breakMin * 60\r\n\r\n        } else if (phase == 'break') {\r\n            fullTime = workSec + workMin * 60\r\n        }\r\n\r\n        // cancel the animations if timer is off\r\n        if (mode == 'static') {\r\n            loadSpans[sessions].style.animation = 'none'\r\n        } else {\r\n            loadSpans[sessions].style.animation = 'load-spans ' + fullTime + 's ' + 'linear forwards'\r\n        }\r\n\r\n        // show/hide relevant elements\r\n        finalLoadSpanContainer.style.display = 'none'\r\n        timeline.style.display = 'flex'\r\n    } else if (sessions == 5) {\r\n        // setting duration of final break\r\n        pomoMin = 30\r\n        pomoSec = 0\r\n        phase = 'finalbreak'\r\n        // enable animations\r\n        let fullTime = pomoMin * 60 + pomoSec\r\n        finalLoadSpanContainer.style.display = 'flex'\r\n        timeline.style.display = 'none'\r\n        finalLoadSpan.style.animation = 'load-spans ' + fullTime + 's ' + 'linear forwards'\r\n        \r\n    } else {\r\n        pomoAlarm.play()\r\n        // otherwise, the pomodoro has ended - reset everything\r\n        finalLoadSpanContainer.style.display = 'none'\r\n        timeline.style.display = 'flex'\r\n        endPomo()\r\n        phase = 'work'\r\n    }\r\n}\r\n\r\nfunction endPomo() {\r\n// both timers are inactive\r\ntimeToolsOverlay.setAttribute('static', 'true')\r\n\r\n// reset the pomo time\r\npomoMin = workMin\r\npomoSec = workSec\r\npomoMinutes.textContent = round(pomoMin)\r\npomoSeconds.textContent = round(pomoSec)\r\npeekMinutes.textContent = round(pomoMin)\r\npeekSeconds.textContent = round(pomoSec)\r\n\r\n// stop the countup intervals\r\nclearInterval(pomoIntervals)\r\n// reset the text\r\npomoStartStop.textContent = 'Start'\r\npomoStartStop.classList.remove('danger')\r\npomoStartStop.classList.add('primary')\r\n// allow dropdowns\r\ndropdown.addEventListener('click', toggleTimeMenu)\r\n\r\n// display/show relevant elements\r\nworkButtons.style.display = 'flex'\r\nbreakButtons.style.display = 'flex'\r\ntimer.style.display = 'none'\r\n\r\npomoOn = false\r\n\r\n// remove animation functions\r\nloadSpans.forEach(function (span) {\r\n    span.style.animation = ''\r\n})\r\nfinalLoadSpan.style.animation = 'none'\r\nsessions = 0\r\n}\r\n\r\n"],"names":["$0653d19d3f6f5b3abec08a250f73383f$var$timeToolsOverlay","document","getElementById","$0653d19d3f6f5b3abec08a250f73383f$var$timeSelector","$0653d19d3f6f5b3abec08a250f73383f$var$dropdown","$0653d19d3f6f5b3abec08a250f73383f$var$peekStatusDisplay","querySelector","$0653d19d3f6f5b3abec08a250f73383f$var$peekTimeDisplay","$0653d19d3f6f5b3abec08a250f73383f$var$peekMinutes","$0653d19d3f6f5b3abec08a250f73383f$var$peekSeconds","$0653d19d3f6f5b3abec08a250f73383f$var$timeMenuToggleOpen","$0653d19d3f6f5b3abec08a250f73383f$var$toggleTimeMenu","classList","addEventListener","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatch","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchSelector","$0653d19d3f6f5b3abec08a250f73383f$var$pomodoro","$0653d19d3f6f5b3abec08a250f73383f$var$pomodoroSelector","$0653d19d3f6f5b3abec08a250f73383f$var$setTimerType","currentTimer","id","add","remove","appendChild","$0653d19d3f6f5b3abec08a250f73383f$var$min","sec","milli","$0653d19d3f6f5b3abec08a250f73383f$var$minutes","$0653d19d3f6f5b3abec08a250f73383f$var$seconds","$0653d19d3f6f5b3abec08a250f73383f$var$milliseconds","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchStart","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchReset","$0653d19d3f6f5b3abec08a250f73383f$var$intervals","$0653d19d3f6f5b3abec08a250f73383f$var$start","$0653d19d3f6f5b3abec08a250f73383f$var$currentTime","$0653d19d3f6f5b3abec08a250f73383f$var$elapsedTime","$0653d19d3f6f5b3abec08a250f73383f$var$stringify","$0653d19d3f6f5b3abec08a250f73383f$var$stopwatchOn","$0653d19d3f6f5b3abec08a250f73383f$var$offset","textContent","$0653d19d3f6f5b3abec08a250f73383f$var$round","disabled","setAttribute","clearInterval","value","toLocaleString","minimumIntegerDigits","useGrouping","parseInt","incrementUp","Date","now","setInterval","removeEventListener","$0653d19d3f6f5b3abec08a250f73383f$var$workMin","$0653d19d3f6f5b3abec08a250f73383f$var$breakMin","$0653d19d3f6f5b3abec08a250f73383f$var$workMinutes","$0653d19d3f6f5b3abec08a250f73383f$var$breakMinutes","$0653d19d3f6f5b3abec08a250f73383f$var$pomoAlarm","$0653d19d3f6f5b3abec08a250f73383f$var$workButtons","$0653d19d3f6f5b3abec08a250f73383f$var$breakButtons","$0653d19d3f6f5b3abec08a250f73383f$var$timer","$0653d19d3f6f5b3abec08a250f73383f$var$workAdd","$0653d19d3f6f5b3abec08a250f73383f$var$workSubtract","$0653d19d3f6f5b3abec08a250f73383f$var$breakAdd","$0653d19d3f6f5b3abec08a250f73383f$var$breakSubtract","$0653d19d3f6f5b3abec08a250f73383f$var$pomoStartStop","$0653d19d3f6f5b3abec08a250f73383f$var$pomoMin","$0653d19d3f6f5b3abec08a250f73383f$var$pomoSec","$0653d19d3f6f5b3abec08a250f73383f$var$pomoMinutes","$0653d19d3f6f5b3abec08a250f73383f$var$pomoSeconds","$0653d19d3f6f5b3abec08a250f73383f$var$pomoIntervals","$0653d19d3f6f5b3abec08a250f73383f$var$pomoOn","$0653d19d3f6f5b3abec08a250f73383f$var$pomoTime","style","display","$0653d19d3f6f5b3abec08a250f73383f$var$timeline","$0653d19d3f6f5b3abec08a250f73383f$var$loadSpans","querySelectorAll","$0653d19d3f6f5b3abec08a250f73383f$var$finalLoadSpanContainer","$0653d19d3f6f5b3abec08a250f73383f$var$finalLoadSpan","$0653d19d3f6f5b3abec08a250f73383f$var$pomoLength","$0653d19d3f6f5b3abec08a250f73383f$var$endPomo","$0653d19d3f6f5b3abec08a250f73383f$var$phase","$0653d19d3f6f5b3abec08a250f73383f$var$pomodoroTimer","$0653d19d3f6f5b3abec08a250f73383f$var$sessions","play","$0653d19d3f6f5b3abec08a250f73383f$var$workSpans","$0653d19d3f6f5b3abec08a250f73383f$var$breakSpans","$0653d19d3f6f5b3abec08a250f73383f$var$pomoStatus","operator","mode","total","workLength","breakLength","forEach","span","width","fullTime","animation"],"version":3,"file":"index.HASH_REF_d80b52aa5c0e492d19168536c70f8f75.js.map"}